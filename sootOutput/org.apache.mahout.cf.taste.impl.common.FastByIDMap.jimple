public final class org.apache.mahout.cf.taste.impl.common.FastByIDMap extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    public static final int NO_MAX_SIZE;
    private static final float DEFAULT_LOAD_FACTOR;
    private static final long REMOVED;
    private static final long NULL;
    private long[] keys;
    private java.lang.Object[] values;
    private float loadFactor;
    private int numEntries;
    private int numSlotsUsed;
    private final int maxSize;
    private org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed;
    private final boolean countingAccesses;

    public void <init>()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>(int,int)>(2, 2147483647);

        return;
    }

    public void <init>(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>(int,int)>(i0, 2147483647);

        return;
    }

    public void <init>(int, float)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int i0;
        float f0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>(int,int,float)>(i0, 2147483647, f0);

        return;
    }

    public void <init>(int, int)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int i0, i1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>(int,int,float)>(i0, i1, 1.5F);

        return;
    }

    public void <init>(int, int, float)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int i0, i1, i2, i3, $i5;
        float f0, $f1, $f2, $f3;
        byte $b4;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        long[] $r5, $r7;
        java.lang.Object[] $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.mahout.cf.taste.impl.common.BitSet $r11;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "size must be at least 0");

        $b4 = f0 cmpl 1.0F;

        if $b4 < 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "loadFactor must be at least 1.0");

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: float loadFactor> = f0;

        $f1 = 2.14748301E9F / f0;

        i2 = (int) $f1;

        if i0 >= i2 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size must be less than ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z3, $r4);

        if i1 < 1 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z4, "maxSize must be at least 1");

        $f2 = (float) i0;

        $f3 = f0 * $f2;

        $i5 = (int) $f3;

        i3 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i5);

        $r5 = newarray (long)[i3];

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys> = $r5;

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r7, -9223372036854775808L);

        $r6 = newarray (java.lang.Object)[i3];

        $r8 = (java.lang.Object[]) $r6;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values> = $r8;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int maxSize> = i1;

        if i1 == 2147483647 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean countingAccesses> = $z5;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean countingAccesses>;

        if $z0 == 0 goto label11;

        $r11 = new org.apache.mahout.cf.taste.impl.common.BitSet;

        specialinvoke $r11.<org.apache.mahout.cf.taste.impl.common.BitSet: void <init>(int)>(i3);

        goto label12;

     label11:
        $r11 = null;

     label12:
        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed> = $r11;

        return;
    }

    private int find(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0, l11;
        int i1, i2, i3, $i4, $i5, $i6, $i9, i10, $i12;
        long[] r1;
        byte $b7, $b8;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        l0 := @parameter0: long;

        $i4 = (int) l0;

        i1 = $i4 & 2147483647;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        i2 = lengthof r1;

        $i5 = i2 - 2;

        $i6 = i1 % $i5;

        i3 = 1 + $i6;

        i10 = i1 % i2;

        l11 = r1[i10];

     label1:
        $b7 = l11 cmp -9223372036854775808L;

        if $b7 == 0 goto label4;

        $b8 = l0 cmp l11;

        if $b8 == 0 goto label4;

        $i9 = i10;

        if i10 >= i3 goto label2;

        $i12 = i3 - i2;

        goto label3;

     label2:
        $i12 = i3;

     label3:
        i10 = $i9 - $i12;

        l11 = r1[i10];

        goto label1;

     label4:
        return i10;
    }

    private int findForAdd(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0, l17;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i12, $i15, i16, $i18, $i20, $i21;
        long[] r1;
        byte $b8, $b9, $b10, $b11, $b13, $b14, $b19;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        l0 := @parameter0: long;

        $i5 = (int) l0;

        i1 = $i5 & 2147483647;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        i2 = lengthof r1;

        $i6 = i2 - 2;

        $i7 = i1 % $i6;

        i3 = 1 + $i7;

        i16 = i1 % i2;

        l17 = r1[i16];

     label01:
        $b8 = l17 cmp -9223372036854775808L;

        if $b8 == 0 goto label04;

        $b13 = l17 cmp 9223372036854775807L;

        if $b13 == 0 goto label04;

        $b14 = l0 cmp l17;

        if $b14 == 0 goto label04;

        $i15 = i16;

        if i16 >= i3 goto label02;

        $i18 = i3 - i2;

        goto label03;

     label02:
        $i18 = i3;

     label03:
        i16 = $i15 - $i18;

        l17 = r1[i16];

        goto label01;

     label04:
        $b19 = l17 cmp 9223372036854775807L;

        if $b19 == 0 goto label05;

        return i16;

     label05:
        i4 = i16;

     label06:
        $b10 = l17 cmp -9223372036854775808L;

        if $b10 == 0 goto label09;

        $b11 = l0 cmp l17;

        if $b11 == 0 goto label09;

        $i12 = i16;

        if i16 >= i3 goto label07;

        $i20 = i3 - i2;

        goto label08;

     label07:
        $i20 = i3;

     label08:
        i16 = $i12 - $i20;

        l17 = r1[i16];

        goto label06;

     label09:
        $b9 = l0 cmp l17;

        if $b9 != 0 goto label10;

        $i21 = i16;

        goto label11;

     label10:
        $i21 = i4;

     label11:
        return $i21;
    }

    public java.lang.Object get(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0;
        int i1;
        byte $b2;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        org.apache.mahout.cf.taste.impl.common.BitSet $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        l0 := @parameter0: long;

        $b2 = l0 cmp -9223372036854775808L;

        if $b2 != 0 goto label1;

        return null;

     label1:
        i1 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int find(long)>(l0);

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean countingAccesses>;

        if $z0 == 0 goto label2;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.BitSet: void set(int)>(i1);

     label2:
        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r2 = $r1[i1];

        return $r2;
    }

    public int size()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsKey(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0, $l4;
        byte $b1, $b2, $b5;
        long[] $r1;
        int $i3;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        l0 := @parameter0: long;

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 == 0 goto label1;

        $b2 = l0 cmp 9223372036854775807L;

        if $b2 == 0 goto label1;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $i3 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int find(long)>(l0);

        $l4 = $r1[$i3];

        $b5 = $l4 cmp -9223372036854775808L;

        if $b5 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        java.lang.Object r1, r3;
        java.lang.Object[] r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        if r3 == null goto label3;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public java.lang.Object put(long, java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0, l2;
        java.lang.Object r1, r2;
        int i1, $i4, $i5, $i6, $i7, $i8, $i9, $i12, $i13, $i16, $i17;
        byte $b3, $b10, $b11, $b14, $b15, $b18;
        boolean $z0, $z1;
        java.lang.Object[] $r4, $r5, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        long[] $r6, $r7, $r8;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.Object;

        $b3 = l0 cmp -9223372036854775808L;

        if $b3 == 0 goto label1;

        $b11 = l0 cmp 9223372036854775807L;

        if $b11 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i12 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numSlotsUsed>;

        $f4 = (float) $i12;

        $f5 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: float loadFactor>;

        $f6 = $f4 * $f5;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $i13 = lengthof $r6;

        $f7 = (float) $i13;

        $b14 = $f6 cmpl $f7;

        if $b14 < 0 goto label4;

        $i9 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        $f0 = (float) $i9;

        $f1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: float loadFactor>;

        $f2 = $f0 * $f1;

        $i8 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numSlotsUsed>;

        $f3 = (float) $i8;

        $b10 = $f2 cmpl $f3;

        if $b10 < 0 goto label3;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void growAndRehash()>();

        goto label4;

     label3:
        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void rehash()>();

     label4:
        i1 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int findForAdd(long)>(l0);

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        l2 = $r7[i1];

        $b15 = l2 cmp l0;

        if $b15 != 0 goto label5;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        r2 = $r4[i1];

        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r5[i1] = r1;

        return r2;

     label5:
        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean countingAccesses>;

        if $z0 == 0 goto label6;

        $i6 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        $i7 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int maxSize>;

        if $i6 < $i7 goto label6;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void clearStaleEntry(int)>(i1);

     label6:
        $r8 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $r8[i1] = l0;

        $r9 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r9[i1] = r1;

        $i16 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        $i17 = $i16 + 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries> = $i17;

        $b18 = l2 cmp -9223372036854775808L;

        if $b18 != 0 goto label7;

        $i4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numSlotsUsed>;

        $i5 = $i4 + 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numSlotsUsed> = $i5;

     label7:
        return null;
    }

    private void clearStaleEntry(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0;
        long[] $r1, $r3, $r6;
        byte $b1, $b2;
        org.apache.mahout.cf.taste.impl.common.BitSet $r2, $r5;
        boolean $z0;
        int $i3, $i4, $i5, i6;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i6 := @parameter0: int;

     label1:
        if i6 != 0 goto label2;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $i5 = lengthof $r6;

        i6 = $i5 - 1;

        goto label3;

     label2:
        i6 = i6 + -1;

     label3:
        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        l0 = $r1[i6];

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 == 0 goto label1;

        $b2 = l0 cmp 9223372036854775807L;

        if $b2 == 0 goto label1;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        $z0 = virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.BitSet: boolean get(int)>(i6);

        if $z0 == 0 goto label4;

        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        virtualinvoke $r5.<org.apache.mahout.cf.taste.impl.common.BitSet: void clear(int)>(i6);

        goto label1;

     label4:
        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $r3[i6] = 9223372036854775807L;

        $i3 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        $i4 = $i3 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries> = $i4;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r4[i6] = null;

        return;
    }

    public java.lang.Object remove(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0, $l4;
        int i1, $i6, $i7;
        java.lang.Object r1;
        byte $b2, $b3, $b5;
        long[] $r2, $r3;
        java.lang.Object[] $r4, $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        l0 := @parameter0: long;

        $b2 = l0 cmp -9223372036854775808L;

        if $b2 == 0 goto label1;

        $b3 = l0 cmp 9223372036854775807L;

        if $b3 != 0 goto label2;

     label1:
        return null;

     label2:
        i1 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int find(long)>(l0);

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $l4 = $r2[i1];

        $b5 = $l4 cmp -9223372036854775808L;

        if $b5 != 0 goto label3;

        return null;

     label3:
        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $r3[i1] = 9223372036854775807L;

        $i6 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        $i7 = $i6 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries> = $i7;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        r1 = $r4[i1];

        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r5[i1] = null;

        return r1;
    }

    public void clear()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long[] $r1;
        java.lang.Object[] $r2;
        boolean $z0;
        org.apache.mahout.cf.taste.impl.common.BitSet $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries> = 0;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numSlotsUsed> = 0;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r1, -9223372036854775808L);

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r2, null);

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean countingAccesses>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.BitSet: void clear()>();

     label1:
        return;
    }

    public org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator keySetIterator()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap$KeyIterator $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r1 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap$KeyIterator;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap$KeyIterator: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap$1)>(r0, null);

        return $r1;
    }

    public java.util.Set entrySet()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap$EntrySet $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r1 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap$EntrySet;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap$EntrySet: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap$1)>(r0, null);

        return $r1;
    }

    public java.util.Collection values()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap$ValueCollection $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r1 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap$ValueCollection;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap$ValueCollection: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap$1)>(r0, null);

        return $r1;
    }

    public void rehash()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $f1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: float loadFactor>;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        $f0 = (float) $i0;

        $f2 = $f1 * $f0;

        $i1 = (int) $f2;

        $i2 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i1);

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void rehash(int)>($i2);

        return;
    }

    private void growAndRehash()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long[] $r1, $r2;
        int $i0, $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b1;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $i0 = lengthof $r1;

        $f1 = (float) $i0;

        $f0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: float loadFactor>;

        $f2 = $f1 * $f0;

        $b1 = $f2 cmpl 2.14748301E9F;

        if $b1 < 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t grow any more");

        throw $r3;

     label1:
        $f4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: float loadFactor>;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $i2 = lengthof $r2;

        $f3 = (float) $i2;

        $f5 = $f4 * $f3;

        $i3 = (int) $f5;

        $i4 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i3);

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void rehash(int)>($i4);

        return;
    }

    private void rehash(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int i0, i1, i5;
        long[] r1, $r3, $r4;
        java.lang.Object[] r2, $r5, $r6;
        long l2;
        boolean $z0;
        byte $b3, $b4;
        java.lang.Object $r7;
        org.apache.mahout.cf.taste.impl.common.BitSet $r8;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries> = 0;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numSlotsUsed> = 0;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean countingAccesses>;

        if $z0 == 0 goto label1;

        $r8 = new org.apache.mahout.cf.taste.impl.common.BitSet;

        specialinvoke $r8.<org.apache.mahout.cf.taste.impl.common.BitSet: void <init>(int)>(i0);

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed> = $r8;

     label1:
        $r3 = newarray (long)[i0];

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys> = $r3;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r4, -9223372036854775808L);

        $r5 = newarray (java.lang.Object)[i0];

        $r6 = (java.lang.Object[]) $r5;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values> = $r6;

        i1 = lengthof r1;

        i5 = 0;

     label2:
        if i5 >= i1 goto label4;

        l2 = r1[i5];

        $b3 = l2 cmp -9223372036854775808L;

        if $b3 == 0 goto label3;

        $b4 = l2 cmp 9223372036854775807L;

        if $b4 == 0 goto label3;

        $r7 = r2[i5];

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l2, $r7);

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        return;
    }

    void iteratorRemove(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r1, $r2;
        long[] $r3;
        java.lang.IllegalStateException $r4;
        java.util.NoSuchElementException $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        $r5 = new java.util.NoSuchElementException;

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>()>();

        throw $r5;

     label1:
        if i0 >= 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label2:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r2[i0] = null;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $r3[i0] = 9223372036854775807L;

        $i2 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries>;

        $i3 = $i2 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int numEntries> = $i3;

        return;
    }

    public org.apache.mahout.cf.taste.impl.common.FastByIDMap clone()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0, r1;
        java.lang.Object $r3, $r5, $r8;
        long[] $r4, $r6, $r10;
        java.lang.Object[] $r7, $r9;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r12;
        java.lang.CloneNotSupportedException $r13;
        org.apache.mahout.cf.taste.impl.common.BitSet $r14;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.mahout.cf.taste.impl.common.FastByIDMap) $r3;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label4:
        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (long[]) $r5;

        r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys> = $r6;

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (java.lang.Object[]) $r8;

        r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values> = $r9;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean countingAccesses>;

        if $z0 == 0 goto label5;

        $r14 = new org.apache.mahout.cf.taste.impl.common.BitSet;

        $r10 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $i0 = lengthof $r10;

        specialinvoke $r14.<org.apache.mahout.cf.taste.impl.common.BitSet: void <init>(int)>($i0);

        goto label6;

     label5:
        $r14 = null;

     label6:
        r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed> = $r14;

        return r1;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long l0;
        boolean $z0;
        java.lang.StringBuilder $r2, $r7, $r8, $r12;
        long[] $r4, $r6;
        int $i1, $i2, $i3, i6;
        java.lang.String $r5;
        byte $b4, $b5;
        java.lang.Object $r9;
        java.lang.Object[] $r10;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i6 = 0;

     label2:
        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        $i1 = lengthof $r4;

        if i6 >= $i1 goto label4;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        l0 = $r6[i6];

        $b4 = l0 cmp -9223372036854775808L;

        if $b4 == 0 goto label3;

        $b5 = l0 cmp 9223372036854775807L;

        if $b5 == 0 goto label3;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r10 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r9 = $r10[i6];

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 1;

        virtualinvoke $r2.<java.lang.StringBuilder: void setCharAt(int,char)>($i3, 125);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int hashCode()
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long[] r1;
        int i0, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        long l1, $l4;
        byte $b2, $b3;
        java.lang.Object $r2;
        java.lang.Object[] $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        i11 = 0;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        i0 = lengthof r1;

        i12 = 0;

     label1:
        if i12 >= i0 goto label3;

        l1 = r1[i12];

        $b2 = l1 cmp -9223372036854775808L;

        if $b2 == 0 goto label2;

        $b3 = l1 cmp 9223372036854775807L;

        if $b3 == 0 goto label2;

        $i8 = 31 * i11;

        $l4 = l1 >> 32;

        $i6 = (int) $l4;

        $i5 = (int) l1;

        $i7 = $i6 ^ $i5;

        i13 = $i8 + $i7;

        $i10 = 31 * i13;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r2 = $r3[i12];

        $i9 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i11 = $i10 + $i9;

     label2:
        i12 = i12 + 1;

        goto label1;

     label3:
        return i11;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0, r2;
        java.lang.Object r1, $r8, $r9;
        long[] r3, $r5, $r6, $r7;
        java.lang.Object[] r4, $r10;
        int i0, i1, i2, i13;
        long l3, l14, l15, l16;
        boolean $z0, $z1;
        byte $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (org.apache.mahout.cf.taste.impl.common.FastByIDMap) r1;

        r3 = r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        r4 = r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        i0 = lengthof $r5;

        i1 = lengthof r3;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i13 = 0;

     label02:
        if i13 >= i2 goto label07;

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        l14 = $r7[i13];

        l3 = r3[i13];

        $b9 = l14 cmp -9223372036854775808L;

        if $b9 == 0 goto label03;

        $b10 = l14 cmp 9223372036854775807L;

        if $b10 != 0 goto label04;

     label03:
        $b8 = l3 cmp -9223372036854775808L;

        if $b8 == 0 goto label06;

        $b11 = l3 cmp 9223372036854775807L;

        if $b11 == 0 goto label06;

        return 0;

     label04:
        $b12 = l14 cmp l3;

        if $b12 != 0 goto label05;

        $r10 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        $r9 = $r10[i13];

        $r8 = r4[i13];

        $z1 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label06;

     label05:
        return 0;

     label06:
        i13 = i13 + 1;

        goto label02;

     label07:
        if i13 >= i0 goto label09;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        l15 = $r6[i13];

        $b6 = l15 cmp -9223372036854775808L;

        if $b6 == 0 goto label08;

        $b7 = l15 cmp 9223372036854775807L;

        if $b7 == 0 goto label08;

        return 0;

     label08:
        i13 = i13 + 1;

        goto label07;

     label09:
        if i13 >= i1 goto label11;

        l16 = r3[i13];

        $b4 = l16 cmp -9223372036854775808L;

        if $b4 == 0 goto label10;

        $b5 = l16 cmp 9223372036854775807L;

        if $b5 == 0 goto label10;

        return 0;

     label10:
        i13 = i13 + 1;

        goto label09;

     label11:
        return 1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0, $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: org.apache.mahout.cf.taste.impl.common.FastByIDMap clone()>();

        return $r1;
    }

    static long[] access$300(org.apache.mahout.cf.taste.impl.common.FastByIDMap)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        long[] $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: long[] keys>;

        return $r1;
    }

    static java.lang.Object[] access$400(org.apache.mahout.cf.taste.impl.common.FastByIDMap)
    {
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object[] values>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.cf.taste.impl.common.FastByIDMap: long NULL> = -9223372036854775808L;

        <org.apache.mahout.cf.taste.impl.common.FastByIDMap: long REMOVED> = 9223372036854775807L;

        <org.apache.mahout.cf.taste.impl.common.FastByIDMap: float DEFAULT_LOAD_FACTOR> = 1.5F;

        <org.apache.mahout.cf.taste.impl.common.FastByIDMap: int NO_MAX_SIZE> = 2147483647;

        return;
    }
}
