public abstract class org.hipi.image.RasterImage extends org.hipi.image.HipiImage
{
    protected org.hipi.image.PixelArray pixelArray;
    static final boolean $assertionsDisabled;

    protected void <init>(org.hipi.image.PixelArray)
    {
        org.hipi.image.RasterImage r0;
        org.hipi.image.PixelArray r1;

        r0 := @this: org.hipi.image.RasterImage;

        r1 := @parameter0: org.hipi.image.PixelArray;

        specialinvoke r0.<org.hipi.image.HipiImage: void <init>()>();

        r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray> = r1;

        return;
    }

    public void setHeader(org.hipi.image.HipiImageHeader) throws java.lang.IllegalArgumentException
    {
        org.hipi.image.RasterImage r0;
        org.hipi.image.HipiImageHeader r1;
        int i0, $i1, $i2, $i3, $i4;
        org.hipi.image.PixelArray $r2;

        r0 := @this: org.hipi.image.RasterImage;

        r1 := @parameter0: org.hipi.image.HipiImageHeader;

        specialinvoke r0.<org.hipi.image.HipiImage: void setHeader(org.hipi.image.HipiImageHeader)>(r1);

        $i1 = virtualinvoke r1.<org.hipi.image.HipiImageHeader: int getWidth()>();

        $i2 = virtualinvoke r1.<org.hipi.image.HipiImageHeader: int getHeight()>();

        $i3 = $i1 * $i2;

        $i4 = virtualinvoke r1.<org.hipi.image.HipiImageHeader: int getNumBands()>();

        i0 = $i3 * $i4;

        $r2 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        virtualinvoke $r2.<org.hipi.image.PixelArray: void setSize(int)>(i0);

        return;
    }

    public org.hipi.image.PixelArray getPixelArray()
    {
        org.hipi.image.RasterImage r0;
        org.hipi.image.PixelArray $r1;

        r0 := @this: org.hipi.image.RasterImage;

        $r1 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        return $r1;
    }

    public abstract boolean equalsWithTolerance(org.hipi.image.RasterImage, float);

    public abstract boolean equals(java.lang.Object);

    public void crop(int, int, int, int, org.hipi.image.RasterImage) throws java.lang.IllegalArgumentException
    {
        org.hipi.image.RasterImage r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, i27;
        org.hipi.image.PixelArray r2, $r3;
        java.lang.IllegalArgumentException $r4, $r5;

        r0 := @this: org.hipi.image.RasterImage;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r1 := @parameter4: org.hipi.image.RasterImage;

        i4 = virtualinvoke r0.<org.hipi.image.RasterImage: int getWidth()>();

        i5 = virtualinvoke r0.<org.hipi.image.RasterImage: int getHeight()>();

        i6 = virtualinvoke r0.<org.hipi.image.RasterImage: int getNumBands()>();

        if i0 < 0 goto label01;

        if i2 <= 0 goto label01;

        $i8 = i0 + i2;

        if $i8 > i4 goto label01;

        if i1 < 0 goto label01;

        if i3 <= 0 goto label01;

        $i7 = i1 + i3;

        if $i7 <= i5 goto label02;

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid crop region.");

        throw $r4;

     label02:
        $i9 = virtualinvoke r1.<org.hipi.image.RasterImage: int getWidth()>();

        if i2 != $i9 goto label03;

        $i10 = virtualinvoke r1.<org.hipi.image.RasterImage: int getHeight()>();

        if i3 != $i10 goto label03;

        $i11 = virtualinvoke r1.<org.hipi.image.RasterImage: int getNumBands()>();

        if i6 == $i11 goto label04;

     label03:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Mismatch between size of crop region and size of crop output target.");

        throw $r5;

     label04:
        r2 = virtualinvoke r1.<org.hipi.image.RasterImage: org.hipi.image.PixelArray getPixelArray()>();

        i25 = i1;

     label05:
        $i13 = i1 + i3;

        if i25 >= $i13 goto label10;

        i26 = i0;

     label06:
        $i12 = i0 + i2;

        if i26 >= $i12 goto label09;

        i27 = 0;

     label07:
        if i27 >= i6 goto label08;

        $i14 = i25 - i1;

        $i18 = $i14 * i2;

        $i15 = i26 - i0;

        $i19 = $i18 + $i15;

        $i16 = $i19 * i6;

        $i23 = $i16 + i27;

        $r3 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $i17 = i25 * i4;

        $i21 = $i17 + i26;

        $i22 = $i21 * i6;

        $i20 = $i22 + i27;

        $i24 = virtualinvoke $r3.<org.hipi.image.PixelArray: int getElem(int)>($i20);

        virtualinvoke r2.<org.hipi.image.PixelArray: void setElem(int,int)>($i23, $i24);

        i27 = i27 + 1;

        goto label07;

     label08:
        i26 = i26 + 1;

        goto label06;

     label09:
        i25 = i25 + 1;

        goto label05;

     label10:
        return;
    }

    public void convertToColorSpace(org.hipi.image.HipiImageHeader$HipiColorSpace, org.hipi.image.RasterImage) throws java.lang.IllegalArgumentException
    {
        org.hipi.image.RasterImage r0, r2;
        org.hipi.image.HipiImageHeader$HipiColorSpace r1, $r4, $r5, $r6, $r7, $r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24;
        org.hipi.image.PixelArray r3, $r10, $r11, $r12;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        java.lang.IllegalArgumentException $r8, $r13, $r15;
        boolean $z0;
        java.lang.AssertionError $r14;

        r0 := @this: org.hipi.image.RasterImage;

        r1 := @parameter0: org.hipi.image.HipiImageHeader$HipiColorSpace;

        r2 := @parameter1: org.hipi.image.RasterImage;

        $r4 = virtualinvoke r0.<org.hipi.image.RasterImage: org.hipi.image.HipiImageHeader$HipiColorSpace getColorSpace()>();

        if $r4 != r1 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot convert color space to itself.");

        throw $r13;

     label1:
        $r5 = virtualinvoke r0.<org.hipi.image.RasterImage: org.hipi.image.HipiImageHeader$HipiColorSpace getColorSpace()>();

        $r6 = <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace RGB>;

        if $r5 != $r6 goto label8;

        $r7 = virtualinvoke r2.<org.hipi.image.RasterImage: org.hipi.image.HipiImageHeader$HipiColorSpace getColorSpace()>();

        $r9 = <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace LUM>;

        if $r7 != $r9 goto label8;

        i0 = virtualinvoke r0.<org.hipi.image.RasterImage: int getWidth()>();

        i1 = virtualinvoke r0.<org.hipi.image.RasterImage: int getHeight()>();

        i2 = virtualinvoke r0.<org.hipi.image.RasterImage: int getNumBands()>();

        $z0 = <org.hipi.image.RasterImage: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i2 == 3 goto label2;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label2:
        $i3 = virtualinvoke r2.<org.hipi.image.RasterImage: int getWidth()>();

        if i0 != $i3 goto label3;

        $i4 = virtualinvoke r2.<org.hipi.image.RasterImage: int getHeight()>();

        if i1 != $i4 goto label3;

        $i5 = virtualinvoke r2.<org.hipi.image.RasterImage: int getNumBands()>();

        if 1 == $i5 goto label4;

     label3:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid dimensions in color convert output target.");

        throw $r15;

     label4:
        r3 = virtualinvoke r2.<org.hipi.image.RasterImage: org.hipi.image.PixelArray getPixelArray()>();

        i23 = 0;

     label5:
        if i23 >= i1 goto label9;

        i24 = 0;

     label6:
        if i24 >= i0 goto label7;

        $r10 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $i8 = i23 * i0;

        $i6 = $i8 + i24;

        $i7 = $i6 * 3;

        $i11 = $i7 + 0;

        $i9 = virtualinvoke $r10.<org.hipi.image.PixelArray: int getElem(int)>($i11);

        f0 = (float) $i9;

        $r11 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $i10 = i23 * i0;

        $i13 = $i10 + i24;

        $i14 = $i13 * 3;

        $i12 = $i14 + 0;

        $i17 = virtualinvoke $r11.<org.hipi.image.PixelArray: int getElem(int)>($i12);

        f1 = (float) $i17;

        $r12 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $i18 = i23 * i0;

        $i15 = $i18 + i24;

        $i16 = $i15 * 3;

        $i20 = $i16 + 0;

        $i19 = virtualinvoke $r12.<org.hipi.image.PixelArray: int getElem(int)>($i20);

        f2 = (float) $i19;

        $f7 = f0 * 0.3F;

        $f4 = f1 * 0.59F;

        $f5 = $f7 + $f4;

        $f6 = f2 * 0.11F;

        f3 = $f5 + $f6;

        $i21 = i23 * i0;

        $i22 = $i21 + i24;

        virtualinvoke r3.<org.hipi.image.PixelArray: void setElemFloat(int,float)>($i22, f3);

        i24 = i24 + 1;

        goto label6;

     label7:
        i23 = i23 + 1;

        goto label5;

     label8:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not implemented.");

        throw $r8;

     label9:
        return;
    }

    public java.lang.String toString()
    {
        org.hipi.image.RasterImage r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15;
        int[] $r2;
        org.hipi.image.HipiImage$HipiImageType $r3, $r9, $r10;
        java.lang.String $r7, $r19, r20, $r26;
        org.hipi.image.PixelArray $r12, $r15;
        java.lang.Object[] $r16, $r22;
        java.lang.Float $r17;
        float $f0;
        java.lang.StringBuilder $r21;
        java.lang.Integer $r23, $r24, $r25;

        r0 := @this: org.hipi.image.RasterImage;

        r20 = "UNDEFINED IMAGE TYPE";

        $r2 = <org.hipi.image.RasterImage$1: int[] $SwitchMap$org$hipi$image$HipiImage$HipiImageType>;

        $r3 = virtualinvoke r0.<org.hipi.image.RasterImage: org.hipi.image.HipiImage$HipiImageType getType()>();

        $i4 = virtualinvoke $r3.<org.hipi.image.HipiImage$HipiImageType: int ordinal()>();

        $i5 = $r2[$i4];

        lookupswitch($i5)
        {
            case 1: goto label01;
            case 2: goto label02;
            default: goto label03;
        };

     label01:
        r20 = "FloatImage";

        goto label03;

     label02:
        r20 = "ByteImage";

     label03:
        i0 = virtualinvoke r0.<org.hipi.image.RasterImage: int getWidth()>();

        i1 = virtualinvoke r0.<org.hipi.image.RasterImage: int getHeight()>();

        i2 = virtualinvoke r0.<org.hipi.image.RasterImage: int getNumBands()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = newarray (java.lang.Object)[4];

        $r22[0] = r20;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r22[1] = $r23;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r22[2] = $r24;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r22[3] = $r25;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %d x %d x %d [", $r22);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $i13 = i0 * i1;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(10, $i13);

        i14 = 0;

     label04:
        if i14 >= i3 goto label12;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        i15 = 0;

     label05:
        if i15 >= i2 goto label10;

        $r9 = virtualinvoke r0.<org.hipi.image.RasterImage: org.hipi.image.HipiImage$HipiImageType getType()>();

        $r10 = <org.hipi.image.HipiImage$HipiImageType: org.hipi.image.HipiImage$HipiImageType FLOAT>;

        if $r9 != $r10 goto label06;

        $r16 = newarray (java.lang.Object)[1];

        $r15 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $i12 = i14 * i2;

        $i11 = $i12 + i15;

        $f0 = virtualinvoke $r15.<org.hipi.image.PixelArray: float getElemFloat(int)>($i11);

        $r17 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r16[0] = $r17;

        $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r16);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        goto label07;

     label06:
        $r12 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $i7 = i14 * i2;

        $i8 = $i7 + i15;

        $i10 = virtualinvoke $r12.<org.hipi.image.PixelArray: int getElem(int)>($i8);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

     label07:
        $i9 = i2 - 1;

        if i15 >= $i9 goto label08;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label09;

     label08:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label09:
        i15 = i15 + 1;

        goto label05;

     label10:
        $i6 = i3 - 1;

        if i14 >= $i6 goto label11;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label11:
        i14 = i14 + 1;

        goto label04;

     label12:
        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void set(org.hipi.image.RasterImage)
    {
        org.hipi.image.RasterImage r0, r1;
        org.hipi.image.HipiImageHeader $r2;
        org.hipi.image.PixelArray $r3;

        r0 := @this: org.hipi.image.RasterImage;

        r1 := @parameter0: org.hipi.image.RasterImage;

        $r2 = r1.<org.hipi.image.RasterImage: org.hipi.image.HipiImageHeader header>;

        r0.<org.hipi.image.RasterImage: org.hipi.image.HipiImageHeader header> = $r2;

        $r3 = r1.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray> = $r3;

        return;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.hipi.image.RasterImage r0;
        java.io.DataOutput r1;
        org.hipi.image.HipiImageHeader $r2;
        org.hipi.image.PixelArray $r3;
        byte[] $r4;

        r0 := @this: org.hipi.image.RasterImage;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<org.hipi.image.RasterImage: org.hipi.image.HipiImageHeader header>;

        virtualinvoke $r2.<org.hipi.image.HipiImageHeader: void write(java.io.DataOutput)>(r1);

        $r3 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $r4 = virtualinvoke $r3.<org.hipi.image.PixelArray: byte[] getByteArray()>();

        interfaceinvoke r1.<java.io.DataOutput: void write(byte[])>($r4);

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        org.hipi.image.RasterImage r0;
        java.io.DataInput r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        byte[] r2;
        org.hipi.image.HipiImageHeader $r3;
        org.hipi.image.PixelArray $r4, $r5;

        r0 := @this: org.hipi.image.RasterImage;

        r1 := @parameter0: java.io.DataInput;

        $r3 = new org.hipi.image.HipiImageHeader;

        specialinvoke $r3.<org.hipi.image.HipiImageHeader: void <init>(java.io.DataInput)>(r1);

        r0.<org.hipi.image.RasterImage: org.hipi.image.HipiImageHeader header> = $r3;

        i0 = virtualinvoke r0.<org.hipi.image.RasterImage: int getWidth()>();

        i1 = virtualinvoke r0.<org.hipi.image.RasterImage: int getHeight()>();

        i2 = virtualinvoke r0.<org.hipi.image.RasterImage: int getNumBands()>();

        $i4 = i0 * i1;

        $i5 = $i4 * i2;

        $r4 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        $i6 = virtualinvoke $r4.<org.hipi.image.PixelArray: int getDataType()>();

        $i7 = staticinvoke <org.hipi.image.PixelArray: int getDataTypeSize(int)>($i6);

        i3 = $i5 * $i7;

        r2 = newarray (byte)[i3];

        interfaceinvoke r1.<java.io.DataInput: void readFully(byte[])>(r2);

        $r5 = r0.<org.hipi.image.RasterImage: org.hipi.image.PixelArray pixelArray>;

        virtualinvoke $r5.<org.hipi.image.PixelArray: void setFromByteArray(byte[])>(r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "org/hipi/image/RasterImage";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.hipi.image.RasterImage: boolean $assertionsDisabled> = $z1;

        return;
    }
}
