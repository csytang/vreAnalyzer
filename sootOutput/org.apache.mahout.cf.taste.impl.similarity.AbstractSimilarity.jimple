abstract class org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity extends org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity implements org.apache.mahout.cf.taste.similarity.UserSimilarity
{
    private org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer;
    private final boolean weighted;
    private final boolean centerData;
    private int cachedNumItems;
    private int cachedNumUsers;
    private final org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper;

    void <init>(org.apache.mahout.cf.taste.model.DataModel, org.apache.mahout.cf.taste.common.Weighting, boolean) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        org.apache.mahout.cf.taste.model.DataModel r1;
        org.apache.mahout.cf.taste.common.Weighting r2, $r3;
        boolean z0, $z1;
        int $i0, $i1;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r4;
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity$1 $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        r1 := @parameter0: org.apache.mahout.cf.taste.model.DataModel;

        r2 := @parameter1: org.apache.mahout.cf.taste.common.Weighting;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: void <init>(org.apache.mahout.cf.taste.model.DataModel)>(r1);

        $r3 = <org.apache.mahout.cf.taste.common.Weighting: org.apache.mahout.cf.taste.common.Weighting WEIGHTED>;

        if r2 != $r3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: boolean weighted> = $z1;

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: boolean centerData> = z0;

        $i0 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: int getNumItems()>();

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: int cachedNumItems> = $i0;

        $i1 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: int getNumUsers()>();

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: int cachedNumUsers> = $i1;

        $r4 = new org.apache.mahout.cf.taste.impl.common.RefreshHelper;

        $r5 = new org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity$1;

        specialinvoke $r5.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity$1: void <init>(org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity,org.apache.mahout.cf.taste.model.DataModel)>(r0, r1);

        specialinvoke $r4.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void <init>(java.util.concurrent.Callable)>($r5);

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper> = $r4;

        return;
    }

    final org.apache.mahout.cf.taste.similarity.PreferenceInferrer getPreferenceInferrer()
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        org.apache.mahout.cf.taste.similarity.PreferenceInferrer $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer>;

        return $r1;
    }

    public final void setPreferenceInferrer(org.apache.mahout.cf.taste.similarity.PreferenceInferrer)
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        org.apache.mahout.cf.taste.similarity.PreferenceInferrer r1, $r3;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        r1 := @parameter0: org.apache.mahout.cf.taste.similarity.PreferenceInferrer;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "inferrer is null");

        $r2 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void addDependency(org.apache.mahout.cf.taste.common.Refreshable)>(r1);

        $r4 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer>;

        virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void removeDependency(org.apache.mahout.cf.taste.common.Refreshable)>($r3);

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer> = r1;

        return;
    }

    final boolean isWeighted()
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: boolean weighted>;

        return $z0;
    }

    abstract double computeResult(int, double, double, double, double);

    public double userSimilarity(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        long l0, l1, l9, l10;
        org.apache.mahout.cf.taste.model.DataModel r1;
        org.apache.mahout.cf.taste.model.PreferenceArray r2, r3;
        int i2, i3, $i6, i11, i12, i13;
        boolean z0, $z1, $z2, $z3;
        double d0, d1, d2, d3, d4, d5, $d6, $d7, $d8, $d9, $d10, d11, d12, d13, d14, d15, d16, d17, d18, $d19, $d20, $d21, $d22, d23;
        byte $b4, $b5, $b7, $b8, $b14, $b15, b16;
        org.apache.mahout.cf.taste.similarity.PreferenceInferrer $r4, $r5, $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        r2 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesFromUser(long)>(l0);

        r3 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesFromUser(long)>(l1);

        i2 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        i3 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        if i2 == 0 goto label01;

        if i3 != 0 goto label02;

     label01:
        return #NaN;

     label02:
        l9 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: long getItemID(int)>(0);

        l10 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: long getItemID(int)>(0);

        i11 = 0;

        i12 = 0;

        d11 = 0.0;

        d12 = 0.0;

        d13 = 0.0;

        d14 = 0.0;

        d15 = 0.0;

        d16 = 0.0;

        i13 = 0;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer>;

        if $r4 == null goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

     label05:
        $b14 = l9 cmp l10;

        if $b14 >= 0 goto label06;

        $b15 = -1;

        goto label08;

     label06:
        $b4 = l9 cmp l10;

        if $b4 <= 0 goto label07;

        $b15 = 1;

        goto label08;

     label07:
        $b15 = 0;

     label08:
        b16 = $b15;

        if z0 != 0 goto label09;

        if $b15 != 0 goto label13;

     label09:
        $b5 = l9 cmp l10;

        if $b5 != 0 goto label10;

        $f4 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: float getValue(int)>(i11);

        d17 = (double) $f4;

        $f5 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: float getValue(int)>(i12);

        d18 = (double) $f5;

        goto label12;

     label10:
        if b16 >= 0 goto label11;

        $f2 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: float getValue(int)>(i11);

        d17 = (double) $f2;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer>;

        $f3 = interfaceinvoke $r6.<org.apache.mahout.cf.taste.similarity.PreferenceInferrer: float inferPreference(long,long)>(l1, l9);

        d18 = (double) $f3;

        goto label12;

     label11:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer>;

        $f1 = interfaceinvoke $r5.<org.apache.mahout.cf.taste.similarity.PreferenceInferrer: float inferPreference(long,long)>(l0, l10);

        d17 = (double) $f1;

        $f0 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: float getValue(int)>(i12);

        d18 = (double) $f0;

     label12:
        $d19 = d17 * d18;

        d15 = d15 + $d19;

        d11 = d11 + d17;

        $d20 = d17 * d17;

        d12 = d12 + $d20;

        d13 = d13 + d18;

        $d21 = d18 * d18;

        d14 = d14 + $d21;

        d1 = d17 - d18;

        $d22 = d1 * d1;

        d16 = d16 + $d22;

        i13 = i13 + 1;

     label13:
        if b16 > 0 goto label16;

        i11 = i11 + 1;

        if i11 < i2 goto label15;

        if z0 == 0 goto label19;

        $b8 = l10 cmp 9223372036854775807L;

        if $b8 != 0 goto label14;

        goto label19;

     label14:
        l9 = 9223372036854775807L;

        goto label16;

     label15:
        l9 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: long getItemID(int)>(i11);

     label16:
        if b16 < 0 goto label05;

        i12 = i12 + 1;

        if i12 < i3 goto label18;

        if z0 == 0 goto label19;

        $b7 = l9 cmp 9223372036854775807L;

        if $b7 != 0 goto label17;

        goto label19;

     label17:
        l10 = 9223372036854775807L;

        goto label05;

     label18:
        l10 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: long getItemID(int)>(i12);

        goto label05;

     label19:
        $z3 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: boolean centerData>;

        if $z3 == 0 goto label20;

        $d6 = (double) i13;

        d2 = d11 / $d6;

        $d7 = (double) i13;

        d0 = d13 / $d7;

        $d8 = d0 * d11;

        d4 = d15 - $d8;

        $d9 = d2 * d11;

        d3 = d12 - $d9;

        $d10 = d0 * d13;

        d5 = d14 - $d10;

        d23 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: double computeResult(int,double,double,double,double)>(i13, d4, d3, d5, d16);

        goto label21;

     label20:
        d23 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: double computeResult(int,double,double,double,double)>(i13, d15, d12, d14, d16);

     label21:
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d23);

        if $z1 != 0 goto label22;

        $i6 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: int cachedNumItems>;

        d23 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: double normalizeWeightResult(double,int,int)>(d23, i13, $i6);

     label22:
        return d23;
    }

    public final double itemSimilarity(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        long l0, l1, l7, l8;
        org.apache.mahout.cf.taste.model.DataModel r1;
        org.apache.mahout.cf.taste.model.PreferenceArray r2, r3;
        int i2, i3, $i6, i9, i10, i11;
        double d0, d1, d2, d3, d4, d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, d18, d19, d20, d21, d22;
        byte $b4, $b5, $b12, b13;
        boolean $z0, $z1;
        float $f0, $f1;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        r2 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesForItem(long)>(l0);

        r3 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesForItem(long)>(l1);

        i2 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        i3 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        if i2 == 0 goto label01;

        if i3 != 0 goto label02;

     label01:
        return #NaN;

     label02:
        l7 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: long getUserID(int)>(0);

        l8 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: long getUserID(int)>(0);

        i9 = 0;

        i10 = 0;

        d16 = 0.0;

        d17 = 0.0;

        d18 = 0.0;

        d19 = 0.0;

        d20 = 0.0;

        d21 = 0.0;

        i11 = 0;

     label03:
        $b5 = l7 cmp l8;

        if $b5 >= 0 goto label04;

        $b12 = -1;

        goto label06;

     label04:
        $b4 = l7 cmp l8;

        if $b4 <= 0 goto label05;

        $b12 = 1;

        goto label06;

     label05:
        $b12 = 0;

     label06:
        b13 = $b12;

        if $b12 != 0 goto label07;

        $f0 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: float getValue(int)>(i9);

        d1 = (double) $f0;

        $f1 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: float getValue(int)>(i10);

        d4 = (double) $f1;

        $d12 = d1 * d4;

        d20 = d20 + $d12;

        d16 = d16 + d1;

        $d13 = d1 * d1;

        d17 = d17 + $d13;

        d18 = d18 + d4;

        $d14 = d4 * d4;

        d19 = d19 + $d14;

        d2 = d1 - d4;

        $d15 = d2 * d2;

        d21 = d21 + $d15;

        i11 = i11 + 1;

     label07:
        if b13 > 0 goto label09;

        i9 = i9 + 1;

        if i9 != i2 goto label08;

        goto label11;

     label08:
        l7 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.PreferenceArray: long getUserID(int)>(i9);

     label09:
        if b13 < 0 goto label03;

        i10 = i10 + 1;

        if i10 != i3 goto label10;

        goto label11;

     label10:
        l8 = interfaceinvoke r3.<org.apache.mahout.cf.taste.model.PreferenceArray: long getUserID(int)>(i10);

        goto label03;

     label11:
        $z0 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: boolean centerData>;

        if $z0 == 0 goto label12;

        d0 = (double) i11;

        d5 = d16 / d0;

        d3 = d18 / d0;

        $d11 = d3 * d16;

        d7 = d20 - $d11;

        $d10 = d5 * d16;

        d6 = d17 - $d10;

        $d9 = d3 * d18;

        d8 = d19 - $d9;

        d22 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: double computeResult(int,double,double,double,double)>(i11, d7, d6, d8, d21);

        goto label13;

     label12:
        d22 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: double computeResult(int,double,double,double,double)>(i11, d20, d17, d19, d21);

     label13:
        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d22);

        if $z1 != 0 goto label14;

        $i6 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: int cachedNumUsers>;

        d22 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: double normalizeWeightResult(double,int,int)>(d22, i11, $i6);

     label14:
        return d22;
    }

    public double[] itemSimilarities(long, long[]) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        long l0, $l2;
        long[] r1;
        int i1, i3;
        double[] r2;
        double $d0;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        l0 := @parameter0: long;

        r1 := @parameter1: long[];

        i1 = lengthof r1;

        r2 = newarray (double)[i1];

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        $l2 = r1[i3];

        $d0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: double itemSimilarity(long,long)>(l0, $l2);

        r2[i3] = $d0;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    final double normalizeWeightResult(double, int, int)
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9;
        int i0, i1, $i3;
        boolean $z0;
        byte $b2, $b4, $b5;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        d9 = d0;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: boolean weighted>;

        if $z0 == 0 goto label2;

        $d3 = (double) i0;

        $i3 = i1 + 1;

        $d2 = (double) $i3;

        $d4 = $d3 / $d2;

        d1 = 1.0 - $d4;

        $b4 = d0 cmpg 0.0;

        if $b4 >= 0 goto label1;

        $d8 = 1.0 + d0;

        $d7 = d1 * $d8;

        d9 = -1.0 + $d7;

        goto label2;

     label1:
        $d6 = 1.0 - d0;

        $d5 = d1 * $d6;

        d9 = 1.0 - $d5;

     label2:
        $b5 = d9 cmpg -1.0;

        if $b5 >= 0 goto label3;

        d9 = -1.0;

        goto label4;

     label3:
        $b2 = d9 cmpl 1.0;

        if $b2 <= 0 goto label4;

        d9 = 1.0;

     label4:
        return d9;
    }

    public final void refresh(java.util.Collection)
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        java.util.Collection r1;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        r1 := @parameter0: java.util.Collection;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: void refresh(java.util.Collection)>(r1);

        $r2 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void refresh(java.util.Collection)>(r1);

        return;
    }

    public final java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.Class $r2;
        java.lang.String $r3, $r12;
        org.apache.mahout.cf.taste.model.DataModel $r6;
        org.apache.mahout.cf.taste.similarity.PreferenceInferrer $r9;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[dataModel:");

        $r6 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",inferrer:");

        $r9 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: org.apache.mahout.cf.taste.similarity.PreferenceInferrer inferrer>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    static int access$002(org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity, int)
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        int i0;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        i0 := @parameter1: int;

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: int cachedNumItems> = i0;

        return i0;
    }

    static int access$102(org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity, int)
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity r0;
        int i0;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity;

        i0 := @parameter1: int;

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractSimilarity: int cachedNumUsers> = i0;

        return i0;
    }
}
