public final class org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private org.apache.mahout.math.Matrix uHat;
    private org.apache.mahout.math.DenseVector uRow;
    private org.apache.mahout.math.VectorWritable uRowWritable;
    private int kp;
    private int k;
    private org.apache.mahout.math.Vector sValues;

    public void <init>()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper r0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        return;
    }

    protected void map(org.apache.hadoop.io.Writable, org.apache.mahout.math.VectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper r0;
        org.apache.hadoop.io.Writable r1;
        org.apache.mahout.math.VectorWritable r2, $r7, $r8, $r11;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.Vector r4, $r5, $r15, $r18, $r20;
        int $i0, $i1, i2, i3;
        boolean $z0;
        org.apache.mahout.math.DenseVector $r6, $r13, $r16, $r19;
        org.apache.mahout.math.NamedVector $r9, $r10;
        java.lang.String $r12;
        org.apache.mahout.math.Matrix $r14, $r17;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper;

        r1 := @parameter0: org.apache.hadoop.io.Writable;

        r2 := @parameter1: org.apache.mahout.math.VectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        r4 = virtualinvoke r2.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $r5 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Vector sValues>;

        if $r5 == null goto label2;

        i2 = 0;

     label1:
        $i1 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: int k>;

        if i2 >= $i1 goto label4;

        $r19 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.DenseVector uRow>;

        $r17 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Matrix uHat>;

        $r18 = interfaceinvoke $r17.<org.apache.mahout.math.Matrix: org.apache.mahout.math.Vector viewColumn(int)>(i2);

        $d3 = interfaceinvoke r4.<org.apache.mahout.math.Vector: double dot(org.apache.mahout.math.Vector)>($r18);

        $r20 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Vector sValues>;

        $d1 = interfaceinvoke $r20.<org.apache.mahout.math.Vector: double getQuick(int)>(i2);

        $d2 = $d3 * $d1;

        virtualinvoke $r19.<org.apache.mahout.math.DenseVector: void setQuick(int,double)>(i2, $d2);

        i2 = i2 + 1;

        goto label1;

     label2:
        i3 = 0;

     label3:
        $i0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: int k>;

        if i3 >= $i0 goto label4;

        $r16 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.DenseVector uRow>;

        $r14 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Matrix uHat>;

        $r15 = interfaceinvoke $r14.<org.apache.mahout.math.Matrix: org.apache.mahout.math.Vector viewColumn(int)>(i3);

        $d0 = interfaceinvoke r4.<org.apache.mahout.math.Vector: double dot(org.apache.mahout.math.Vector)>($r15);

        virtualinvoke $r16.<org.apache.mahout.math.DenseVector: void setQuick(int,double)>(i3, $d0);

        i3 = i3 + 1;

        goto label3;

     label4:
        $z0 = r4 instanceof org.apache.mahout.math.NamedVector;

        if $z0 == 0 goto label5;

        $r11 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.VectorWritable uRowWritable>;

        $r9 = new org.apache.mahout.math.NamedVector;

        $r13 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.DenseVector uRow>;

        $r10 = (org.apache.mahout.math.NamedVector) r4;

        $r12 = virtualinvoke $r10.<org.apache.mahout.math.NamedVector: java.lang.String getName()>();

        specialinvoke $r9.<org.apache.mahout.math.NamedVector: void <init>(org.apache.mahout.math.Vector,java.lang.String)>($r13, $r12);

        virtualinvoke $r11.<org.apache.mahout.math.VectorWritable: void set(org.apache.mahout.math.Vector)>($r9);

        goto label6;

     label5:
        $r7 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.VectorWritable uRowWritable>;

        $r6 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.DenseVector uRow>;

        virtualinvoke $r7.<org.apache.mahout.math.VectorWritable: void set(org.apache.mahout.math.Vector)>($r6);

     label6:
        $r8 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.VectorWritable uRowWritable>;

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8);

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.fs.FileSystem r4;
        org.apache.mahout.math.hadoop.stochasticsvd.SSVDSolver$OutputScalingEnum r5;
        org.apache.hadoop.fs.Path $r6, $r9;
        org.apache.hadoop.conf.Configuration $r7, $r10, $r13, $r14, $r17, $r22, $r26, $r30;
        java.lang.String $r8, $r11, $r21;
        java.net.URI $r12;
        org.apache.mahout.math.Matrix $r15;
        org.apache.mahout.math.DenseMatrix $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.mahout.math.DenseVector $r18, $r19;
        org.apache.mahout.math.VectorWritable $r20;
        int[] $r23;
        org.apache.mahout.math.function.DoubleFunction $r24;
        org.apache.mahout.math.Vector $r25, $r27, $r28;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void setup(org.apache.hadoop.mapreduce.Mapper$Context)>(r1);

        $r6 = new org.apache.hadoop.fs.Path;

        $r7 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r8 = virtualinvoke $r7.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvd.uhat.path");

        specialinvoke $r6.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r8);

        $r9 = new org.apache.hadoop.fs.Path;

        $r10 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r11 = virtualinvoke $r10.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvd.sigma.path");

        specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r11);

        $r12 = virtualinvoke $r6.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        $r13 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        r4 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>($r12, $r13);

        $r14 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r16 = staticinvoke <org.apache.mahout.math.hadoop.stochasticsvd.SSVDHelper: org.apache.mahout.math.DenseMatrix drmLoadAsDense(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>(r4, $r6, $r14);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Matrix uHat> = $r16;

        $r15 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Matrix uHat>;

        $i0 = interfaceinvoke $r15.<org.apache.mahout.math.Matrix: int columnSize()>();

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: int kp> = $i0;

        $r17 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $i2 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: int kp>;

        $i1 = virtualinvoke $r17.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("ssvd.k", $i2);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: int k> = $i1;

        $r18 = new org.apache.mahout.math.DenseVector;

        $i3 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: int k>;

        specialinvoke $r18.<org.apache.mahout.math.DenseVector: void <init>(int)>($i3);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.DenseVector uRow> = $r18;

        $r20 = new org.apache.mahout.math.VectorWritable;

        $r19 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.DenseVector uRow>;

        specialinvoke $r20.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>($r19);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.VectorWritable uRowWritable> = $r20;

        $r22 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r21 = virtualinvoke $r22.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvd.u.output.scaling");

        r5 = staticinvoke <org.apache.mahout.math.hadoop.stochasticsvd.SSVDSolver$OutputScalingEnum: org.apache.mahout.math.hadoop.stochasticsvd.SSVDSolver$OutputScalingEnum valueOf(java.lang.String)>($r21);

        $r23 = <org.apache.mahout.math.hadoop.stochasticsvd.UJob$1: int[] $SwitchMap$org$apache$mahout$math$hadoop$stochasticsvd$SSVDSolver$OutputScalingEnum>;

        $i5 = virtualinvoke r5.<org.apache.mahout.math.hadoop.stochasticsvd.SSVDSolver$OutputScalingEnum: int ordinal()>();

        $i4 = $r23[$i5];

        lookupswitch($i4)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r30 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r28 = staticinvoke <org.apache.mahout.math.hadoop.stochasticsvd.SSVDHelper: org.apache.mahout.math.Vector loadVector(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r9, $r30);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Vector sValues> = $r28;

        goto label3;

     label2:
        $r26 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r27 = staticinvoke <org.apache.mahout.math.hadoop.stochasticsvd.SSVDHelper: org.apache.mahout.math.Vector loadVector(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r9, $r26);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Vector sValues> = $r27;

        $r25 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: org.apache.mahout.math.Vector sValues>;

        $r24 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleFunction SQRT>;

        interfaceinvoke $r25.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector assign(org.apache.mahout.math.function.DoubleFunction)>($r24);

     label3:
        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4;
        org.apache.hadoop.io.Writable $r5;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.Writable) r1;

        $r4 = (org.apache.mahout.math.VectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.math.hadoop.stochasticsvd.UJob$UMapper: void map(org.apache.hadoop.io.Writable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
