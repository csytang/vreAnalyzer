class org.apache.mahout.math.hadoop.stochasticsvd.Omega$1 extends java.lang.Object implements java.util.concurrent.Callable
{
    final org.apache.mahout.math.Vector val$v;
    final int val$index;
    final org.apache.mahout.math.hadoop.stochasticsvd.Omega this$0;

    void <init>(org.apache.mahout.math.hadoop.stochasticsvd.Omega, org.apache.mahout.math.Vector, int)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.Omega$1 r0;
        org.apache.mahout.math.hadoop.stochasticsvd.Omega r1;
        org.apache.mahout.math.Vector r2;
        int i0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.Omega$1;

        r1 := @parameter0: org.apache.mahout.math.hadoop.stochasticsvd.Omega;

        r2 := @parameter1: org.apache.mahout.math.Vector;

        i0 := @parameter2: int;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.hadoop.stochasticsvd.Omega this$0> = r1;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.Vector val$v> = r2;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: int val$index> = i0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Double call() throws java.lang.Exception
    {
        org.apache.mahout.math.hadoop.stochasticsvd.Omega$1 r0;
        org.apache.mahout.math.Vector$Element r1;
        int i0, $i1, $i2, $i3, i4;
        org.apache.mahout.math.Vector $r2, $r3, $r8, $r10;
        boolean $z0, $z1;
        java.lang.Iterable $r4;
        java.lang.Double $r5;
        java.lang.Object $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        org.apache.mahout.math.hadoop.stochasticsvd.Omega $r7, $r9;
        java.util.Iterator r11;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.Omega$1;

        d6 = 0.0;

        $r2 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.Vector val$v>;

        $z0 = interfaceinvoke $r2.<org.apache.mahout.math.Vector: boolean isDense()>();

        if $z0 == 0 goto label2;

        i4 = 0;

     label1:
        $r8 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.Vector val$v>;

        $i2 = interfaceinvoke $r8.<org.apache.mahout.math.Vector: int size()>();

        if i4 >= $i2 goto label4;

        $r9 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.hadoop.stochasticsvd.Omega this$0>;

        $i3 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: int val$index>;

        $d3 = virtualinvoke $r9.<org.apache.mahout.math.hadoop.stochasticsvd.Omega: double getQuick(int,int)>(i4, $i3);

        $r10 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.Vector val$v>;

        $d5 = interfaceinvoke $r10.<org.apache.mahout.math.Vector: double getQuick(int)>(i4);

        $d4 = $d3 * $d5;

        d6 = d6 + $d4;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.Vector val$v>;

        $r4 = interfaceinvoke $r3.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r11 = interfaceinvoke $r4.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r1 = (org.apache.mahout.math.Vector$Element) $r6;

        i0 = interfaceinvoke r1.<org.apache.mahout.math.Vector$Element: int index()>();

        $r7 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: org.apache.mahout.math.hadoop.stochasticsvd.Omega this$0>;

        $i1 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: int val$index>;

        $d0 = virtualinvoke $r7.<org.apache.mahout.math.hadoop.stochasticsvd.Omega: double getQuick(int,int)>(i0, $i1);

        $d2 = interfaceinvoke r1.<org.apache.mahout.math.Vector$Element: double get()>();

        $d1 = $d0 * $d2;

        d6 = d6 + $d1;

        goto label3;

     label4:
        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        return $r5;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.apache.mahout.math.hadoop.stochasticsvd.Omega$1 r0;
        java.lang.Double $r1;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.Omega$1;

        $r1 = virtualinvoke r0.<org.apache.mahout.math.hadoop.stochasticsvd.Omega$1: java.lang.Double call()>();

        return $r1;
    }
}
