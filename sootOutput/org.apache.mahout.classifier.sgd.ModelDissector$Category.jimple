final class org.apache.mahout.classifier.sgd.ModelDissector$Category extends java.lang.Object implements java.lang.Comparable
{
    private final int index;
    private final double weight;

    private void <init>(int, double)
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0;
        int i0;
        double d0;

        r0 := @this: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index> = i0;

        r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: double weight> = d0;

        return;
    }

    public int compareTo(org.apache.mahout.classifier.sgd.ModelDissector$Category)
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0, r1;
        int i0, $i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        r1 := @parameter0: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        $d0 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: double weight>;

        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        $d2 = r1.<org.apache.mahout.classifier.sgd.ModelDissector$Category: double weight>;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d3);

        if i0 != 0 goto label3;

        $i2 = r1.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        $i1 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        if $i2 >= $i1 goto label1;

        return -1;

     label1:
        $i4 = r1.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        $i3 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        if $i4 <= $i3 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        return i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;
        double $d0, $d1;
        byte $b2;

        r0 := @this: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.classifier.sgd.ModelDissector$Category;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.mahout.classifier.sgd.ModelDissector$Category) r1;

        $i1 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        $i0 = r2.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        if $i1 != $i0 goto label2;

        $d1 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: double weight>;

        $d0 = r2.<org.apache.mahout.classifier.sgd.ModelDissector$Category: double weight>;

        $b2 = $d1 cmpl $d0;

        if $b2 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0;
        double $d0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        $d0 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: double weight>;

        $i0 = staticinvoke <org.apache.mahout.common.RandomUtils: int hashDouble(double)>($d0);

        $i1 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        $i2 = $i0 ^ $i1;

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.mahout.classifier.sgd.ModelDissector$Category) r1;

        $i0 = virtualinvoke r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int compareTo(org.apache.mahout.classifier.sgd.ModelDissector$Category)>($r2);

        return $i0;
    }

    void <init>(int, double, org.apache.mahout.classifier.sgd.ModelDissector$1)
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0;
        int i0;
        double d0;
        org.apache.mahout.classifier.sgd.ModelDissector$1 r1;

        r0 := @this: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        r1 := @parameter2: org.apache.mahout.classifier.sgd.ModelDissector$1;

        specialinvoke r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: void <init>(int,double)>(i0, d0);

        return;
    }

    static double access$100(org.apache.mahout.classifier.sgd.ModelDissector$Category)
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0;
        double $d0;

        r0 := @parameter0: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        $d0 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: double weight>;

        return $d0;
    }

    static int access$200(org.apache.mahout.classifier.sgd.ModelDissector$Category)
    {
        org.apache.mahout.classifier.sgd.ModelDissector$Category r0;
        int $i0;

        r0 := @parameter0: org.apache.mahout.classifier.sgd.ModelDissector$Category;

        $i0 = r0.<org.apache.mahout.classifier.sgd.ModelDissector$Category: int index>;

        return $i0;
    }
}
