public class org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private int maxSimilaritiesPerRow;

    public void <init>()
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper r0;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration $r2;
        java.lang.String $r3;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        $r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r3 = staticinvoke <org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob: java.lang.String access$1100()>();

        $i0 = virtualinvoke $r2.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>($r3, 0);

        r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper: int maxSimilaritiesPerRow> = $i0;

        $i1 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper: int maxSimilaritiesPerRow>;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Maximum number of similarities per row must be greater then 0!");

        return;
    }

    protected void map(org.apache.hadoop.io.IntWritable, org.apache.mahout.math.VectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper r0;
        org.apache.hadoop.io.IntWritable r1, $r17;
        org.apache.mahout.math.VectorWritable r2, $r13, $r16;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.Vector r4;
        double d0, $d1, $d2;
        org.apache.mahout.math.RandomAccessSparseVector $r7, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9;
        org.apache.mahout.math.hadoop.similarity.cooccurrence.TopElementsQueue $r8;
        java.lang.Iterable $r9;
        boolean $z0, $z1;
        java.util.List $r11;
        java.lang.Object $r12, $r14, $r15;
        byte $b5;
        java.util.Iterator r19, r23;
        org.apache.mahout.math.Vector$Element r20, r24;
        org.apache.mahout.math.hadoop.similarity.cooccurrence.MutableElement r21;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: org.apache.mahout.math.VectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        r4 = virtualinvoke r2.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $r7 = new org.apache.mahout.math.RandomAccessSparseVector;

        $i0 = interfaceinvoke r4.<org.apache.mahout.math.Vector: int size()>();

        specialinvoke $r7.<org.apache.mahout.math.RandomAccessSparseVector: void <init>(int,int)>($i0, 1);

        $r8 = new org.apache.mahout.math.hadoop.similarity.cooccurrence.TopElementsQueue;

        $i1 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper: int maxSimilaritiesPerRow>;

        specialinvoke $r8.<org.apache.mahout.math.hadoop.similarity.cooccurrence.TopElementsQueue: void <init>(int)>($i1);

        $r9 = interfaceinvoke r4.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r19 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r14 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (org.apache.mahout.math.Vector$Element) $r14;

        $r15 = virtualinvoke $r8.<org.apache.mahout.math.hadoop.similarity.cooccurrence.TopElementsQueue: java.lang.Object top()>();

        r21 = (org.apache.mahout.math.hadoop.similarity.cooccurrence.MutableElement) $r15;

        d0 = interfaceinvoke r20.<org.apache.mahout.math.Vector$Element: double get()>();

        $d2 = virtualinvoke r21.<org.apache.mahout.math.hadoop.similarity.cooccurrence.MutableElement: double get()>();

        $b5 = d0 cmpl $d2;

        if $b5 <= 0 goto label2;

        $i8 = interfaceinvoke r20.<org.apache.mahout.math.Vector$Element: int index()>();

        virtualinvoke r21.<org.apache.mahout.math.hadoop.similarity.cooccurrence.MutableElement: void setIndex(int)>($i8);

        virtualinvoke r21.<org.apache.mahout.math.hadoop.similarity.cooccurrence.MutableElement: void set(double)>(d0);

        virtualinvoke $r8.<org.apache.mahout.math.hadoop.similarity.cooccurrence.TopElementsQueue: java.lang.Object updateTop()>();

     label2:
        $i7 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        interfaceinvoke $r7.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i7, d0);

        $r17 = new org.apache.hadoop.io.IntWritable;

        $i6 = interfaceinvoke r20.<org.apache.mahout.math.Vector$Element: int index()>();

        specialinvoke $r17.<org.apache.hadoop.io.IntWritable: void <init>(int)>($i6);

        $r16 = new org.apache.mahout.math.VectorWritable;

        specialinvoke $r16.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>($r7);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r17, $r16);

        $i9 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        interfaceinvoke $r7.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i9, 0.0);

        goto label1;

     label3:
        $r10 = new org.apache.mahout.math.RandomAccessSparseVector;

        $i2 = interfaceinvoke r4.<org.apache.mahout.math.Vector: int size()>();

        $i3 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper: int maxSimilaritiesPerRow>;

        specialinvoke $r10.<org.apache.mahout.math.RandomAccessSparseVector: void <init>(int,int)>($i2, $i3);

        $r11 = virtualinvoke $r8.<org.apache.mahout.math.hadoop.similarity.cooccurrence.TopElementsQueue: java.util.List getTopElements()>();

        r23 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (org.apache.mahout.math.Vector$Element) $r12;

        $i4 = interfaceinvoke r24.<org.apache.mahout.math.Vector$Element: int index()>();

        $d1 = interfaceinvoke r24.<org.apache.mahout.math.Vector$Element: double get()>();

        interfaceinvoke $r10.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i4, $d1);

        goto label4;

     label5:
        $r13 = new org.apache.mahout.math.VectorWritable;

        specialinvoke $r13.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>($r10);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r13);

        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4;
        org.apache.hadoop.io.IntWritable $r5;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.IntWritable) r1;

        $r4 = (org.apache.mahout.math.VectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$UnsymmetrifyMapper: void map(org.apache.hadoop.io.IntWritable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
