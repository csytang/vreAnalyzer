public class org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender extends org.apache.mahout.cf.taste.impl.recommender.AbstractRecommender implements org.apache.mahout.cf.taste.recommender.UserBasedRecommender
{
    private static final org.slf4j.Logger log;
    private final org.apache.mahout.cf.taste.neighborhood.UserNeighborhood neighborhood;
    private final org.apache.mahout.cf.taste.similarity.UserSimilarity similarity;
    private final org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper;
    private org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper capper;

    public void <init>(org.apache.mahout.cf.taste.model.DataModel, org.apache.mahout.cf.taste.neighborhood.UserNeighborhood, org.apache.mahout.cf.taste.similarity.UserSimilarity)
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        org.apache.mahout.cf.taste.model.DataModel r1;
        org.apache.mahout.cf.taste.neighborhood.UserNeighborhood r2;
        org.apache.mahout.cf.taste.similarity.UserSimilarity r3;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r4, $r6, $r7, $r8;
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$1 $r5;
        org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper $r9;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        r1 := @parameter0: org.apache.mahout.cf.taste.model.DataModel;

        r2 := @parameter1: org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;

        r3 := @parameter2: org.apache.mahout.cf.taste.similarity.UserSimilarity;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.AbstractRecommender: void <init>(org.apache.mahout.cf.taste.model.DataModel)>(r1);

        if r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "neighborhood is null");

        r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.neighborhood.UserNeighborhood neighborhood> = r2;

        r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.similarity.UserSimilarity similarity> = r3;

        $r4 = new org.apache.mahout.cf.taste.impl.common.RefreshHelper;

        $r5 = new org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$1;

        specialinvoke $r5.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$1: void <init>(org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender)>(r0);

        specialinvoke $r4.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void <init>(java.util.concurrent.Callable)>($r5);

        r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper> = $r4;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r6.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void addDependency(org.apache.mahout.cf.taste.common.Refreshable)>(r1);

        $r7 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r7.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void addDependency(org.apache.mahout.cf.taste.common.Refreshable)>(r3);

        $r8 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r8.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void addDependency(org.apache.mahout.cf.taste.common.Refreshable)>(r2);

        $r9 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper buildCapper()>();

        r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper capper> = $r9;

        return;
    }

    public org.apache.mahout.cf.taste.similarity.UserSimilarity getSimilarity()
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        org.apache.mahout.cf.taste.similarity.UserSimilarity $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.similarity.UserSimilarity similarity>;

        return $r1;
    }

    public java.util.List recommend(long, int, org.apache.mahout.cf.taste.recommender.IDRescorer, boolean) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        long l0;
        int i1, $i2;
        org.apache.mahout.cf.taste.recommender.IDRescorer r1;
        boolean z0, $z1;
        long[] r2;
        org.apache.mahout.cf.taste.impl.common.FastIDSet r3;
        java.util.List r5, $r11;
        org.slf4j.Logger $r6, $r12;
        java.lang.Long $r7;
        org.apache.mahout.cf.taste.neighborhood.UserNeighborhood $r8;
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$Estimator $r9;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r10;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.mahout.cf.taste.recommender.IDRescorer;

        z0 := @parameter3: boolean;

        if i1 < 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "howMany must be at least 1");

        $r6 = <org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.slf4j.Logger log>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Recommending items for user ID \'{}\'", $r7);

        $r8 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.neighborhood.UserNeighborhood neighborhood>;

        r2 = interfaceinvoke $r8.<org.apache.mahout.cf.taste.neighborhood.UserNeighborhood: long[] getUserNeighborhood(long)>(l0);

        $i2 = lengthof r2;

        if $i2 != 0 goto label3;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r11;

     label3:
        r3 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.common.FastIDSet getAllOtherItems(long[],long,boolean)>(r2, l0, z0);

        $r9 = new org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$Estimator;

        specialinvoke $r9.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$Estimator: void <init>(org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender,long,long[])>(r0, l0, r2);

        $r10 = virtualinvoke r3.<org.apache.mahout.cf.taste.impl.common.FastIDSet: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator iterator()>();

        r5 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.TopItems: java.util.List getTopItems(int,org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator,org.apache.mahout.cf.taste.recommender.IDRescorer,org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator)>(i1, $r10, r1, $r9);

        $r12 = <org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.slf4j.Logger log>;

        interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Recommendations are: {}", r5);

        return r5;
    }

    public float estimatePreference(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        long l0, l1;
        org.apache.mahout.cf.taste.model.DataModel r1;
        java.lang.Float r2;
        long[] r3;
        org.apache.mahout.cf.taste.neighborhood.UserNeighborhood $r4;
        float $f0, $f1;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        r2 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: java.lang.Float getPreferenceValue(long,long)>(l0, l1);

        if r2 == null goto label1;

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        return $f1;

     label1:
        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.neighborhood.UserNeighborhood neighborhood>;

        r3 = interfaceinvoke $r4.<org.apache.mahout.cf.taste.neighborhood.UserNeighborhood: long[] getUserNeighborhood(long)>(l0);

        $f0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: float doEstimatePreference(long,long[],long)>(l0, r3, l1);

        return $f0;
    }

    public long[] mostSimilarUserIDs(long, int) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        long l0;
        int i1;
        long[] $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: long[] mostSimilarUserIDs(long,int,org.apache.mahout.cf.taste.recommender.Rescorer)>(l0, i1, null);

        return $r1;
    }

    public long[] mostSimilarUserIDs(long, int, org.apache.mahout.cf.taste.recommender.Rescorer) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        long l0;
        int i1;
        org.apache.mahout.cf.taste.recommender.Rescorer r1;
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$MostSimilarEstimator $r3;
        org.apache.mahout.cf.taste.similarity.UserSimilarity $r4;
        long[] $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.mahout.cf.taste.recommender.Rescorer;

        $r3 = new org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$MostSimilarEstimator;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.similarity.UserSimilarity similarity>;

        specialinvoke $r3.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$MostSimilarEstimator: void <init>(long,org.apache.mahout.cf.taste.similarity.UserSimilarity,org.apache.mahout.cf.taste.recommender.Rescorer,org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender$1)>(l0, $r4, r1, null);

        $r5 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: long[] doMostSimilarUsers(int,org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator)>(i1, $r3);

        return $r5;
    }

    private long[] doMostSimilarUsers(int, org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        int i0;
        org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator r1;
        org.apache.mahout.cf.taste.model.DataModel r2;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r3;
        long[] $r4;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator;

        r2 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        $r3 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getUserIDs()>();

        $r4 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.TopItems: long[] getTopUsers(int,org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator,org.apache.mahout.cf.taste.recommender.IDRescorer,org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator)>(i0, $r3, null, r1);

        return $r4;
    }

    protected float doEstimatePreference(long, long[], long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        long l0, l1, l3;
        long[] r1;
        org.apache.mahout.cf.taste.model.DataModel r2;
        int i2, $i4, i6, i7;
        java.lang.Float r3;
        double d0, $d1, $d2, $d3, d4, d5;
        org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper $r4, $r5;
        byte $b5;
        org.apache.mahout.cf.taste.similarity.UserSimilarity $r6;
        float $f0, f1;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        l0 := @parameter0: long;

        r1 := @parameter1: long[];

        l1 := @parameter2: long;

        $i4 = lengthof r1;

        if $i4 != 0 goto label1;

        return #NaNF;

     label1:
        r2 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        d4 = 0.0;

        d5 = 0.0;

        i6 = 0;

        i2 = lengthof r1;

        i7 = 0;

     label2:
        if i7 >= i2 goto label4;

        l3 = r1[i7];

        $b5 = l3 cmp l0;

        if $b5 == 0 goto label3;

        r3 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.DataModel: java.lang.Float getPreferenceValue(long,long)>(l3, l1);

        if r3 == null goto label3;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.similarity.UserSimilarity similarity>;

        d0 = interfaceinvoke $r6.<org.apache.mahout.cf.taste.similarity.UserSimilarity: double userSimilarity(long,long)>(l0, l3);

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0);

        if $z0 != 0 goto label3;

        $f0 = virtualinvoke r3.<java.lang.Float: float floatValue()>();

        $d2 = (double) $f0;

        $d3 = d0 * $d2;

        d4 = d4 + $d3;

        d5 = d5 + d0;

        i6 = i6 + 1;

     label3:
        i7 = i7 + 1;

        goto label2;

     label4:
        if i6 > 1 goto label5;

        return #NaNF;

     label5:
        $d1 = d4 / d5;

        f1 = (float) $d1;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper capper>;

        if $r4 == null goto label6;

        $r5 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper capper>;

        f1 = virtualinvoke $r5.<org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper: float capEstimate(float)>(f1);

     label6:
        return f1;
    }

    protected org.apache.mahout.cf.taste.impl.common.FastIDSet getAllOtherItems(long[], long, boolean) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        long[] r1;
        long l0, l2;
        boolean z0;
        org.apache.mahout.cf.taste.model.DataModel r2;
        int i1, i3;
        org.apache.mahout.cf.taste.impl.common.FastIDSet $r5, $r6, $r7;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        r1 := @parameter0: long[];

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        $r5 = new org.apache.mahout.cf.taste.impl.common.FastIDSet;

        specialinvoke $r5.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void <init>()>();

        i1 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        l2 = r1[i3];

        $r7 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.FastIDSet getItemIDsFromUser(long)>(l2);

        virtualinvoke $r5.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean addAll(org.apache.mahout.cf.taste.impl.common.FastIDSet)>($r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        if z0 != 0 goto label3;

        $r6 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.FastIDSet getItemIDsFromUser(long)>(l0);

        virtualinvoke $r5.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean removeAll(org.apache.mahout.cf.taste.impl.common.FastIDSet)>($r6);

     label3:
        return $r5;
    }

    public void refresh(java.util.Collection)
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        java.util.Collection r1;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void refresh(java.util.Collection)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        org.apache.mahout.cf.taste.neighborhood.UserNeighborhood $r3;
        java.lang.String $r6;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GenericUserBasedRecommender[neighborhood:");

        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.neighborhood.UserNeighborhood neighborhood>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper buildCapper()
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        org.apache.mahout.cf.taste.model.DataModel r1;
        float $f0, $f1;
        boolean $z0, $z1;
        org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        $f0 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: float getMinPreference()>();

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 == 0 goto label1;

        $f1 = interfaceinvoke r1.<org.apache.mahout.cf.taste.model.DataModel: float getMaxPreference()>();

        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f1);

        if $z1 == 0 goto label1;

        return null;

     label1:
        $r2 = new org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper;

        specialinvoke $r2.<org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper: void <init>(org.apache.mahout.cf.taste.model.DataModel)>(r1);

        return $r2;
    }

    static org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper access$002(org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender, org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper)
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        r1 := @parameter1: org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper;

        r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper capper> = r1;

        return r1;
    }

    static org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper access$100(org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender)
    {
        org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender r0;
        org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;

        $r1 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.apache.mahout.cf.taste.impl.recommender.EstimatedPreferenceCapper buildCapper()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommender");

        <org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender: org.slf4j.Logger log> = $r0;

        return;
    }
}
