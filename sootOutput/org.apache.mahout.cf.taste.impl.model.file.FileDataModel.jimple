public class org.apache.mahout.cf.taste.impl.model.file.FileDataModel extends org.apache.mahout.cf.taste.impl.model.AbstractDataModel
{
    private static final org.slf4j.Logger log;
    public static final long DEFAULT_MIN_RELOAD_INTERVAL_MS;
    private static final char COMMENT_CHAR;
    private static final char[] DELIMIETERS;
    private final java.io.File dataFile;
    private long lastModified;
    private long lastUpdateFileModified;
    private final com.google.common.base.Splitter delimiterPattern;
    private final boolean hasPrefValues;
    private org.apache.mahout.cf.taste.model.DataModel delegate;
    private final java.util.concurrent.locks.ReentrantLock reloadLock;
    private final boolean transpose;
    private final long minReloadIntervalMS;

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.io.File r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void <init>(java.io.File,boolean,long)>(r1, 0, 60000L);

        return;
    }

    public void <init>(java.io.File, java.lang.String) throws java.io.IOException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.io.File r1;
        java.lang.String r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void <init>(java.io.File,boolean,long,java.lang.String)>(r1, 0, 60000L, r2);

        return;
    }

    public void <init>(java.io.File, boolean, long) throws java.io.IOException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.io.File r1;
        boolean z0;
        long l0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void <init>(java.io.File,boolean,long,java.lang.String)>(r1, z0, l0, null);

        return;
    }

    public void <init>(java.io.File, boolean, long, java.lang.String) throws java.io.IOException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.io.File r1, $r7, $r9;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z10, $z11;
        long l0, $l1, $l4, $l5;
        java.lang.String r2, r6, $r10, $r25, r29;
        java.util.Iterator r5, $r18;
        java.lang.Object $r8, $r14, $r15, $r24, $r26;
        java.io.FileNotFoundException $r11;
        byte $b2, $b3;
        org.slf4j.Logger $r12;
        org.apache.mahout.common.iterator.FileLineIterator $r13;
        char $c6, c8;
        java.lang.Iterable $r17, $r22;
        com.google.common.base.Splitter $r19, $r20, $r21, $r28;
        java.util.ArrayList $r23;
        int $i7;
        java.lang.IllegalArgumentException $r27;
        java.util.concurrent.locks.ReentrantLock $r31;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.AbstractDataModel: void <init>()>();

        $r7 = virtualinvoke r1.<java.io.File: java.io.File getAbsoluteFile()>();

        $r8 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r7);

        $r9 = (java.io.File) $r8;

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile> = $r9;

        $z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label01;

        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label02;

     label01:
        $r11 = new java.io.FileNotFoundException;

        $r10 = virtualinvoke r1.<java.io.File: java.lang.String toString()>();

        specialinvoke $r11.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r11;

     label02:
        $l1 = virtualinvoke r1.<java.io.File: long length()>();

        $b3 = $l1 cmp 0L;

        if $b3 <= 0 goto label03;

        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z6, "dataFile is empty");

        $b2 = l0 cmp 0L;

        if $b2 < 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z7, "minReloadIntervalMs must be non-negative");

        $r12 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Creating FileDataModel for file {}", r1);

        $l4 = virtualinvoke r1.<java.io.File: long lastModified()>();

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastModified> = $l4;

        $l5 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readLastUpdateFileModified()>();

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastUpdateFileModified> = $l5;

        $r13 = new org.apache.mahout.common.iterator.FileLineIterator;

        specialinvoke $r13.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.File,boolean)>(r1, 0);

        $r14 = virtualinvoke $r13.<org.apache.mahout.common.iterator.FileLineIterator: java.lang.Object peek()>();

        r29 = (java.lang.String) $r14;

     label07:
        $z8 = virtualinvoke r29.<java.lang.String: boolean isEmpty()>();

        if $z8 != 0 goto label08;

        $c6 = virtualinvoke r29.<java.lang.String: char charAt(int)>(0);

        if $c6 != 35 goto label09;

     label08:
        virtualinvoke $r13.<org.apache.mahout.common.iterator.FileLineIterator: java.lang.Object next()>();

        $r15 = virtualinvoke $r13.<org.apache.mahout.common.iterator.FileLineIterator: java.lang.Object peek()>();

        r29 = (java.lang.String) $r15;

        goto label07;

     label09:
        staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>($r13, 1);

        if r2 != null goto label10;

        c8 = staticinvoke <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: char determineDelimiter(java.lang.String)>(r29);

        $r28 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(char)>(c8);

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: com.google.common.base.Splitter delimiterPattern> = $r28;

        goto label11;

     label10:
        $r19 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter onPattern(java.lang.String)>(r2);

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: com.google.common.base.Splitter delimiterPattern> = $r19;

        $r20 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: com.google.common.base.Splitter delimiterPattern>;

        $r17 = virtualinvoke $r20.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r29);

        $r18 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z3 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label11;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Did not find a delimiter(pattern) in first line");

        throw $r27;

     label11:
        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $r21 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: com.google.common.base.Splitter delimiterPattern>;

        $r22 = virtualinvoke $r21.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r29);

        r5 = interfaceinvoke $r22.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z10 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label13;

        $r26 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r26;

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>(r6);

        goto label12;

     label13:
        $i7 = interfaceinvoke $r23.<java.util.List: int size()>();

        if $i7 < 3 goto label14;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(2);

        $r25 = (java.lang.String) $r24;

        $z4 = virtualinvoke $r25.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label14;

        $z11 = 1;

        goto label15;

     label14:
        $z11 = 0;

     label15:
        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: boolean hasPrefValues> = $z11;

        $r31 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r31.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.util.concurrent.locks.ReentrantLock reloadLock> = $r31;

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: boolean transpose> = z0;

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long minReloadIntervalMS> = l0;

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void reload()>();

        return;
    }

    public java.io.File getDataFile()
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.io.File $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        return $r1;
    }

    protected void reload()
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.util.concurrent.locks.ReentrantLock $r3, $r5, $r7, $r10;
        boolean $z0;
        org.apache.mahout.cf.taste.model.DataModel $r4;
        java.lang.Throwable $r6;
        java.io.IOException $r8;
        org.slf4j.Logger $r9;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.util.concurrent.locks.ReentrantLock reloadLock>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: boolean tryLock()>();

        if $z0 == 0 goto label7;

     label1:
        $r4 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel buildModel()>();

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate> = $r4;

     label2:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.util.concurrent.locks.ReentrantLock reloadLock>;

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label3:
        $r8 := @caughtexception;

        $r9 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception while reloading", $r8);

     label4:
        $r10 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.util.concurrent.locks.ReentrantLock reloadLock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

     label6:
        $r7 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.util.concurrent.locks.ReentrantLock reloadLock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw $r6;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected org.apache.mahout.cf.taste.model.DataModel buildModel() throws java.io.IOException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, l1, l2, $l3, $l4, $l5, $l6, $l7;
        java.io.File $r2, $r13, $r26, r35, r38, r42, r45;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap $r3, $r12, $r22, $r29, r36, r43;
        org.apache.mahout.cf.taste.model.DataModel $r4, $r5, $r18;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.mahout.cf.taste.impl.model.GenericBooleanPrefDataModel $r6, $r9, $r16;
        java.lang.Iterable $r7, $r14, $r21, $r25;
        java.lang.Object $r8, $r17, $r24, $r28;
        org.apache.mahout.common.iterator.FileLineIterator $r10, $r11, $r15, $r23, $r27, $r31;
        org.apache.mahout.cf.taste.impl.model.GenericDataModel $r19, $r20, $r30;
        byte $b8;
        java.util.Iterator r34, r37, r41, r44;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        l0 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        l1 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readLastUpdateFileModified()>();

        $r4 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        if $r4 == null goto label01;

        $l5 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastModified>;

        $l6 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long minReloadIntervalMS>;

        $l7 = $l5 + $l6;

        $b8 = l0 cmp $l7;

        if $b8 <= 0 goto label02;

     label01:
        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        l2 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastUpdateFileModified>;

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastModified> = l0;

        r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastUpdateFileModified> = l1;

        $r3 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        specialinvoke $r3.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>()>();

        $z1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: boolean hasPrefValues>;

        if $z1 == 0 goto label09;

        if $z6 == 0 goto label06;

        $r22 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        specialinvoke $r22.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>()>();

        $r27 = new org.apache.mahout.common.iterator.FileLineIterator;

        $r26 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        specialinvoke $r27.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.File,boolean)>($r26, 0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processFile(org.apache.mahout.common.iterator.FileLineIterator,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap,boolean)>($r27, $r22, $r3, 0);

        $r25 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.lang.Iterable findUpdateFilesAfter(long)>(l0);

        r34 = interfaceinvoke $r25.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $z5 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label05;

        $r28 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.io.File) $r28;

        $r31 = new org.apache.mahout.common.iterator.FileLineIterator;

        specialinvoke $r31.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.File,boolean)>(r35, 0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processFile(org.apache.mahout.common.iterator.FileLineIterator,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap,boolean)>($r31, $r22, $r3, 0);

        goto label04;

     label05:
        $r30 = new org.apache.mahout.cf.taste.impl.model.GenericDataModel;

        $r29 = staticinvoke <org.apache.mahout.cf.taste.impl.model.GenericDataModel: org.apache.mahout.cf.taste.impl.common.FastByIDMap toDataMap(org.apache.mahout.cf.taste.impl.common.FastByIDMap,boolean)>($r22, 1);

        specialinvoke $r30.<org.apache.mahout.cf.taste.impl.model.GenericDataModel: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>($r29, $r3);

        return $r30;

     label06:
        $r18 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r19 = (org.apache.mahout.cf.taste.impl.model.GenericDataModel) $r18;

        r36 = virtualinvoke $r19.<org.apache.mahout.cf.taste.impl.model.GenericDataModel: org.apache.mahout.cf.taste.impl.common.FastByIDMap getRawUserData()>();

        $l4 = staticinvoke <java.lang.Math: long max(long,long)>(l2, l0);

        $r21 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.lang.Iterable findUpdateFilesAfter(long)>($l4);

        r37 = interfaceinvoke $r21.<java.lang.Iterable: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label08;

        $r24 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.io.File) $r24;

        $r23 = new org.apache.mahout.common.iterator.FileLineIterator;

        specialinvoke $r23.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.File,boolean)>(r38, 0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processFile(org.apache.mahout.common.iterator.FileLineIterator,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap,boolean)>($r23, r36, $r3, 1);

        goto label07;

     label08:
        $r20 = new org.apache.mahout.cf.taste.impl.model.GenericDataModel;

        specialinvoke $r20.<org.apache.mahout.cf.taste.impl.model.GenericDataModel: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(r36, $r3);

        return $r20;

     label09:
        if $z6 == 0 goto label12;

        $r12 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        specialinvoke $r12.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>()>();

        $r11 = new org.apache.mahout.common.iterator.FileLineIterator;

        $r13 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        specialinvoke $r11.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.File,boolean)>($r13, 0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processFileWithoutID(org.apache.mahout.common.iterator.FileLineIterator,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>($r11, $r12, $r3);

        $r14 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.lang.Iterable findUpdateFilesAfter(long)>(l0);

        r41 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r17 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r42 = (java.io.File) $r17;

        $r15 = new org.apache.mahout.common.iterator.FileLineIterator;

        specialinvoke $r15.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.File,boolean)>(r42, 0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processFileWithoutID(org.apache.mahout.common.iterator.FileLineIterator,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>($r15, $r12, $r3);

        goto label10;

     label11:
        $r16 = new org.apache.mahout.cf.taste.impl.model.GenericBooleanPrefDataModel;

        specialinvoke $r16.<org.apache.mahout.cf.taste.impl.model.GenericBooleanPrefDataModel: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>($r12, $r3);

        return $r16;

     label12:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r6 = (org.apache.mahout.cf.taste.impl.model.GenericBooleanPrefDataModel) $r5;

        r43 = virtualinvoke $r6.<org.apache.mahout.cf.taste.impl.model.GenericBooleanPrefDataModel: org.apache.mahout.cf.taste.impl.common.FastByIDMap getRawUserData()>();

        $l3 = staticinvoke <java.lang.Math: long max(long,long)>(l2, l0);

        $r7 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.lang.Iterable findUpdateFilesAfter(long)>($l3);

        r44 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label13:
        $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label14;

        $r8 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.io.File) $r8;

        $r10 = new org.apache.mahout.common.iterator.FileLineIterator;

        specialinvoke $r10.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.File,boolean)>(r45, 0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processFileWithoutID(org.apache.mahout.common.iterator.FileLineIterator,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>($r10, r43, $r3);

        goto label13;

     label14:
        $r9 = new org.apache.mahout.cf.taste.impl.model.GenericBooleanPrefDataModel;

        specialinvoke $r9.<org.apache.mahout.cf.taste.impl.model.GenericBooleanPrefDataModel: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(r43, $r3);

        return $r9;
    }

    private java.lang.Iterable findUpdateFilesAfter(long)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, $l3, $l4;
        java.lang.String r1, r2, r8, $r16;
        int i1, i2, i6;
        java.io.File r3, r7, $r9, $r10;
        java.io.File[] r6;
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel$1 $r11;
        java.util.TreeMap $r12;
        java.util.Collection $r13;
        boolean $z0, $z1;
        byte $b5;
        java.lang.Long $r14;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        $r9 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        r1 = virtualinvoke $r9.<java.io.File: java.lang.String getName()>();

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);

        if i1 >= 0 goto label1;

        $r16 = r1;

        goto label2;

     label1:
        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label2:
        r2 = $r16;

        $r10 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        r3 = virtualinvoke $r10.<java.io.File: java.io.File getParentFile()>();

        $r12 = new java.util.TreeMap;

        specialinvoke $r12.<java.util.TreeMap: void <init>()>();

        $r11 = new org.apache.mahout.cf.taste.impl.model.file.FileDataModel$1;

        specialinvoke $r11.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel$1: void <init>(org.apache.mahout.cf.taste.impl.model.file.FileDataModel)>(r0);

        r6 = virtualinvoke r3.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r11);

        i2 = lengthof r6;

        i6 = 0;

     label3:
        if i6 >= i2 goto label5;

        r7 = r6[i6];

        r8 = virtualinvoke r7.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z0 == 0 goto label4;

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        $l3 = virtualinvoke r7.<java.io.File: long lastModified()>();

        $b5 = $l3 cmp l0;

        if $b5 < 0 goto label4;

        $l4 = virtualinvoke r7.<java.io.File: long lastModified()>();

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r7);

     label4:
        i6 = i6 + 1;

        goto label3;

     label5:
        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>();

        return $r13;
    }

    private long readLastUpdateFileModified()
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.util.Iterator r1;
        java.io.File r2;
        java.lang.Iterable $r3;
        boolean $z0;
        java.lang.Object $r4;
        long $l0, l1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l1 = -9223372036854775808L;

        $r3 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.lang.Iterable findUpdateFilesAfter(long)>(0L);

        r1 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.io.File) $r4;

        $l0 = virtualinvoke r2.<java.io.File: long lastModified()>();

        l1 = staticinvoke <java.lang.Math: long max(long,long)>(l1, $l0);

        goto label1;

     label2:
        return l1;
    }

    public static char determineDelimiter(java.lang.String)
    {
        java.lang.String r0;
        char[] r1;
        int i0, $i2, i3;
        char c1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.String;

        r1 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: char[] DELIMIETERS>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        c1 = r1[i3];

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(c1);

        if $i2 < 0 goto label2;

        return c1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Did not find a delimiter in first line");

        throw $r2;
    }

    protected void processFile(org.apache.mahout.common.iterator.FileLineIterator, org.apache.mahout.cf.taste.impl.common.FastByIDMap, org.apache.mahout.cf.taste.impl.common.FastByIDMap, boolean)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.common.iterator.FileLineIterator r1;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r2, r3;
        boolean z0, $z1, $z2;
        java.lang.String r4;
        org.slf4j.Logger $r5, $r6, $r9;
        java.lang.Integer $r7, $r10;
        java.lang.Object $r8;
        int $i0, i1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: org.apache.mahout.common.iterator.FileLineIterator;

        r2 := @parameter1: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        r3 := @parameter2: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        z0 := @parameter3: boolean;

        $r5 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("Reading file info...");

        i1 = 0;

     label1:
        $z1 = virtualinvoke r1.<org.apache.mahout.common.iterator.FileLineIterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke r1.<org.apache.mahout.common.iterator.FileLineIterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        $z2 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processLine(java.lang.String,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap,boolean)>(r4, r2, r3, z0);

        i1 = i1 + 1;

        $i0 = i1 % 1000000;

        if $i0 != 0 goto label1;

        $r9 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Processed {} lines", $r10);

        goto label1;

     label2:
        $r6 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Read lines: {}", $r7);

        return;
    }

    protected void processLine(java.lang.String, org.apache.mahout.cf.taste.impl.common.FastByIDMap, org.apache.mahout.cf.taste.impl.common.FastByIDMap, boolean)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.lang.String r1, r5, r6, r7, r8, $r28;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r2, r3;
        boolean z0, z1, $z2, $z3, $z5, $z6, $z7, $z8, z9, z10, z11;
        java.util.Iterator r4, r35, r37;
        char $c0;
        java.lang.Iterable $r9;
        com.google.common.base.Splitter $r10;
        java.lang.Object $r11, $r12, $r13, $r17, $r19, $r27, r29, r34;
        byte $b1, $b5, $b9, $b13, $b15;
        long $l2, $l4, $l8, $l12, $l14, l16, l17, l18;
        int $i3, $i6, $i7, $i10, $i11, i19, i20, i21, i22, i23, i24, i25;
        org.apache.mahout.cf.taste.model.Preference $r21, $r25, r36, r38;
        org.apache.mahout.cf.taste.model.PreferenceArray r30;
        float f0, f1;
        org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray r32, r39, r40, r41;
        java.util.ArrayList r42;
        org.apache.mahout.cf.taste.impl.model.GenericPreference r43;
        java.util.Collection r44, r45, r46;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        r3 := @parameter2: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        z0 := @parameter3: boolean;

        $z2 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label01;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c0 != 35 goto label02;

     label01:
        return;

     label02:
        $r10 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: com.google.common.base.Splitter delimiterPattern>;

        $r9 = virtualinvoke $r10.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r1);

        r4 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r11;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r13;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r12;

        z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if z1 == 0 goto label03;

        $r27 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r28 = (java.lang.String) $r27;

        goto label04;

     label03:
        $r28 = null;

     label04:
        r8 = $r28;

        l16 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readUserIDFromString(java.lang.String)>(r5);

        l17 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readItemIDFromString(java.lang.String)>(r6);

        $z3 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: boolean transpose>;

        if $z3 == 0 goto label05;

        l18 = l16;

        l16 = l17;

        l17 = l18;

     label05:
        r29 = virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object get(long)>(l16);

        if z0 == 0 goto label24;

        r30 = (org.apache.mahout.cf.taste.model.PreferenceArray) r29;

        if z1 != 0 goto label15;

        $z8 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>();

        if $z8 == 0 goto label15;

        if r30 == null goto label14;

        z9 = 0;

        i19 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        i20 = 0;

     label06:
        if i20 >= i19 goto label08;

        $l12 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: long getItemID(int)>(i20);

        $b15 = $l12 cmp l17;

        if $b15 != 0 goto label07;

        z9 = 1;

        goto label08;

     label07:
        i20 = i20 + 1;

        goto label06;

     label08:
        if z9 == 0 goto label14;

        if i19 != 1 goto label09;

        virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object remove(long)>(l16);

        goto label14;

     label09:
        r39 = new org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray;

        $i11 = i19 - 1;

        specialinvoke r39.<org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray: void <init>(int)>($i11);

        i21 = 0;

        i22 = 0;

     label10:
        if i21 >= i19 goto label13;

        $l14 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: long getItemID(int)>(i21);

        $b13 = $l14 cmp l17;

        if $b13 != 0 goto label11;

        i22 = i22 + -1;

        goto label12;

     label11:
        $r25 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: org.apache.mahout.cf.taste.model.Preference get(int)>(i21);

        interfaceinvoke r39.<org.apache.mahout.cf.taste.model.PreferenceArray: void set(int,org.apache.mahout.cf.taste.model.Preference)>(i22, $r25);

     label12:
        i21 = i21 + 1;

        i22 = i22 + 1;

        goto label10;

     label13:
        virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l16, r39);

     label14:
        staticinvoke <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void removeTimestamp(long,long,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(l16, l17, r3);

        goto label23;

     label15:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r7);

        z10 = 0;

        if r30 == null goto label18;

        i23 = 0;

     label16:
        $i10 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        if i23 >= $i10 goto label18;

        $l8 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: long getItemID(int)>(i23);

        $b9 = $l8 cmp l17;

        if $b9 != 0 goto label17;

        z10 = 1;

        interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: void setValue(int,float)>(i23, f0);

        goto label18;

     label17:
        i23 = i23 + 1;

        goto label16;

     label18:
        if z10 != 0 goto label23;

        if r30 != null goto label19;

        r40 = new org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray;

        specialinvoke r40.<org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray: void <init>(int)>(1);

        r32 = r40;

        goto label22;

     label19:
        r41 = new org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray;

        $i3 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        $i6 = $i3 + 1;

        specialinvoke r41.<org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray: void <init>(int)>($i6);

        i24 = 0;

        i25 = 1;

     label20:
        $i7 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: int length()>();

        if i24 >= $i7 goto label21;

        $r21 = interfaceinvoke r30.<org.apache.mahout.cf.taste.model.PreferenceArray: org.apache.mahout.cf.taste.model.Preference get(int)>(i24);

        interfaceinvoke r41.<org.apache.mahout.cf.taste.model.PreferenceArray: void set(int,org.apache.mahout.cf.taste.model.Preference)>(i25, $r21);

        i24 = i24 + 1;

        i25 = i25 + 1;

        goto label20;

     label21:
        r32 = r41;

     label22:
        interfaceinvoke r32.<org.apache.mahout.cf.taste.model.PreferenceArray: void setUserID(int,long)>(0, l16);

        interfaceinvoke r32.<org.apache.mahout.cf.taste.model.PreferenceArray: void setItemID(int,long)>(0, l17);

        interfaceinvoke r32.<org.apache.mahout.cf.taste.model.PreferenceArray: void setValue(int,float)>(0, f0);

        virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l16, r32);

     label23:
        specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void addTimestamp(long,long,java.lang.String,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(l16, l17, r8, r3);

        goto label32;

     label24:
        r34 = (java.util.Collection) r29;

        if z1 != 0 goto label27;

        $z6 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>();

        if $z6 == 0 goto label27;

        if r34 == null goto label26;

        r44 = (java.util.Collection) r34;

        r35 = interfaceinvoke r44.<java.util.Collection: java.util.Iterator iterator()>();

     label25:
        $z7 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label26;

        $r19 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.apache.mahout.cf.taste.model.Preference) $r19;

        $l4 = interfaceinvoke r36.<org.apache.mahout.cf.taste.model.Preference: long getItemID()>();

        $b5 = $l4 cmp l17;

        if $b5 != 0 goto label25;

        interfaceinvoke r35.<java.util.Iterator: void remove()>();

     label26:
        staticinvoke <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void removeTimestamp(long,long,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(l16, l17, r3);

        goto label32;

     label27:
        f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r7);

        z11 = 0;

        if r34 == null goto label29;

        r45 = (java.util.Collection) r34;

        r37 = interfaceinvoke r45.<java.util.Collection: java.util.Iterator iterator()>();

     label28:
        $z5 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label29;

        $r17 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (org.apache.mahout.cf.taste.model.Preference) $r17;

        $l2 = interfaceinvoke r38.<org.apache.mahout.cf.taste.model.Preference: long getItemID()>();

        $b1 = $l2 cmp l17;

        if $b1 != 0 goto label28;

        z11 = 1;

        interfaceinvoke r38.<org.apache.mahout.cf.taste.model.Preference: void setValue(float)>(f1);

     label29:
        if z11 != 0 goto label31;

        if r34 != null goto label30;

        r42 = new java.util.ArrayList;

        specialinvoke r42.<java.util.ArrayList: void <init>(int)>(2);

        r34 = r42;

        virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l16, r42);

     label30:
        r43 = new org.apache.mahout.cf.taste.impl.model.GenericPreference;

        specialinvoke r43.<org.apache.mahout.cf.taste.impl.model.GenericPreference: void <init>(long,long,float)>(l16, l17, f1);

        r46 = (java.util.Collection) r34;

        interfaceinvoke r46.<java.util.Collection: boolean add(java.lang.Object)>(r43);

     label31:
        specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void addTimestamp(long,long,java.lang.String,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(l16, l17, r8, r3);

     label32:
        return;
    }

    protected void processFileWithoutID(org.apache.mahout.common.iterator.FileLineIterator, org.apache.mahout.cf.taste.impl.common.FastByIDMap, org.apache.mahout.cf.taste.impl.common.FastByIDMap)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.common.iterator.FileLineIterator r1;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r2, r3;
        java.lang.String r4;
        org.slf4j.Logger $r5, $r6, $r9;
        boolean $z0, $z1;
        java.lang.Integer $r7, $r10;
        java.lang.Object $r8;
        int $i0, i1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: org.apache.mahout.common.iterator.FileLineIterator;

        r2 := @parameter1: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        r3 := @parameter2: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r5 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("Reading file info...");

        i1 = 0;

     label1:
        $z0 = virtualinvoke r1.<org.apache.mahout.common.iterator.FileLineIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r1.<org.apache.mahout.common.iterator.FileLineIterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        $z1 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void processLineWithoutID(java.lang.String,org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(r4, r2, r3);

        i1 = i1 + 1;

        $i0 = i1 % 100000;

        if $i0 != 0 goto label1;

        $r9 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Processed {} lines", $r10);

        goto label1;

     label2:
        $r6 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Read lines: {}", $r7);

        return;
    }

    protected void processLineWithoutID(java.lang.String, org.apache.mahout.cf.taste.impl.common.FastByIDMap, org.apache.mahout.cf.taste.impl.common.FastByIDMap)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.lang.String r1, r5, r6, r7, r8, $r18, $r19;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r2, r3;
        java.util.Iterator r4;
        boolean z0, z1, $z2, $z3, $z6;
        com.google.common.base.Splitter $r9;
        char $c0;
        java.lang.Iterable $r10;
        java.lang.Object $r11, $r12, $r15, $r16, $r17, $r21;
        org.apache.mahout.cf.taste.impl.common.FastIDSet $r13, r20, r22;
        long l1, l2, l3;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        r3 := @parameter2: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $z2 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z2 != 0 goto label01;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if $c0 != 35 goto label02;

     label01:
        return;

     label02:
        $r9 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: com.google.common.base.Splitter delimiterPattern>;

        $r10 = virtualinvoke $r9.<com.google.common.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r1);

        r4 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r12;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r11;

        z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if z0 == 0 goto label03;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (java.lang.String) $r17;

        goto label04;

     label03:
        $r18 = "";

     label04:
        r7 = $r18;

        z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if z1 == 0 goto label05;

        $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (java.lang.String) $r16;

        goto label06;

     label05:
        $r19 = null;

     label06:
        r8 = $r19;

        l1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readUserIDFromString(java.lang.String)>(r5);

        l2 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readItemIDFromString(java.lang.String)>(r6);

        $z3 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: boolean transpose>;

        if $z3 == 0 goto label07;

        l3 = l1;

        l1 = l2;

        l2 = l3;

     label07:
        if z0 == 0 goto label09;

        if z1 != 0 goto label09;

        $z6 = virtualinvoke r7.<java.lang.String: boolean isEmpty()>();

        if $z6 == 0 goto label09;

        $r15 = virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object get(long)>(l1);

        r20 = (org.apache.mahout.cf.taste.impl.common.FastIDSet) $r15;

        if r20 == null goto label08;

        virtualinvoke r20.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean remove(long)>(l2);

     label08:
        staticinvoke <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void removeTimestamp(long,long,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(l1, l2, r3);

        goto label11;

     label09:
        $r21 = virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object get(long)>(l1);

        r22 = (org.apache.mahout.cf.taste.impl.common.FastIDSet) $r21;

        if r22 != null goto label10;

        $r13 = new org.apache.mahout.cf.taste.impl.common.FastIDSet;

        specialinvoke $r13.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void <init>(int)>(2);

        r22 = $r13;

        virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l1, $r13);

     label10:
        virtualinvoke r22.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean add(long)>(l2);

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void addTimestamp(long,long,java.lang.String,org.apache.mahout.cf.taste.impl.common.FastByIDMap)>(l1, l2, r8, r3);

     label11:
        return;
    }

    private void addTimestamp(long, long, java.lang.String, org.apache.mahout.cf.taste.impl.common.FastByIDMap)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, l1, l2;
        java.lang.String r1;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r2, $r6, r8;
        java.lang.Object $r3;
        java.lang.Long $r4;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        if r1 == null goto label2;

        $r3 = virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object get(long)>(l0);

        r8 = (org.apache.mahout.cf.taste.impl.common.FastByIDMap) $r3;

        if r8 != null goto label1;

        $r6 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        specialinvoke $r6.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>()>();

        r8 = $r6;

        virtualinvoke r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l0, $r6);

     label1:
        l2 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readTimestampFromString(java.lang.String)>(r1);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r8.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l1, $r4);

     label2:
        return;
    }

    private static void removeTimestamp(long, long, org.apache.mahout.cf.taste.impl.common.FastByIDMap)
    {
        long l0, l1;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap r0, r1;
        java.lang.Object $r2;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r0 := @parameter2: org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        $r2 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object get(long)>(l0);

        r1 = (org.apache.mahout.cf.taste.impl.common.FastByIDMap) $r2;

        if r1 == null goto label1;

        virtualinvoke r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object remove(long)>(l1);

     label1:
        return;
    }

    protected long readUserIDFromString(java.lang.String)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        return $l0;
    }

    protected long readItemIDFromString(java.lang.String)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        return $l0;
    }

    protected long readTimestampFromString(java.lang.String)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        return $l0;
    }

    public org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getUserIDs() throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getUserIDs()>();

        return $r2;
    }

    public org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesFromUser(long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        org.apache.mahout.cf.taste.model.PreferenceArray $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesFromUser(long)>(l0);

        return $r2;
    }

    public org.apache.mahout.cf.taste.impl.common.FastIDSet getItemIDsFromUser(long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        org.apache.mahout.cf.taste.impl.common.FastIDSet $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.FastIDSet getItemIDsFromUser(long)>(l0);

        return $r2;
    }

    public org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getItemIDs() throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getItemIDs()>();

        return $r2;
    }

    public org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesForItem(long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        org.apache.mahout.cf.taste.model.PreferenceArray $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.model.PreferenceArray getPreferencesForItem(long)>(l0);

        return $r2;
    }

    public java.lang.Float getPreferenceValue(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, l1;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        java.lang.Float $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: java.lang.Float getPreferenceValue(long,long)>(l0, l1);

        return $r2;
    }

    public java.lang.Long getPreferenceTime(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, l1;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        java.lang.Long $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: java.lang.Long getPreferenceTime(long,long)>(l0, l1);

        return $r2;
    }

    public int getNumItems() throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $i0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: int getNumItems()>();

        return $i0;
    }

    public int getNumUsers() throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $i0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: int getNumUsers()>();

        return $i0;
    }

    public int getNumUsersWithPreferenceFor(long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        int $i1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $i1 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: int getNumUsersWithPreferenceFor(long)>(l0);

        return $i1;
    }

    public int getNumUsersWithPreferenceFor(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, l1;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        int $i2;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $i2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: int getNumUsersWithPreferenceFor(long,long)>(l0, l1);

        return $i2;
    }

    public void setPreference(long, long, float) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, l1;
        float f0;
        org.apache.mahout.cf.taste.model.DataModel $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: void setPreference(long,long,float)>(l0, l1, f0);

        return;
    }

    public void removePreference(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        long l0, l1;
        org.apache.mahout.cf.taste.model.DataModel $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: void removePreference(long,long)>(l0, l1);

        return;
    }

    public void refresh(java.util.Collection)
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.util.Collection r1;
        java.io.File $r2;
        long $l0, $l1, $l2, $l3, $l5, $l6, $l7, $l8;
        byte $b4, $b9;
        org.slf4j.Logger $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        $l0 = virtualinvoke $r2.<java.io.File: long lastModified()>();

        $l2 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastModified>;

        $l1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long minReloadIntervalMS>;

        $l3 = $l2 + $l1;

        $b4 = $l0 cmp $l3;

        if $b4 > 0 goto label1;

        $l5 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long readLastUpdateFileModified()>();

        $l7 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long lastUpdateFileModified>;

        $l6 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long minReloadIntervalMS>;

        $l8 = $l7 + $l6;

        $b9 = $l5 cmp $l8;

        if $b9 <= 0 goto label2;

     label1:
        $r3 = <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log>;

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>("File has changed; reloading...");

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: void reload()>();

     label2:
        return;
    }

    public boolean hasPreferenceValues()
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $z0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: boolean hasPreferenceValues()>();

        return $z0;
    }

    public float getMaxPreference()
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        float $f0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $f0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: float getMaxPreference()>();

        return $f0;
    }

    public float getMinPreference()
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;
        float $f0;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.apache.mahout.cf.taste.model.DataModel delegate>;

        $f0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: float getMinPreference()>();

        return $f0;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.model.file.FileDataModel r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.io.File $r3;
        java.lang.String $r6;

        r0 := @this: org.apache.mahout.cf.taste.impl.model.file.FileDataModel;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileDataModel[dataFile:");

        $r3 = r0.<org.apache.mahout.cf.taste.impl.model.file.FileDataModel: java.io.File dataFile>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        char[] $r1;

        <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: char COMMENT_CHAR> = 35;

        <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: long DEFAULT_MIN_RELOAD_INTERVAL_MS> = 60000L;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/mahout/cf/taste/impl/model/file/FileDataModel");

        <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: org.slf4j.Logger log> = $r0;

        $r1 = newarray (char)[2];

        $r1[0] = 44;

        $r1[1] = 9;

        <org.apache.mahout.cf.taste.impl.model.file.FileDataModel: char[] DELIMIETERS> = $r1;

        return;
    }
}
