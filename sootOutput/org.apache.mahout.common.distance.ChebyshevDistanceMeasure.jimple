public class org.apache.mahout.common.distance.ChebyshevDistanceMeasure extends java.lang.Object implements org.apache.mahout.common.distance.DistanceMeasure
{

    public void <init>()
    {
        org.apache.mahout.common.distance.ChebyshevDistanceMeasure r0;

        r0 := @this: org.apache.mahout.common.distance.ChebyshevDistanceMeasure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void configure(org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.common.distance.ChebyshevDistanceMeasure r0;
        org.apache.hadoop.conf.Configuration r1;

        r0 := @this: org.apache.mahout.common.distance.ChebyshevDistanceMeasure;

        r1 := @parameter0: org.apache.hadoop.conf.Configuration;

        return;
    }

    public java.util.Collection getParameters()
    {
        org.apache.mahout.common.distance.ChebyshevDistanceMeasure r0;
        java.util.List $r1;

        r0 := @this: org.apache.mahout.common.distance.ChebyshevDistanceMeasure;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r1;
    }

    public void createParameters(java.lang.String, org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.common.distance.ChebyshevDistanceMeasure r0;
        java.lang.String r1;
        org.apache.hadoop.conf.Configuration r2;

        r0 := @this: org.apache.mahout.common.distance.ChebyshevDistanceMeasure;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.hadoop.conf.Configuration;

        return;
    }

    public double distance(org.apache.mahout.math.Vector, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.common.distance.ChebyshevDistanceMeasure r0;
        org.apache.mahout.math.Vector r1, r2;
        int $i0, $i1, $i2, $i3;
        org.apache.mahout.math.function.DoubleDoubleFunction $r3, $r4;
        double $d0;
        org.apache.mahout.math.CardinalityException $r5;

        r0 := @this: org.apache.mahout.common.distance.ChebyshevDistanceMeasure;

        r1 := @parameter0: org.apache.mahout.math.Vector;

        r2 := @parameter1: org.apache.mahout.math.Vector;

        $i0 = interfaceinvoke r1.<org.apache.mahout.math.Vector: int size()>();

        $i1 = interfaceinvoke r2.<org.apache.mahout.math.Vector: int size()>();

        if $i0 == $i1 goto label1;

        $r5 = new org.apache.mahout.math.CardinalityException;

        $i2 = interfaceinvoke r1.<org.apache.mahout.math.Vector: int size()>();

        $i3 = interfaceinvoke r2.<org.apache.mahout.math.Vector: int size()>();

        specialinvoke $r5.<org.apache.mahout.math.CardinalityException: void <init>(int,int)>($i2, $i3);

        throw $r5;

     label1:
        $r4 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction MAX_ABS>;

        $r3 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction MINUS>;

        $d0 = interfaceinvoke r1.<org.apache.mahout.math.Vector: double aggregate(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction,org.apache.mahout.math.function.DoubleDoubleFunction)>(r2, $r4, $r3);

        return $d0;
    }

    public double distance(double, org.apache.mahout.math.Vector, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.common.distance.ChebyshevDistanceMeasure r0;
        double d0, $d1;
        org.apache.mahout.math.Vector r1, r2;

        r0 := @this: org.apache.mahout.common.distance.ChebyshevDistanceMeasure;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.mahout.math.Vector;

        r2 := @parameter2: org.apache.mahout.math.Vector;

        $d1 = virtualinvoke r0.<org.apache.mahout.common.distance.ChebyshevDistanceMeasure: double distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)>(r1, r2);

        return $d1;
    }
}
