public abstract class org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer extends java.lang.Object implements org.apache.mahout.cf.taste.impl.recommender.svd.Factorizer
{
    private final org.apache.mahout.cf.taste.model.DataModel dataModel;
    private org.apache.mahout.cf.taste.impl.common.FastByIDMap userIDMapping;
    private org.apache.mahout.cf.taste.impl.common.FastByIDMap itemIDMapping;
    private final org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper;

    protected void <init>(org.apache.mahout.cf.taste.model.DataModel) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer r0;
        org.apache.mahout.cf.taste.model.DataModel r1;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2, $r4;
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer$1 $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer;

        r1 := @parameter0: org.apache.mahout.cf.taste.model.DataModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.model.DataModel dataModel> = r1;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: void buildMappings()>();

        $r2 = new org.apache.mahout.cf.taste.impl.common.RefreshHelper;

        $r3 = new org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer$1;

        specialinvoke $r3.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer$1: void <init>(org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer)>(r0);

        specialinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void <init>(java.util.concurrent.Callable)>($r3);

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper> = $r2;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void addDependency(org.apache.mahout.cf.taste.common.Refreshable)>(r1);

        return;
    }

    private void buildMappings() throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer r0;
        org.apache.mahout.cf.taste.model.DataModel $r1, $r2, $r5, $r6;
        int $i0, $i1;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r3, $r7;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap $r4, $r8;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.model.DataModel dataModel>;

        $i0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.model.DataModel: int getNumUsers()>();

        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.model.DataModel dataModel>;

        $r3 = interfaceinvoke $r2.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getUserIDs()>();

        $r4 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap createIDMapping(int,org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator)>($i0, $r3);

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap userIDMapping> = $r4;

        $r5 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.model.DataModel dataModel>;

        $i1 = interfaceinvoke $r5.<org.apache.mahout.cf.taste.model.DataModel: int getNumItems()>();

        $r6 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.model.DataModel dataModel>;

        $r7 = interfaceinvoke $r6.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getItemIDs()>();

        $r8 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap createIDMapping(int,org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator)>($i1, $r7);

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap itemIDMapping> = $r8;

        return;
    }

    protected org.apache.mahout.cf.taste.impl.recommender.svd.Factorization createFactorization(double[][], double[][])
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer r0;
        double[][] r1, r2;
        org.apache.mahout.cf.taste.impl.recommender.svd.Factorization $r3;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap $r4, $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer;

        r1 := @parameter0: double[][];

        r2 := @parameter1: double[][];

        $r3 = new org.apache.mahout.cf.taste.impl.recommender.svd.Factorization;

        $r5 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap userIDMapping>;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap itemIDMapping>;

        specialinvoke $r3.<org.apache.mahout.cf.taste.impl.recommender.svd.Factorization: void <init>(org.apache.mahout.cf.taste.impl.common.FastByIDMap,org.apache.mahout.cf.taste.impl.common.FastByIDMap,double[][],double[][])>($r5, $r4, r1, r2);

        return $r3;
    }

    protected java.lang.Integer userIndex(long)
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer r0;
        long l0;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap $r1, $r3, $r4;
        java.lang.Object $r2;
        int $i1;
        java.lang.Integer r6;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap userIDMapping>;

        $r2 = virtualinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object get(long)>(l0);

        r6 = (java.lang.Integer) $r2;

        if r6 != null goto label1;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap userIDMapping>;

        $i1 = virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int size()>();

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap userIDMapping>;

        virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l0, r6);

     label1:
        return r6;
    }

    protected java.lang.Integer itemIndex(long)
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer r0;
        long l0;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap $r1, $r3, $r4;
        java.lang.Object $r2;
        int $i1;
        java.lang.Integer r6;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap itemIDMapping>;

        $r2 = virtualinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object get(long)>(l0);

        r6 = (java.lang.Integer) $r2;

        if r6 != null goto label1;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap itemIDMapping>;

        $i1 = virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: int size()>();

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.FastByIDMap itemIDMapping>;

        virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>(l0, r6);

     label1:
        return r6;
    }

    private static org.apache.mahout.cf.taste.impl.common.FastByIDMap createIDMapping(int, org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator)
    {
        int i0, $i2, i3;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator r0;
        org.apache.mahout.cf.taste.impl.common.FastByIDMap $r2;
        boolean $z0;
        long $l1;
        java.lang.Integer $r3;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;

        $r2 = new org.apache.mahout.cf.taste.impl.common.FastByIDMap;

        specialinvoke $r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: void <init>(int)>(i0);

        i3 = 0;

     label1:
        $z0 = interfaceinvoke r0.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $l1 = interfaceinvoke r0.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: long nextLong()>();

        $i2 = i3;

        i3 = i3 + 1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.FastByIDMap: java.lang.Object put(long,java.lang.Object)>($l1, $r3);

        goto label1;

     label2:
        return $r2;
    }

    public void refresh(java.util.Collection)
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer r0;
        java.util.Collection r1;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void refresh(java.util.Collection)>(r1);

        return;
    }

    static void access$000(org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer r0;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.svd.AbstractFactorizer: void buildMappings()>();

        return;
    }
}
