public class org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer extends java.lang.Object
{
    private static final double MINIMAL_VALUE;
    private double m;

    public void <init>()
    {
        org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer r0;

        r0 := @this: org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer: double m> = 2.0;

        return;
    }

    public org.apache.mahout.math.Vector computePi(java.util.Collection, java.util.List)
    {
        org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer r0;
        java.util.Collection r1;
        java.util.List r2;
        double d0, $d1;
        org.apache.mahout.math.DenseVector $r4;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        java.lang.Double $r6;

        r0 := @this: org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.util.List;

        $r4 = new org.apache.mahout.math.DenseVector;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r4.<org.apache.mahout.math.DenseVector: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if i2 >= $i1 goto label2;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r6 = (java.lang.Double) $r5;

        $d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        d0 = virtualinvoke r0.<org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer: double computeProbWeight(double,java.lang.Iterable)>($d1, r2);

        interfaceinvoke $r4.<org.apache.mahout.math.Vector: void set(int,double)>(i2, d0);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r4;
    }

    public double computeProbWeight(double, java.lang.Iterable)
    {
        org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer r0;
        java.lang.Iterable r1;
        java.util.Iterator r2;
        byte $b0, $b1;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8;
        java.lang.Object $r3;
        java.lang.Double $r4;
        boolean $z0;

        r0 := @this: org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer;

        d6 := @parameter0: double;

        r1 := @parameter1: java.lang.Iterable;

        $b0 = d6 cmpl 0.0;

        if $b0 != 0 goto label1;

        d6 = 1.0E-10;

     label1:
        d7 = 0.0;

        r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.Double) $r3;

        d8 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $b1 = d8 cmpl 0.0;

        if $b1 != 0 goto label3;

        d8 = 1.0E-10;

     label3:
        $d5 = d6 / d8;

        $d1 = r0.<org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer: double m>;

        $d3 = $d1 - 1.0;

        $d2 = 2.0 / $d3;

        $d4 = staticinvoke <java.lang.Math: double pow(double,double)>($d5, $d2);

        d7 = d7 + $d4;

        goto label2;

     label4:
        $d0 = 1.0 / d7;

        return $d0;
    }

    public void setM(double)
    {
        org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer r0;
        double d0;

        r0 := @this: org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer;

        d0 := @parameter0: double;

        r0.<org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer: double m> = d0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.clustering.fuzzykmeans.FuzzyKMeansClusterer: double MINIMAL_VALUE> = 1.0E-10;

        return;
    }
}
