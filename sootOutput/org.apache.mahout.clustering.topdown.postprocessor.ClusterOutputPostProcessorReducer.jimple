public class org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer extends org.apache.hadoop.mapreduce.Reducer
{
    private java.util.Map reverseClusterMappings;

    public void <init>()
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer r0;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>();

        return;
    }

    public void setup(org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer r0;
        org.apache.hadoop.mapreduce.Reducer$Context r1;
        org.apache.hadoop.conf.Configuration r2;
        org.apache.hadoop.fs.Path $r4;
        java.lang.String $r5;
        java.util.Map $r6;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Reducer$Context;

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r4 = new org.apache.hadoop.fs.Path;

        $r5 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("clusterOutputPath");

        specialinvoke $r4.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r5);

        $r6 = staticinvoke <org.apache.mahout.clustering.topdown.postprocessor.ClusterCountReader: java.util.Map getClusterIDs(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean)>($r4, r2, 0);

        r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer: java.util.Map reverseClusterMappings> = $r6;

        return;
    }

    protected void reduce(org.apache.hadoop.io.IntWritable, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer r0;
        org.apache.hadoop.io.IntWritable r1, $r7;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        java.util.Iterator r5;
        org.apache.mahout.math.VectorWritable r6;
        java.util.Map $r8;
        int $i0, $i1;
        java.lang.Integer $r9, $r11;
        java.lang.Object $r10, $r18;
        java.lang.StringBuilder $r12, $r14, $r15, $r17;
        java.io.PrintStream $r13;
        java.lang.String $r16;
        boolean $z0;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r7 = new org.apache.hadoop.io.IntWritable;

        $r8 = r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer: java.util.Map reverseClusterMappings>;

        $i0 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.Integer) $r10;

        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        specialinvoke $r7.<org.apache.hadoop.io.IntWritable: void <init>(int)>($i1);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" this: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        r5 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.mahout.math.VectorWritable) $r18;

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>($r7, r6);

        goto label1;

     label2:
        return;
    }

    protected volatile void reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer r0;
        java.lang.Object r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        org.apache.hadoop.io.IntWritable $r4;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r4 = (org.apache.hadoop.io.IntWritable) r1;

        virtualinvoke r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorReducer: void reduce(org.apache.hadoop.io.IntWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3);

        return;
    }
}
