public class org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private org.apache.mahout.math.map.OpenIntObjectHashMap U;
    private org.apache.mahout.math.map.OpenIntObjectHashMap M;
    private boolean usesLongIDs;
    private final org.apache.hadoop.io.DoubleWritable error;

    public void <init>()
    {
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper r0;
        org.apache.hadoop.io.DoubleWritable $r1;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        $r1 = new org.apache.hadoop.io.DoubleWritable;

        specialinvoke $r1.<org.apache.hadoop.io.DoubleWritable: void <init>()>();

        r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.hadoop.io.DoubleWritable error> = $r1;

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration r2;
        org.apache.hadoop.fs.Path $r5, $r8;
        java.lang.String $r6, $r7, $r9, $r10, $r13;
        org.apache.mahout.math.map.OpenIntObjectHashMap $r11, $r12;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r5 = new org.apache.hadoop.fs.Path;

        $r6 = staticinvoke <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String access$000()>();

        $r7 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r6);

        specialinvoke $r5.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r7);

        $r8 = new org.apache.hadoop.fs.Path;

        $r9 = staticinvoke <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String access$100()>();

        $r10 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r9);

        specialinvoke $r8.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r10);

        $r11 = staticinvoke <org.apache.mahout.cf.taste.hadoop.als.ALS: org.apache.mahout.math.map.OpenIntObjectHashMap readMatrixByRows(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r5, r2);

        r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.mahout.math.map.OpenIntObjectHashMap U> = $r11;

        $r12 = staticinvoke <org.apache.mahout.cf.taste.hadoop.als.ALS: org.apache.mahout.math.map.OpenIntObjectHashMap readMatrixByRows(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r8, r2);

        r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.mahout.math.map.OpenIntObjectHashMap M> = $r12;

        $r13 = <org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob: java.lang.String USES_LONG_IDS>;

        $z0 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>($r13, 0);

        r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: boolean usesLongIDs> = $z0;

        return;
    }

    protected void map(org.apache.hadoop.io.LongWritable, org.apache.hadoop.io.Text, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper r0;
        org.apache.hadoop.io.LongWritable r1;
        org.apache.hadoop.io.Text r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        java.lang.String[] r4;
        int i0, i1;
        double d0, d1, $d2;
        java.lang.String $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        org.apache.mahout.math.map.OpenIntObjectHashMap $r9, $r10, $r11, $r12;
        java.lang.Object $r13, $r14;
        org.apache.mahout.math.Vector $r15, $r16;
        org.apache.hadoop.io.DoubleWritable $r17, $r19;
        org.apache.hadoop.io.NullWritable $r18;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper;

        r1 := @parameter0: org.apache.hadoop.io.LongWritable;

        r2 := @parameter1: org.apache.hadoop.io.Text;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>();

        r4 = staticinvoke <org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils: java.lang.String[] splitPrefTokens(java.lang.CharSequence)>($r5);

        $r6 = r4[0];

        $z0 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: boolean usesLongIDs>;

        i0 = staticinvoke <org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils: int readID(java.lang.String,boolean)>($r6, $z0);

        $r7 = r4[1];

        $z1 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: boolean usesLongIDs>;

        i1 = staticinvoke <org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils: int readID(java.lang.String,boolean)>($r7, $z1);

        $r8 = r4[2];

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r8);

        $r9 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.mahout.math.map.OpenIntObjectHashMap U>;

        $z2 = virtualinvoke $r9.<org.apache.mahout.math.map.OpenIntObjectHashMap: boolean containsKey(int)>(i0);

        if $z2 == 0 goto label1;

        $r10 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.mahout.math.map.OpenIntObjectHashMap M>;

        $z3 = virtualinvoke $r10.<org.apache.mahout.math.map.OpenIntObjectHashMap: boolean containsKey(int)>(i1);

        if $z3 == 0 goto label1;

        $r11 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.mahout.math.map.OpenIntObjectHashMap U>;

        $r13 = virtualinvoke $r11.<org.apache.mahout.math.map.OpenIntObjectHashMap: java.lang.Object get(int)>(i0);

        $r15 = (org.apache.mahout.math.Vector) $r13;

        $r12 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.mahout.math.map.OpenIntObjectHashMap M>;

        $r14 = virtualinvoke $r12.<org.apache.mahout.math.map.OpenIntObjectHashMap: java.lang.Object get(int)>(i1);

        $r16 = (org.apache.mahout.math.Vector) $r14;

        d1 = interfaceinvoke $r15.<org.apache.mahout.math.Vector: double dot(org.apache.mahout.math.Vector)>($r16);

        $r19 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.hadoop.io.DoubleWritable error>;

        $d2 = d0 - d1;

        virtualinvoke $r19.<org.apache.hadoop.io.DoubleWritable: void set(double)>($d2);

        $r17 = r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: org.apache.hadoop.io.DoubleWritable error>;

        $r18 = staticinvoke <org.apache.hadoop.io.NullWritable: org.apache.hadoop.io.NullWritable get()>();

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r17, $r18);

     label1:
        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.hadoop.io.Text $r4;
        org.apache.hadoop.io.LongWritable $r5;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.LongWritable) r1;

        $r4 = (org.apache.hadoop.io.Text) r2;

        virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator$PredictRatingsMapper: void map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
