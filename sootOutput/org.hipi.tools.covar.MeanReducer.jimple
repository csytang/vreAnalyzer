public class org.hipi.tools.covar.MeanReducer extends org.apache.hadoop.mapreduce.Reducer
{

    public void <init>()
    {
        org.hipi.tools.covar.MeanReducer r0;

        r0 := @this: org.hipi.tools.covar.MeanReducer;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>();

        return;
    }

    public void reduce(org.apache.hadoop.io.IntWritable, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.hipi.tools.covar.MeanReducer r0;
        org.apache.hadoop.io.IntWritable r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        java.util.Iterator r4;
        org.hipi.opencv.OpenCVMatWritable r5, $r9;
        org.bytedeco.javacpp.opencv_core$Mat $r6, $r12, r13;
        org.bytedeco.javacpp.opencv_core$Scalar $r7;
        int $i1, i2;
        boolean $z0;
        org.apache.hadoop.io.NullWritable $r8;
        org.bytedeco.javacpp.opencv_core$MatExpr $r10;
        double $d0;
        java.lang.Object $r11;

        r0 := @this: org.hipi.tools.covar.MeanReducer;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r6 = new org.bytedeco.javacpp.opencv_core$Mat;

        $i1 = <org.bytedeco.javacpp.opencv_core: int CV_32FC1>;

        $r7 = new org.bytedeco.javacpp.opencv_core$Scalar;

        specialinvoke $r7.<org.bytedeco.javacpp.opencv_core$Scalar: void <init>(double)>(0.0);

        specialinvoke $r6.<org.bytedeco.javacpp.opencv_core$Mat: void <init>(int,int,int,org.bytedeco.javacpp.opencv_core$Scalar)>(64, 64, $i1, $r7);

        r13 = $r6;

        i2 = 0;

        r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.hipi.opencv.OpenCVMatWritable) $r11;

        $r12 = virtualinvoke r5.<org.hipi.opencv.OpenCVMatWritable: org.bytedeco.javacpp.opencv_core$Mat getMat()>();

        staticinvoke <org.bytedeco.javacpp.opencv_core: void add(org.bytedeco.javacpp.opencv_core$Mat,org.bytedeco.javacpp.opencv_core$Mat,org.bytedeco.javacpp.opencv_core$Mat)>($r12, $r6, $r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        if i2 <= 1 goto label3;

        $d0 = (double) i2;

        $r10 = staticinvoke <org.bytedeco.javacpp.opencv_core: org.bytedeco.javacpp.opencv_core$MatExpr divide(org.bytedeco.javacpp.opencv_core$Mat,double)>($r6, $d0);

        r13 = virtualinvoke $r10.<org.bytedeco.javacpp.opencv_core$MatExpr: org.bytedeco.javacpp.opencv_core$Mat asMat()>();

     label3:
        $r8 = staticinvoke <org.apache.hadoop.io.NullWritable: org.apache.hadoop.io.NullWritable get()>();

        $r9 = new org.hipi.opencv.OpenCVMatWritable;

        specialinvoke $r9.<org.hipi.opencv.OpenCVMatWritable: void <init>(org.bytedeco.javacpp.opencv_core$Mat)>(r13);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>($r8, $r9);

        return;
    }

    public volatile void reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.hipi.tools.covar.MeanReducer r0;
        java.lang.Object r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        org.apache.hadoop.io.IntWritable $r4;

        r0 := @this: org.hipi.tools.covar.MeanReducer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r4 = (org.apache.hadoop.io.IntWritable) r1;

        virtualinvoke r0.<org.hipi.tools.covar.MeanReducer: void reduce(org.apache.hadoop.io.IntWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3);

        return;
    }
}
