public class org.apache.mahout.clustering.iterator.DistanceMeasureCluster extends org.apache.mahout.clustering.AbstractCluster
{
    private org.apache.mahout.common.distance.DistanceMeasure measure;

    public void <init>(org.apache.mahout.math.Vector, int, org.apache.mahout.common.distance.DistanceMeasure)
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        org.apache.mahout.math.Vector r1;
        int i0;
        org.apache.mahout.common.distance.DistanceMeasure r2;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        r1 := @parameter0: org.apache.mahout.math.Vector;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.mahout.common.distance.DistanceMeasure;

        specialinvoke r0.<org.apache.mahout.clustering.AbstractCluster: void <init>(org.apache.mahout.math.Vector,int)>(r1, i0);

        r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure> = r2;

        return;
    }

    public void <init>()
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        specialinvoke r0.<org.apache.mahout.clustering.AbstractCluster: void <init>()>();

        return;
    }

    public void configure(org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        org.apache.hadoop.conf.Configuration r1;
        org.apache.mahout.common.distance.DistanceMeasure $r2, $r3;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        r1 := @parameter0: org.apache.hadoop.conf.Configuration;

        $r2 = r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure>;

        if $r2 == null goto label1;

        $r3 = r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure>;

        interfaceinvoke $r3.<org.apache.mahout.common.distance.DistanceMeasure: void configure(org.apache.hadoop.conf.Configuration)>(r1);

     label1:
        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        java.io.DataInput r1;
        java.lang.String r2;
        java.lang.Object $r3;
        org.apache.mahout.common.distance.DistanceMeasure $r4;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        r1 := @parameter0: java.io.DataInput;

        r2 = interfaceinvoke r1.<java.io.DataInput: java.lang.String readUTF()>();

        $r3 = staticinvoke <org.apache.mahout.common.ClassUtils: java.lang.Object instantiateAs(java.lang.String,java.lang.Class)>(r2, class "org/apache/mahout/common/distance/DistanceMeasure");

        $r4 = (org.apache.mahout.common.distance.DistanceMeasure) $r3;

        r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure> = $r4;

        specialinvoke r0.<org.apache.mahout.clustering.AbstractCluster: void readFields(java.io.DataInput)>(r1);

        return;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        java.io.DataOutput r1;
        org.apache.mahout.common.distance.DistanceMeasure $r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r1.<java.io.DataOutput: void writeUTF(java.lang.String)>($r4);

        specialinvoke r0.<org.apache.mahout.clustering.AbstractCluster: void write(java.io.DataOutput)>(r1);

        return;
    }

    public double pdf(org.apache.mahout.math.VectorWritable)
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        org.apache.mahout.math.VectorWritable r1;
        org.apache.mahout.common.distance.DistanceMeasure $r2;
        org.apache.mahout.math.Vector $r3, $r4;
        double $d0, $d1, $d2;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        r1 := @parameter0: org.apache.mahout.math.VectorWritable;

        $r2 = r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure>;

        $r3 = virtualinvoke r1.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $r4 = virtualinvoke r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.math.Vector getCenter()>();

        $d0 = interfaceinvoke $r2.<org.apache.mahout.common.distance.DistanceMeasure: double distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)>($r3, $r4);

        $d1 = 1.0 + $d0;

        $d2 = 1.0 / $d1;

        return $d2;
    }

    public org.apache.mahout.clustering.Model sampleFromPosterior()
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0, $r1;
        org.apache.mahout.math.Vector $r2;
        int $i0;
        org.apache.mahout.common.distance.DistanceMeasure $r3;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        $r1 = new org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        $r2 = virtualinvoke r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.math.Vector getCenter()>();

        $i0 = virtualinvoke r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: int getId()>();

        $r3 = r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure>;

        specialinvoke $r1.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: void <init>(org.apache.mahout.math.Vector,int,org.apache.mahout.common.distance.DistanceMeasure)>($r2, $i0, $r3);

        return $r1;
    }

    public org.apache.mahout.common.distance.DistanceMeasure getMeasure()
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        org.apache.mahout.common.distance.DistanceMeasure $r1;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        $r1 = r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure>;

        return $r1;
    }

    public void setMeasure(org.apache.mahout.common.distance.DistanceMeasure)
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        org.apache.mahout.common.distance.DistanceMeasure r1;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        r1 := @parameter0: org.apache.mahout.common.distance.DistanceMeasure;

        r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: org.apache.mahout.common.distance.DistanceMeasure measure> = r1;

        return;
    }

    public java.lang.String getIdentifier()
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0;
        java.lang.String $r4;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DMC:");

        $i0 = virtualinvoke r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: int getId()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public volatile double pdf(java.lang.Object)
    {
        org.apache.mahout.clustering.iterator.DistanceMeasureCluster r0;
        java.lang.Object r1;
        org.apache.mahout.math.VectorWritable $r2;
        double $d0;

        r0 := @this: org.apache.mahout.clustering.iterator.DistanceMeasureCluster;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.mahout.math.VectorWritable) r1;

        $d0 = virtualinvoke r0.<org.apache.mahout.clustering.iterator.DistanceMeasureCluster: double pdf(org.apache.mahout.math.VectorWritable)>($r2);

        return $d0;
    }
}
