public final class org.apache.mahout.cf.taste.impl.recommender.CachingRecommender extends java.lang.Object implements org.apache.mahout.cf.taste.recommender.Recommender
{
    private static final org.slf4j.Logger log;
    private final org.apache.mahout.cf.taste.recommender.Recommender recommender;
    private final int[] maxHowMany;
    private final org.apache.mahout.cf.taste.impl.common.Retriever recommendationsRetriever;
    private final org.apache.mahout.cf.taste.impl.common.Cache recommendationCache;
    private final org.apache.mahout.cf.taste.impl.common.Cache estimatedPrefCache;
    private final org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper;
    private org.apache.mahout.cf.taste.recommender.IDRescorer currentRescorer;
    private boolean currentlyIncludeKnownItems;

    public void <init>(org.apache.mahout.cf.taste.recommender.Recommender) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        org.apache.mahout.cf.taste.recommender.Recommender r1;
        int i0;
        int[] $r2;
        org.apache.mahout.cf.taste.model.DataModel $r3;
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$RecommendationRetriever $r4;
        org.apache.mahout.cf.taste.impl.common.Cache $r5, $r7;
        org.apache.mahout.cf.taste.impl.common.Retriever $r6;
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$EstimatedPrefRetriever $r8;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r9, $r11;
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$1 $r10;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        r1 := @parameter0: org.apache.mahout.cf.taste.recommender.Recommender;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "recommender is null");

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.Recommender recommender> = r1;

        $r2 = newarray (int)[1];

        $r2[0] = 1;

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: int[] maxHowMany> = $r2;

        $r3 = interfaceinvoke r1.<org.apache.mahout.cf.taste.recommender.Recommender: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        i0 = interfaceinvoke $r3.<org.apache.mahout.cf.taste.model.DataModel: int getNumUsers()>();

        $r4 = new org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$RecommendationRetriever;

        specialinvoke $r4.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$RecommendationRetriever: void <init>(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender,org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$1)>(r0, null);

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Retriever recommendationsRetriever> = $r4;

        $r5 = new org.apache.mahout.cf.taste.impl.common.Cache;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Retriever recommendationsRetriever>;

        specialinvoke $r5.<org.apache.mahout.cf.taste.impl.common.Cache: void <init>(org.apache.mahout.cf.taste.impl.common.Retriever,int)>($r6, i0);

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache recommendationCache> = $r5;

        $r7 = new org.apache.mahout.cf.taste.impl.common.Cache;

        $r8 = new org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$EstimatedPrefRetriever;

        specialinvoke $r8.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$EstimatedPrefRetriever: void <init>(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender,org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$1)>(r0, null);

        specialinvoke $r7.<org.apache.mahout.cf.taste.impl.common.Cache: void <init>(org.apache.mahout.cf.taste.impl.common.Retriever,int)>($r8, i0);

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache estimatedPrefCache> = $r7;

        $r9 = new org.apache.mahout.cf.taste.impl.common.RefreshHelper;

        $r10 = new org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$1;

        specialinvoke $r10.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$1: void <init>(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender)>(r0);

        specialinvoke $r9.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void <init>(java.util.concurrent.Callable)>($r10);

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper> = $r9;

        $r11 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r11.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void addDependency(org.apache.mahout.cf.taste.common.Refreshable)>(r1);

        return;
    }

    private void setCurrentRescorer(org.apache.mahout.cf.taste.recommender.IDRescorer)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        org.apache.mahout.cf.taste.recommender.IDRescorer r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        r1 := @parameter0: org.apache.mahout.cf.taste.recommender.IDRescorer;

        if r1 != null goto label1;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.IDRescorer currentRescorer>;

        if $r3 == null goto label2;

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.IDRescorer currentRescorer> = null;

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: void clear()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.IDRescorer currentRescorer>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.IDRescorer currentRescorer> = r1;

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: void clear()>();

     label2:
        return;
    }

    public void setCurrentlyIncludeKnownItems(boolean)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        boolean z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        z0 := @parameter0: boolean;

        r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: boolean currentlyIncludeKnownItems> = z0;

        return;
    }

    public java.util.List recommend(long, int) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0;
        int i1;
        java.util.List $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: java.util.List recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer,boolean)>(l0, i1, null, 0);

        return $r1;
    }

    public java.util.List recommend(long, int, boolean) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0;
        int i1;
        boolean z0;
        java.util.List $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: java.util.List recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer,boolean)>(l0, i1, null, z0);

        return $r1;
    }

    public java.util.List recommend(long, int, org.apache.mahout.cf.taste.recommender.IDRescorer) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0;
        int i1;
        org.apache.mahout.cf.taste.recommender.IDRescorer r1;
        java.util.List $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.mahout.cf.taste.recommender.IDRescorer;

        $r2 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: java.util.List recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer,boolean)>(l0, i1, r1, 0);

        return $r2;
    }

    public java.util.List recommend(long, int, org.apache.mahout.cf.taste.recommender.IDRescorer, boolean) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0;
        int i1, $i2, $i4, $i5, $i6;
        org.apache.mahout.cf.taste.recommender.IDRescorer r1;
        boolean z0, $z1, $z2;
        int[] $r2, $r3, $r15;
        byte $b3;
        org.apache.mahout.cf.taste.impl.common.Cache $r4, $r8;
        java.lang.Long $r5, $r10, $r12;
        java.lang.Object $r6, $r9, $r16;
        java.util.List $r7, $r11, $r14, r22, $r23;
        org.apache.mahout.cf.taste.impl.common.Retriever $r13;
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations $r17, r21;
        java.lang.Throwable $r18;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.mahout.cf.taste.recommender.IDRescorer;

        z0 := @parameter3: boolean;

        if i1 < 1 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "howMany must be at least 1");

        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: int[] maxHowMany>;

        entermonitor $r2;

     label03:
        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: int[] maxHowMany>;

        $i2 = $r3[0];

        if i1 <= $i2 goto label04;

        $r15 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: int[] maxHowMany>;

        $r15[0] = i1;

     label04:
        exitmonitor $r2;

     label05:
        goto label08;

     label06:
        $r18 := @caughtexception;

        exitmonitor $r2;

     label07:
        throw $r18;

     label08:
        $b3 = l0 cmp -9223372036854775808L;

        if $b3 != 0 goto label09;

        $r13 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Retriever recommendationsRetriever>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-9223372036854775808L);

        $r16 = interfaceinvoke $r13.<org.apache.mahout.cf.taste.impl.common.Retriever: java.lang.Object get(java.lang.Object)>($r12);

        $r17 = (org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations) $r16;

        $r14 = virtualinvoke $r17.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations: java.util.List getItems()>();

        return $r14;

     label09:
        specialinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: void setCurrentRescorer(org.apache.mahout.cf.taste.recommender.IDRescorer)>(r1);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: void setCurrentlyIncludeKnownItems(boolean)>(z0);

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache recommendationCache>;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6 = virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.Cache: java.lang.Object get(java.lang.Object)>($r5);

        r21 = (org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations) $r6;

        $r7 = virtualinvoke r21.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations: java.util.List getItems()>();

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i4 >= i1 goto label10;

        $z1 = virtualinvoke r21.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations: boolean isNoMoreRecommendableItems()>();

        if $z1 != 0 goto label10;

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: void clear(long)>(l0);

        $r8 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache recommendationCache>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r9 = virtualinvoke $r8.<org.apache.mahout.cf.taste.impl.common.Cache: java.lang.Object get(java.lang.Object)>($r10);

        r21 = (org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations) $r9;

        $r11 = virtualinvoke r21.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations: java.util.List getItems()>();

        $i5 = interfaceinvoke $r11.<java.util.List: int size()>();

        if $i5 >= i1 goto label10;

        virtualinvoke r21.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations: void setNoMoreRecommendableItems(boolean)>(1);

     label10:
        r22 = virtualinvoke r21.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$Recommendations: java.util.List getItems()>();

        $i6 = interfaceinvoke r22.<java.util.List: int size()>();

        if $i6 <= i1 goto label11;

        $r23 = interfaceinvoke r22.<java.util.List: java.util.List subList(int,int)>(0, i1);

        goto label12;

     label11:
        $r23 = r22;

     label12:
        return $r23;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public float estimatePreference(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0, l1;
        org.apache.mahout.common.LongPair $r1;
        org.apache.mahout.cf.taste.impl.common.Cache $r2;
        java.lang.Object $r3;
        java.lang.Float $r4;
        float $f0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache estimatedPrefCache>;

        $r1 = new org.apache.mahout.common.LongPair;

        specialinvoke $r1.<org.apache.mahout.common.LongPair: void <init>(long,long)>(l0, l1);

        $r3 = virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.Cache: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.<java.lang.Float: float floatValue()>();

        return $f0;
    }

    public void setPreference(long, long, float) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0, l1;
        float f0;
        org.apache.mahout.cf.taste.recommender.Recommender $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.Recommender recommender>;

        interfaceinvoke $r1.<org.apache.mahout.cf.taste.recommender.Recommender: void setPreference(long,long,float)>(l0, l1, f0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: void clear(long)>(l0);

        return;
    }

    public void removePreference(long, long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0, l1;
        org.apache.mahout.cf.taste.recommender.Recommender $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.Recommender recommender>;

        interfaceinvoke $r1.<org.apache.mahout.cf.taste.recommender.Recommender: void removePreference(long,long)>(l0, l1);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: void clear(long)>(l0);

        return;
    }

    public org.apache.mahout.cf.taste.model.DataModel getDataModel()
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        org.apache.mahout.cf.taste.recommender.Recommender $r1;
        org.apache.mahout.cf.taste.model.DataModel $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.Recommender recommender>;

        $r2 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.recommender.Recommender: org.apache.mahout.cf.taste.model.DataModel getDataModel()>();

        return $r2;
    }

    public void refresh(java.util.Collection)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        java.util.Collection r1;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void refresh(java.util.Collection)>(r1);

        return;
    }

    public void clear(long)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        long l0;
        org.slf4j.Logger $r1;
        java.lang.Long $r2, $r4;
        org.apache.mahout.cf.taste.impl.common.Cache $r3, $r6;
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$2 $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        l0 := @parameter0: long;

        $r1 = <org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.slf4j.Logger log>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Clearing recommendations for user ID \'{}\'", $r2);

        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache recommendationCache>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.Cache: void remove(java.lang.Object)>($r4);

        $r6 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache estimatedPrefCache>;

        $r5 = new org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$2;

        specialinvoke $r5.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender$2: void <init>(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender,long)>(r0, l0);

        virtualinvoke $r6.<org.apache.mahout.cf.taste.impl.common.Cache: void removeKeysMatching(org.apache.mahout.cf.taste.impl.common.Cache$MatchPredicate)>($r5);

        return;
    }

    public void clear()
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        org.slf4j.Logger $r1;
        org.apache.mahout.cf.taste.impl.common.Cache $r2, $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        $r1 = <org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.slf4j.Logger log>;

        interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Clearing all recommendations...");

        $r2 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache recommendationCache>;

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.Cache: void clear()>();

        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.impl.common.Cache estimatedPrefCache>;

        virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.Cache: void clear()>();

        return;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        org.apache.mahout.cf.taste.recommender.Recommender $r3;
        java.lang.String $r6;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CachingRecommender[recommender:");

        $r3 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.Recommender recommender>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    static org.slf4j.Logger access$200()
    {
        org.slf4j.Logger $r0;

        $r0 = <org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.slf4j.Logger log>;

        return $r0;
    }

    static int[] access$300(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        int[] $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: int[] maxHowMany>;

        return $r1;
    }

    static org.apache.mahout.cf.taste.recommender.IDRescorer access$400(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        org.apache.mahout.cf.taste.recommender.IDRescorer $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.IDRescorer currentRescorer>;

        return $r1;
    }

    static boolean access$500(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        boolean $z0;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: boolean currentlyIncludeKnownItems>;

        return $z0;
    }

    static org.apache.mahout.cf.taste.recommender.Recommender access$600(org.apache.mahout.cf.taste.impl.recommender.CachingRecommender)
    {
        org.apache.mahout.cf.taste.impl.recommender.CachingRecommender r0;
        org.apache.mahout.cf.taste.recommender.Recommender $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.CachingRecommender;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.apache.mahout.cf.taste.recommender.Recommender recommender>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/mahout/cf/taste/impl/recommender/CachingRecommender");

        <org.apache.mahout.cf.taste.impl.recommender.CachingRecommender: org.slf4j.Logger log> = $r0;

        return;
    }
}
