public final class org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable extends java.lang.Object implements java.util.concurrent.Callable
{
    private final org.apache.mahout.cf.taste.recommender.Recommender recommender;
    private final long testUserID;
    private final org.apache.mahout.cf.taste.model.PreferenceArray prefs;
    private final java.util.concurrent.atomic.AtomicInteger noEstimateCounter;
    final org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator this$0;

    public void <init>(org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator, org.apache.mahout.cf.taste.recommender.Recommender, long, org.apache.mahout.cf.taste.model.PreferenceArray, java.util.concurrent.atomic.AtomicInteger)
    {
        org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable r0;
        org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator r1;
        org.apache.mahout.cf.taste.recommender.Recommender r2;
        long l0;
        org.apache.mahout.cf.taste.model.PreferenceArray r3;
        java.util.concurrent.atomic.AtomicInteger r4;

        r0 := @this: org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator;

        r2 := @parameter1: org.apache.mahout.cf.taste.recommender.Recommender;

        l0 := @parameter2: long;

        r3 := @parameter3: org.apache.mahout.cf.taste.model.PreferenceArray;

        r4 := @parameter4: java.util.concurrent.atomic.AtomicInteger;

        r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: org.apache.mahout.cf.taste.recommender.Recommender recommender> = r2;

        r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: long testUserID> = l0;

        r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: org.apache.mahout.cf.taste.model.PreferenceArray prefs> = r3;

        r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: java.util.concurrent.atomic.AtomicInteger noEstimateCounter> = r4;

        return;
    }

    public java.lang.Void call() throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable r0;
        java.util.Iterator r1;
        org.apache.mahout.cf.taste.model.Preference r2;
        org.apache.mahout.cf.taste.model.PreferenceArray $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        org.apache.mahout.cf.taste.recommender.Recommender $r5;
        long $l0, $l1, $l3, $l4;
        org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator $r6, $r7;
        java.util.concurrent.atomic.AtomicInteger $r8;
        org.slf4j.Logger $r9, $r12;
        org.apache.mahout.cf.taste.common.NoSuchItemException $r10;
        java.lang.Long $r11, $r14;
        org.apache.mahout.cf.taste.common.NoSuchUserException $r13;
        float f0, f1;

        r0 := @this: org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: org.apache.mahout.cf.taste.model.PreferenceArray prefs>;

        r1 = interfaceinvoke $r3.<org.apache.mahout.cf.taste.model.PreferenceArray: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.cf.taste.model.Preference) $r4;

        f0 = #NaNF;

     label2:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: org.apache.mahout.cf.taste.recommender.Recommender recommender>;

        $l0 = r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: long testUserID>;

        $l1 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.Preference: long getItemID()>();

        f0 = interfaceinvoke $r5.<org.apache.mahout.cf.taste.recommender.Recommender: float estimatePreference(long,long)>($l0, $l1);

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        $r12 = staticinvoke <org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator: org.slf4j.Logger access$000()>();

        $l4 = r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: long testUserID>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("User exists in test data but not training data: {}", $r14);

        goto label6;

     label5:
        $r10 := @caughtexception;

        $r9 = staticinvoke <org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator: org.slf4j.Logger access$000()>();

        $l3 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.Preference: long getItemID()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Item exists in test data but not training data: {}", $r11);

     label6:
        $z1 = staticinvoke <java.lang.Float: boolean isNaN(float)>(f0);

        if $z1 == 0 goto label7;

        $r8 = r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: java.util.concurrent.atomic.AtomicInteger noEstimateCounter>;

        virtualinvoke $r8.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        goto label1;

     label7:
        $r6 = r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator this$0>;

        f1 = staticinvoke <org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator: float access$100(org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator,float)>($r6, f0);

        $r7 = r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator this$0>;

        virtualinvoke $r7.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator: void processOneEstimate(float,org.apache.mahout.cf.taste.model.Preference)>(f1, r2);

        goto label1;

     label8:
        return null;

        catch org.apache.mahout.cf.taste.common.NoSuchUserException from label2 to label3 with label4;
        catch org.apache.mahout.cf.taste.common.NoSuchItemException from label2 to label3 with label5;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable r0;
        java.lang.Void $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.eval.AbstractDifferenceRecommenderEvaluator$PreferenceEstimateCallable: java.lang.Void call()>();

        return $r1;
    }
}
