public final class org.apache.mahout.math.hadoop.stochasticsvd.BtJob extends java.lang.Object
{
    public static final java.lang.String OUTPUT_Q;
    public static final java.lang.String OUTPUT_BT;
    public static final java.lang.String OUTPUT_BBT;
    public static final java.lang.String OUTPUT_SQ;
    public static final java.lang.String OUTPUT_SB;
    public static final java.lang.String PROP_QJOB_PATH;
    public static final java.lang.String PROP_OUPTUT_BBT_PRODUCTS;
    public static final java.lang.String PROP_OUTER_PROD_BLOCK_HEIGHT;
    public static final java.lang.String PROP_RHAT_BROADCAST;
    public static final java.lang.String PROP_XI_PATH;
    public static final java.lang.String PROP_NV;

    private void <init>()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.BtJob r0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.BtJob;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void run(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path[], org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, int, int, int, int, int, boolean, java.lang.Class, boolean) throws java.lang.ClassNotFoundException, java.lang.InterruptedException, java.io.IOException
    {
        org.apache.hadoop.conf.Configuration r0, $r13, $r15, $r17, $r18, $r20, $r21, $r23, $r26, $r30;
        org.apache.hadoop.fs.Path[] r1;
        org.apache.hadoop.fs.Path r2, r3, r4, $r24, $r27;
        int i0, i1, i2, i3, i4, i5, i7;
        boolean z0, z1, $z3;
        java.lang.Class r5;
        org.apache.hadoop.fs.FileSystem r8;
        org.apache.hadoop.fs.FileStatus[] r10;
        org.apache.hadoop.mapred.JobConf $r11;
        org.apache.hadoop.fs.FileStatus r12;
        org.apache.hadoop.mapreduce.Job $r14;
        org.apache.hadoop.io.SequenceFile$CompressionType $r16;
        java.lang.String $r19, $r29;
        java.io.IOException $r22;
        java.net.URI $r25, $r28;
        long $l6;

        r0 := @parameter0: org.apache.hadoop.conf.Configuration;

        r1 := @parameter1: org.apache.hadoop.fs.Path[];

        r2 := @parameter2: org.apache.hadoop.fs.Path;

        r3 := @parameter3: org.apache.hadoop.fs.Path;

        r4 := @parameter4: org.apache.hadoop.fs.Path;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        z0 := @parameter10: boolean;

        r5 := @parameter11: java.lang.Class;

        z1 := @parameter12: boolean;

        $r11 = new org.apache.hadoop.mapred.JobConf;

        specialinvoke $r11.<org.apache.hadoop.mapred.JobConf: void <init>(org.apache.hadoop.conf.Configuration)>(r0);

        staticinvoke <org.apache.hadoop.mapred.lib.MultipleOutputs: void addNamedOutput(org.apache.hadoop.mapred.JobConf,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class)>($r11, "Q", class "org/apache/hadoop/mapred/SequenceFileOutputFormat", r5, class "org/apache/mahout/math/VectorWritable");

        if z1 == 0 goto label1;

        staticinvoke <org.apache.hadoop.mapred.lib.MultipleOutputs: void addNamedOutput(org.apache.hadoop.mapred.JobConf,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class)>($r11, "bbt", class "org/apache/hadoop/mapred/SequenceFileOutputFormat", class "org/apache/hadoop/io/IntWritable", class "org/apache/mahout/math/VectorWritable");

        virtualinvoke $r11.<org.apache.hadoop.mapred.JobConf: void setBoolean(java.lang.String,boolean)>("ssvd.nv", 1);

     label1:
        if r3 == null goto label2;

        staticinvoke <org.apache.hadoop.mapred.lib.MultipleOutputs: void addNamedOutput(org.apache.hadoop.mapred.JobConf,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class)>($r11, "sq", class "org/apache/hadoop/mapred/SequenceFileOutputFormat", class "org/apache/hadoop/io/IntWritable", class "org/apache/mahout/math/VectorWritable");

        staticinvoke <org.apache.hadoop.mapred.lib.MultipleOutputs: void addNamedOutput(org.apache.hadoop.mapred.JobConf,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Class)>($r11, "sb", class "org/apache/hadoop/mapred/SequenceFileOutputFormat", class "org/apache/hadoop/io/IntWritable", class "org/apache/mahout/math/VectorWritable");

     label2:
        $r14 = new org.apache.hadoop.mapreduce.Job;

        specialinvoke $r14.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration)>($r11);

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setJobName(java.lang.String)>("Bt-job");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/BtJob");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setInputFormatClass(java.lang.Class)>(class "org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFormat");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setOutputFormatClass(java.lang.Class)>(class "org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat");

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path[])>($r14, r1);

        if i0 <= 0 goto label3;

        $l6 = (long) i0;

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void setMinInputSplitSize(org.apache.hadoop.mapreduce.Job,long)>($r14, $l6);

     label3:
        staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>($r14, r4);

        $r13 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r13.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("mapreduce.output.basename", "part");

        staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputCompressorClass(org.apache.hadoop.mapreduce.Job,java.lang.Class)>($r14, class "org/apache/hadoop/io/compress/DefaultCodec");

        $r16 = <org.apache.hadoop.io.SequenceFile$CompressionType: org.apache.hadoop.io.SequenceFile$CompressionType BLOCK>;

        staticinvoke <org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat: void setOutputCompressionType(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.io.SequenceFile$CompressionType)>($r14, $r16);

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setMapOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/LongWritable");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setMapOutputValueClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/SparseRowBlockWritable");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/mahout/math/VectorWritable");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/BtJob$BtMapper");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/BtJob$OuterProductCombiner");

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/BtJob$OuterProductReducer");

        $r15 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r15.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.k", i1);

        $r18 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r18.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.p", i2);

        $r17 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r19 = virtualinvoke r2.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvd.QJob.path", $r19);

        $r21 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r21.<org.apache.hadoop.conf.Configuration: void setBoolean(java.lang.String,boolean)>("ssvd.BtJob.outputBBtProducts", z1);

        $r20 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r20.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.outerProdBlockHeight", i3);

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void setNumReduceTasks(int)>(i4);

        if r3 == null goto label4;

        $r30 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r29 = virtualinvoke r3.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        virtualinvoke $r30.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvdpca.xi.path", $r29);

     label4:
        if z0 == 0 goto label6;

        $r23 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r23.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvd.rhat.broadcast", "y");

        $r25 = virtualinvoke r2.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        r8 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>($r25, r0);

        $r24 = new org.apache.hadoop.fs.Path;

        specialinvoke $r24.<org.apache.hadoop.fs.Path: void <init>(org.apache.hadoop.fs.Path,java.lang.String)>(r2, "R-*");

        r10 = virtualinvoke r8.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileStatus[] globStatus(org.apache.hadoop.fs.Path)>($r24);

        if r10 == null goto label6;

        i5 = lengthof r10;

        i7 = 0;

     label5:
        if i7 >= i5 goto label6;

        r12 = r10[i7];

        $r27 = virtualinvoke r12.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>();

        $r28 = virtualinvoke $r27.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        $r26 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        staticinvoke <org.apache.hadoop.filecache.DistributedCache: void addCacheFile(java.net.URI,org.apache.hadoop.conf.Configuration)>($r28, $r26);

        i7 = i7 + 1;

        goto label5;

     label6:
        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: void submit()>();

        virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(0);

        $z3 = virtualinvoke $r14.<org.apache.hadoop.mapreduce.Job: boolean isSuccessful()>();

        if $z3 != 0 goto label7;

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("Bt job unsuccessful.");

        throw $r22;

     label7:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String PROP_NV> = "ssvd.nv";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String PROP_XI_PATH> = "ssvdpca.xi.path";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String PROP_RHAT_BROADCAST> = "ssvd.rhat.broadcast";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String PROP_OUTER_PROD_BLOCK_HEIGHT> = "ssvd.outerProdBlockHeight";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String PROP_OUPTUT_BBT_PRODUCTS> = "ssvd.BtJob.outputBBtProducts";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String PROP_QJOB_PATH> = "ssvd.QJob.path";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String OUTPUT_SB> = "sb";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String OUTPUT_SQ> = "sq";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String OUTPUT_BBT> = "bbt";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String OUTPUT_BT> = "part";

        <org.apache.mahout.math.hadoop.stochasticsvd.BtJob: java.lang.String OUTPUT_Q> = "Q";

        return;
    }
}
