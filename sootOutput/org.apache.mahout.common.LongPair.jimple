public final class org.apache.mahout.common.LongPair extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private final long first;
    private final long second;

    public void <init>(long, long)
    {
        org.apache.mahout.common.LongPair r0;
        long l0, l1;

        r0 := @this: org.apache.mahout.common.LongPair;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.common.LongPair: long first> = l0;

        r0.<org.apache.mahout.common.LongPair: long second> = l1;

        return;
    }

    public long getFirst()
    {
        org.apache.mahout.common.LongPair r0;
        long $l0;

        r0 := @this: org.apache.mahout.common.LongPair;

        $l0 = r0.<org.apache.mahout.common.LongPair: long first>;

        return $l0;
    }

    public long getSecond()
    {
        org.apache.mahout.common.LongPair r0;
        long $l0;

        r0 := @this: org.apache.mahout.common.LongPair;

        $l0 = r0.<org.apache.mahout.common.LongPair: long second>;

        return $l0;
    }

    public org.apache.mahout.common.LongPair swap()
    {
        org.apache.mahout.common.LongPair r0, $r1;
        long $l0, $l1;

        r0 := @this: org.apache.mahout.common.LongPair;

        $r1 = new org.apache.mahout.common.LongPair;

        $l1 = r0.<org.apache.mahout.common.LongPair: long second>;

        $l0 = r0.<org.apache.mahout.common.LongPair: long first>;

        specialinvoke $r1.<org.apache.mahout.common.LongPair: void <init>(long,long)>($l1, $l0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.common.LongPair r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: org.apache.mahout.common.LongPair;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.common.LongPair;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.mahout.common.LongPair) r1;

        $l0 = r0.<org.apache.mahout.common.LongPair: long first>;

        $l1 = virtualinvoke r2.<org.apache.mahout.common.LongPair: long getFirst()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        $l3 = r0.<org.apache.mahout.common.LongPair: long second>;

        $l4 = virtualinvoke r2.<org.apache.mahout.common.LongPair: long getSecond()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public int hashCode()
    {
        org.apache.mahout.common.LongPair r0;
        int i0, $i2, $i3, $i5, $i6, $i7;
        long $l1, $l4;

        r0 := @this: org.apache.mahout.common.LongPair;

        $l1 = r0.<org.apache.mahout.common.LongPair: long first>;

        i0 = staticinvoke <com.google.common.primitives.Longs: int hashCode(long)>($l1);

        $i3 = i0 >>> 16;

        $i2 = i0 << 16;

        $i5 = $i3 | $i2;

        $l4 = r0.<org.apache.mahout.common.LongPair: long second>;

        $i6 = staticinvoke <com.google.common.primitives.Longs: int hashCode(long)>($l4);

        $i7 = $i5 ^ $i6;

        return $i7;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.common.LongPair r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7;
        long $l0, $l1;
        java.lang.String $r3, $r8;

        r0 := @this: org.apache.mahout.common.LongPair;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $l0 = r0.<org.apache.mahout.common.LongPair: long first>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $l1 = r0.<org.apache.mahout.common.LongPair: long second>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public int compareTo(org.apache.mahout.common.LongPair)
    {
        org.apache.mahout.common.LongPair r0, r1;
        long $l0, $l1, $l3, $l4, $l6, $l7, $l9, $l10;
        byte $b2, $b5, $b8, $b11, $b12;

        r0 := @this: org.apache.mahout.common.LongPair;

        r1 := @parameter0: org.apache.mahout.common.LongPair;

        $l0 = r0.<org.apache.mahout.common.LongPair: long first>;

        $l1 = virtualinvoke r1.<org.apache.mahout.common.LongPair: long getFirst()>();

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label1;

        return -1;

     label1:
        $l3 = r0.<org.apache.mahout.common.LongPair: long first>;

        $l4 = virtualinvoke r1.<org.apache.mahout.common.LongPair: long getFirst()>();

        $b5 = $l3 cmp $l4;

        if $b5 <= 0 goto label2;

        return 1;

     label2:
        $l6 = r0.<org.apache.mahout.common.LongPair: long second>;

        $l7 = virtualinvoke r1.<org.apache.mahout.common.LongPair: long getSecond()>();

        $b8 = $l6 cmp $l7;

        if $b8 >= 0 goto label3;

        $b12 = -1;

        goto label5;

     label3:
        $l9 = r0.<org.apache.mahout.common.LongPair: long second>;

        $l10 = virtualinvoke r1.<org.apache.mahout.common.LongPair: long getSecond()>();

        $b11 = $l9 cmp $l10;

        if $b11 <= 0 goto label4;

        $b12 = 1;

        goto label5;

     label4:
        $b12 = 0;

     label5:
        return $b12;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.mahout.common.LongPair r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.mahout.common.LongPair;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.mahout.common.LongPair) r1;

        $i0 = virtualinvoke r0.<org.apache.mahout.common.LongPair: int compareTo(org.apache.mahout.common.LongPair)>($r2);

        return $i0;
    }
}
