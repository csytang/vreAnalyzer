public final class org.apache.mahout.common.iterator.FileLineIterable extends java.lang.Object implements java.lang.Iterable
{
    private final java.io.InputStream is;
    private final java.nio.charset.Charset encoding;
    private final boolean skipFirstLine;
    private final java.lang.String origFilename;

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        java.io.File r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

        r1 := @parameter0: java.io.File;

        $r2 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.mahout.common.iterator.FileLineIterable: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, $r2, 0);

        return;
    }

    public void <init>(java.io.File, boolean) throws java.io.IOException
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        java.io.File r1;
        boolean z0;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        $r2 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.mahout.common.iterator.FileLineIterable: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, $r2, z0);

        return;
    }

    public void <init>(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        java.io.File r1;
        java.nio.charset.Charset r2;
        boolean z0;
        java.io.InputStream $r3;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.nio.charset.Charset;

        z0 := @parameter2: boolean;

        $r3 = staticinvoke <org.apache.mahout.common.iterator.FileLineIterator: java.io.InputStream getFileInputStream(java.io.File)>(r1);

        specialinvoke r0.<org.apache.mahout.common.iterator.FileLineIterable: void <init>(java.io.InputStream,java.nio.charset.Charset,boolean)>($r3, r2, z0);

        return;
    }

    public void <init>(java.io.InputStream)
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        java.io.InputStream r1;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

        r1 := @parameter0: java.io.InputStream;

        $r2 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.mahout.common.iterator.FileLineIterable: void <init>(java.io.InputStream,java.nio.charset.Charset,boolean)>(r1, $r2, 0);

        return;
    }

    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        java.io.InputStream r1;
        boolean z0;
        java.nio.charset.Charset $r2;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $r2 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke r0.<org.apache.mahout.common.iterator.FileLineIterable: void <init>(java.io.InputStream,java.nio.charset.Charset,boolean)>(r1, $r2, z0);

        return;
    }

    public void <init>(java.io.InputStream, java.nio.charset.Charset, boolean)
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        java.io.InputStream r1;
        java.nio.charset.Charset r2;
        boolean z0;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.nio.charset.Charset;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.common.iterator.FileLineIterable: java.io.InputStream is> = r1;

        r0.<org.apache.mahout.common.iterator.FileLineIterable: java.nio.charset.Charset encoding> = r2;

        r0.<org.apache.mahout.common.iterator.FileLineIterable: boolean skipFirstLine> = z0;

        r0.<org.apache.mahout.common.iterator.FileLineIterable: java.lang.String origFilename> = "";

        return;
    }

    public void <init>(java.io.InputStream, java.nio.charset.Charset, boolean, java.lang.String)
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        java.io.InputStream r1;
        java.nio.charset.Charset r2;
        boolean z0;
        java.lang.String r3;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.nio.charset.Charset;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.common.iterator.FileLineIterable: java.io.InputStream is> = r1;

        r0.<org.apache.mahout.common.iterator.FileLineIterable: java.nio.charset.Charset encoding> = r2;

        r0.<org.apache.mahout.common.iterator.FileLineIterable: boolean skipFirstLine> = z0;

        r0.<org.apache.mahout.common.iterator.FileLineIterable: java.lang.String origFilename> = r3;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.mahout.common.iterator.FileLineIterable r0;
        org.apache.mahout.common.iterator.FileLineIterator $r2;
        java.lang.String $r3;
        boolean $z0;
        java.nio.charset.Charset $r4;
        java.io.InputStream $r5;
        java.io.IOException $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: org.apache.mahout.common.iterator.FileLineIterable;

     label1:
        $r2 = new org.apache.mahout.common.iterator.FileLineIterator;

        $r5 = r0.<org.apache.mahout.common.iterator.FileLineIterable: java.io.InputStream is>;

        $r4 = r0.<org.apache.mahout.common.iterator.FileLineIterable: java.nio.charset.Charset encoding>;

        $z0 = r0.<org.apache.mahout.common.iterator.FileLineIterable: boolean skipFirstLine>;

        $r3 = r0.<org.apache.mahout.common.iterator.FileLineIterable: java.lang.String origFilename>;

        specialinvoke $r2.<org.apache.mahout.common.iterator.FileLineIterator: void <init>(java.io.InputStream,java.nio.charset.Charset,boolean,java.lang.String)>($r5, $r4, $z0, $r3);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
