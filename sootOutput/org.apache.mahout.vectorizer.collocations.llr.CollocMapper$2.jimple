class org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2 extends java.lang.Object implements org.apache.mahout.math.function.ObjectIntProcedure
{
    final org.apache.mahout.vectorizer.collocations.llr.GramKey val$gramKey;
    final org.apache.hadoop.mapreduce.Mapper$Context val$context;
    final org.apache.mahout.vectorizer.collocations.llr.CollocMapper this$0;

    void <init>(org.apache.mahout.vectorizer.collocations.llr.CollocMapper, org.apache.mahout.vectorizer.collocations.llr.GramKey, org.apache.hadoop.mapreduce.Mapper$Context)
    {
        org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2 r0;
        org.apache.mahout.vectorizer.collocations.llr.CollocMapper r1;
        org.apache.mahout.vectorizer.collocations.llr.GramKey r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;

        r0 := @this: org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2;

        r1 := @parameter0: org.apache.mahout.vectorizer.collocations.llr.CollocMapper;

        r2 := @parameter1: org.apache.mahout.vectorizer.collocations.llr.GramKey;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        r0.<org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2: org.apache.mahout.vectorizer.collocations.llr.CollocMapper this$0> = r1;

        r0.<org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2: org.apache.mahout.vectorizer.collocations.llr.GramKey val$gramKey> = r2;

        r0.<org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2: org.apache.hadoop.mapreduce.Mapper$Context val$context> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean apply(java.lang.String, int)
    {
        org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2 r0;
        java.lang.String r1;
        int i0;
        org.apache.mahout.vectorizer.collocations.llr.Gram $r2;
        org.apache.mahout.vectorizer.collocations.llr.Gram$Type $r3;
        org.apache.mahout.vectorizer.collocations.llr.GramKey $r4, $r6;
        byte[] $r5;
        org.apache.hadoop.mapreduce.Mapper$Context $r7;
        java.lang.Exception $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r2 = new org.apache.mahout.vectorizer.collocations.llr.Gram;

        $r3 = <org.apache.mahout.vectorizer.collocations.llr.Gram$Type: org.apache.mahout.vectorizer.collocations.llr.Gram$Type UNIGRAM>;

        specialinvoke $r2.<org.apache.mahout.vectorizer.collocations.llr.Gram: void <init>(java.lang.String,int,org.apache.mahout.vectorizer.collocations.llr.Gram$Type)>(r1, i0, $r3);

        $r4 = r0.<org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2: org.apache.mahout.vectorizer.collocations.llr.GramKey val$gramKey>;

        $r5 = staticinvoke <org.apache.mahout.vectorizer.collocations.llr.CollocMapper: byte[] access$000()>();

        virtualinvoke $r4.<org.apache.mahout.vectorizer.collocations.llr.GramKey: void set(org.apache.mahout.vectorizer.collocations.llr.Gram,byte[])>($r2, $r5);

        $r7 = r0.<org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2: org.apache.hadoop.mapreduce.Mapper$Context val$context>;

        $r6 = r0.<org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2: org.apache.mahout.vectorizer.collocations.llr.GramKey val$gramKey>;

        virtualinvoke $r7.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r6, $r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        return 1;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public volatile boolean apply(java.lang.Object, int)
    {
        org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2 r0;
        java.lang.Object r1;
        int i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = (java.lang.String) r1;

        $z0 = virtualinvoke r0.<org.apache.mahout.vectorizer.collocations.llr.CollocMapper$2: boolean apply(java.lang.String,int)>($r2, i0);

        return $z0;
    }
}
