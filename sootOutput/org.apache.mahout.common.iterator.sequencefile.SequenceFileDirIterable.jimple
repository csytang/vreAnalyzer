public final class org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable extends java.lang.Object implements java.lang.Iterable
{
    private final org.apache.hadoop.fs.Path path;
    private final org.apache.mahout.common.iterator.sequencefile.PathType pathType;
    private final org.apache.hadoop.fs.PathFilter filter;
    private final java.util.Comparator ordering;
    private final boolean reuseKeyValueInstances;
    private final org.apache.hadoop.conf.Configuration conf;

    public void <init>(org.apache.hadoop.fs.Path, org.apache.mahout.common.iterator.sequencefile.PathType, org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable r0;
        org.apache.hadoop.fs.Path r1;
        org.apache.mahout.common.iterator.sequencefile.PathType r2;
        org.apache.hadoop.conf.Configuration r3;

        r0 := @this: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable;

        r1 := @parameter0: org.apache.hadoop.fs.Path;

        r2 := @parameter1: org.apache.mahout.common.iterator.sequencefile.PathType;

        r3 := @parameter2: org.apache.hadoop.conf.Configuration;

        specialinvoke r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: void <init>(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)>(r1, r2, null, r3);

        return;
    }

    public void <init>(org.apache.hadoop.fs.Path, org.apache.mahout.common.iterator.sequencefile.PathType, org.apache.hadoop.fs.PathFilter, org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable r0;
        org.apache.hadoop.fs.Path r1;
        org.apache.mahout.common.iterator.sequencefile.PathType r2;
        org.apache.hadoop.fs.PathFilter r3;
        org.apache.hadoop.conf.Configuration r4;

        r0 := @this: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable;

        r1 := @parameter0: org.apache.hadoop.fs.Path;

        r2 := @parameter1: org.apache.mahout.common.iterator.sequencefile.PathType;

        r3 := @parameter2: org.apache.hadoop.fs.PathFilter;

        r4 := @parameter3: org.apache.hadoop.conf.Configuration;

        specialinvoke r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: void <init>(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)>(r1, r2, r3, null, 0, r4);

        return;
    }

    public void <init>(org.apache.hadoop.fs.Path, org.apache.mahout.common.iterator.sequencefile.PathType, org.apache.hadoop.fs.PathFilter, java.util.Comparator, boolean, org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable r0;
        org.apache.hadoop.fs.Path r1;
        org.apache.mahout.common.iterator.sequencefile.PathType r2;
        org.apache.hadoop.fs.PathFilter r3;
        java.util.Comparator r4;
        boolean z0;
        org.apache.hadoop.conf.Configuration r5;

        r0 := @this: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable;

        r1 := @parameter0: org.apache.hadoop.fs.Path;

        r2 := @parameter1: org.apache.mahout.common.iterator.sequencefile.PathType;

        r3 := @parameter2: org.apache.hadoop.fs.PathFilter;

        r4 := @parameter3: java.util.Comparator;

        z0 := @parameter4: boolean;

        r5 := @parameter5: org.apache.hadoop.conf.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.hadoop.fs.Path path> = r1;

        r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.mahout.common.iterator.sequencefile.PathType pathType> = r2;

        r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.hadoop.fs.PathFilter filter> = r3;

        r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: java.util.Comparator ordering> = r4;

        r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: boolean reuseKeyValueInstances> = z0;

        r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.hadoop.conf.Configuration conf> = r5;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable r0;
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator $r2;
        org.apache.hadoop.conf.Configuration $r3;
        boolean $z0;
        java.util.Comparator $r4;
        org.apache.hadoop.fs.PathFilter $r5;
        org.apache.mahout.common.iterator.sequencefile.PathType $r6;
        org.apache.hadoop.fs.Path $r7, $r10;
        java.io.IOException $r8;
        java.lang.IllegalStateException $r9;
        java.lang.String $r11;

        r0 := @this: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable;

     label1:
        $r2 = new org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator;

        $r7 = r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.hadoop.fs.Path path>;

        $r6 = r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.mahout.common.iterator.sequencefile.PathType pathType>;

        $r5 = r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.hadoop.fs.PathFilter filter>;

        $r4 = r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: java.util.Comparator ordering>;

        $z0 = r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: boolean reuseKeyValueInstances>;

        $r3 = r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.hadoop.conf.Configuration conf>;

        specialinvoke $r2.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator: void <init>(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)>($r7, $r6, $r5, $r4, $z0, $r3);

     label2:
        return $r2;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalStateException;

        $r10 = r0.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: org.apache.hadoop.fs.Path path>;

        $r11 = virtualinvoke $r10.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r8);

        throw $r9;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
