public class org.apache.mahout.classifier.ResultAnalyzer extends java.lang.Object
{
    private final org.apache.mahout.classifier.ConfusionMatrix confusionMatrix;
    private final org.apache.mahout.math.stats.OnlineSummarizer summarizer;
    private boolean hasLL;
    private int correctlyClassified;
    private int incorrectlyClassified;

    public void <init>(java.util.Collection, java.lang.String)
    {
        org.apache.mahout.classifier.ResultAnalyzer r0;
        java.util.Collection r1;
        java.lang.String r2;
        org.apache.mahout.classifier.ConfusionMatrix $r3;
        org.apache.mahout.math.stats.OnlineSummarizer $r4;

        r0 := @this: org.apache.mahout.classifier.ResultAnalyzer;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.mahout.classifier.ConfusionMatrix;

        specialinvoke $r3.<org.apache.mahout.classifier.ConfusionMatrix: void <init>(java.util.Collection,java.lang.String)>(r1, r2);

        r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix> = $r3;

        $r4 = new org.apache.mahout.math.stats.OnlineSummarizer;

        specialinvoke $r4.<org.apache.mahout.math.stats.OnlineSummarizer: void <init>()>();

        r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.math.stats.OnlineSummarizer summarizer> = $r4;

        return;
    }

    public org.apache.mahout.classifier.ConfusionMatrix getConfusionMatrix()
    {
        org.apache.mahout.classifier.ResultAnalyzer r0;
        org.apache.mahout.classifier.ConfusionMatrix $r1;

        r0 := @this: org.apache.mahout.classifier.ResultAnalyzer;

        $r1 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        return $r1;
    }

    public boolean addInstance(java.lang.String, org.apache.mahout.classifier.ClassifierResult)
    {
        org.apache.mahout.classifier.ResultAnalyzer r0;
        java.lang.String r1, $r3;
        org.apache.mahout.classifier.ClassifierResult r2;
        boolean z0;
        int $i0, $i1, $i3, $i4;
        org.apache.mahout.classifier.ConfusionMatrix $r4;
        double $d0, $d1;
        byte $b2;
        org.apache.mahout.math.stats.OnlineSummarizer $r5;

        r0 := @this: org.apache.mahout.classifier.ResultAnalyzer;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.mahout.classifier.ClassifierResult;

        $r3 = virtualinvoke r2.<org.apache.mahout.classifier.ClassifierResult: java.lang.String getLabel()>();

        z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if z0 == 0 goto label1;

        $i3 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int correctlyClassified>;

        $i4 = $i3 + 1;

        r0.<org.apache.mahout.classifier.ResultAnalyzer: int correctlyClassified> = $i4;

        goto label2;

     label1:
        $i0 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int incorrectlyClassified>;

        $i1 = $i0 + 1;

        r0.<org.apache.mahout.classifier.ResultAnalyzer: int incorrectlyClassified> = $i1;

     label2:
        $r4 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        virtualinvoke $r4.<org.apache.mahout.classifier.ConfusionMatrix: void addInstance(java.lang.String,org.apache.mahout.classifier.ClassifierResult)>(r1, r2);

        $d0 = virtualinvoke r2.<org.apache.mahout.classifier.ClassifierResult: double getLogLikelihood()>();

        $b2 = $d0 cmpl 1.7976931348623157E308;

        if $b2 == 0 goto label3;

        $r5 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.math.stats.OnlineSummarizer summarizer>;

        $d1 = virtualinvoke r2.<org.apache.mahout.classifier.ClassifierResult: double getLogLikelihood()>();

        virtualinvoke $r5.<org.apache.mahout.math.stats.OnlineSummarizer: void add(double)>($d1);

        r0.<org.apache.mahout.classifier.ResultAnalyzer: boolean hasLL> = 1;

     label3:
        return z0;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.classifier.ResultAnalyzer r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev r3;
        java.lang.StringBuilder $r4, $r11, $r12, $r14, $r17, $r18, $r20, $r21, $r25, $r28, $r29, $r31, $r32, $r36, $r48, $r51, $r55, $r58, $r63, $r64, $r66, $r70, $r76, $r78, $r83, $r85, $r88, $r92, $r96, $r97, $r103, $r104, $r106, $r109, $r110, $r112, $r118;
        java.lang.String $r9, $r13, $r15, $r16, $r19, $r23, $r24, $r26, $r27, $r30, $r33, $r37, $r38, $r46, $r47, $r50, $r53, $r54, $r57, $r60, $r61, $r65, $r67, $r68, $r71, $r72, $r74, $r75, $r77, $r81, $r82, $r84, $r89, $r90, $r93, $r94, $r98, $r99, $r100, $r101, $r105, $r107, $r111, $r113, $r116, $r117;
        java.text.DecimalFormat $r10;
        org.apache.mahout.classifier.ConfusionMatrix $r41, $r43, $r52, $r59, $r79, $r86, $r91;
        boolean $z0;
        org.apache.mahout.math.stats.OnlineSummarizer $r95, $r114, $r115;

        r0 := @this: org.apache.mahout.classifier.ResultAnalyzer;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=======================================================\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Summary\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-------------------------------------------------------\n");

        $i2 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int correctlyClassified>;

        $i1 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int incorrectlyClassified>;

        i0 = $i2 + $i1;

        $i3 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int correctlyClassified>;

        $d2 = (double) $i3;

        $d3 = 100.0 * $d2;

        $d4 = (double) i0;

        d0 = $d3 / $d4;

        $i4 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int incorrectlyClassified>;

        $d5 = (double) $i4;

        $d6 = 100.0 * $d5;

        $d7 = (double) i0;

        d1 = $d6 / $d7;

        $r10 = new java.text.DecimalFormat;

        specialinvoke $r10.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.####");

        $r9 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Correctly Classified Instances", 40);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i5 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int correctlyClassified>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        $r15 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r13, 10);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        $r19 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>(d0);

        $r16 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r19, 10);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\n");

        $r23 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Incorrectly Classified Instances", 40);

        $r20 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $i6 = r0.<org.apache.mahout.classifier.ResultAnalyzer: int incorrectlyClassified>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r24 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r26, 10);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        $r30 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>(d1);

        $r27 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r30, 10);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\n");

        $r33 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Total Classified Instances", 40);

        $r32 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r38 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r37 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r38, 10);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r41 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r41);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=======================================================\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Statistics\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-------------------------------------------------------\n");

        $r43 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        r3 = virtualinvoke $r43.<org.apache.mahout.classifier.ConfusionMatrix: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev getNormalizedStats()>();

        $r50 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Kappa", 40);

        $r51 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        $d8 = virtualinvoke $r52.<org.apache.mahout.classifier.ConfusionMatrix: double getKappa()>();

        $r46 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d8);

        $r47 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r46, 10);

        $r48 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r57 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Accuracy", 40);

        $r58 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        $d9 = virtualinvoke $r59.<org.apache.mahout.classifier.ConfusionMatrix: double getAccuracy()>();

        $r53 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d9);

        $r54 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r53, 10);

        $r55 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\n");

        $r65 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Reliability", 40);

        $r64 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $d11 = interfaceinvoke r3.<org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev: double getAverage()>();

        $d10 = $d11 * 100.00000001;

        $r61 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d10);

        $r60 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r61, 10);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\n");

        $r71 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Reliability (standard deviation)", 40);

        $r70 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $d12 = interfaceinvoke r3.<org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev: double getStandardDeviation()>();

        $r72 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d12);

        $r67 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r72, 10);

        $r66 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r68 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Weighted precision", 40);

        $r78 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r79 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        $d13 = virtualinvoke $r79.<org.apache.mahout.classifier.ConfusionMatrix: double getWeightedPrecision()>();

        $r77 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d13);

        $r75 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r77, 10);

        $r76 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r74 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Weighted recall", 40);

        $r85 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r86 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        $d14 = virtualinvoke $r86.<org.apache.mahout.classifier.ConfusionMatrix: double getWeightedRecall()>();

        $r84 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d14);

        $r82 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r84, 10);

        $r83 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r81 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Weighted F1 score", 40);

        $r92 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r91 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.classifier.ConfusionMatrix confusionMatrix>;

        $d15 = virtualinvoke $r91.<org.apache.mahout.classifier.ConfusionMatrix: double getWeightedF1score()>();

        $r90 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d15);

        $r89 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r90, 10);

        $r88 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $z0 = r0.<org.apache.mahout.classifier.ResultAnalyzer: boolean hasLL>;

        if $z0 == 0 goto label1;

        $r98 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Log-likelihood", 30);

        $r97 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mean      : ");

        $r95 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.math.stats.OnlineSummarizer summarizer>;

        $d16 = virtualinvoke $r95.<org.apache.mahout.math.stats.OnlineSummarizer: double getMean()>();

        $r94 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d16);

        $r93 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r94, 10);

        $r109 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r111 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("", 30);

        $r110 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r113 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("25%-ile   : ", 10);

        $r112 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r114 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.math.stats.OnlineSummarizer summarizer>;

        $d17 = virtualinvoke $r114.<org.apache.mahout.math.stats.OnlineSummarizer: double getQuartile(int)>(1);

        $r101 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d17);

        $r100 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r101, 10);

        $r103 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r105 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("", 30);

        $r104 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r105);

        $r107 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("75%-ile   : ", 10);

        $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r115 = r0.<org.apache.mahout.classifier.ResultAnalyzer: org.apache.mahout.math.stats.OnlineSummarizer summarizer>;

        $d18 = virtualinvoke $r115.<org.apache.mahout.math.stats.OnlineSummarizer: double getQuartile(int)>(3);

        $r116 = virtualinvoke $r10.<java.text.NumberFormat: java.lang.String format(double)>($d18);

        $r117 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r116, 10);

        $r118 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label1:
        $r99 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r99;
    }
}
