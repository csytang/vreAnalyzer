public class org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private java.util.Map newClusterMappings;
    private org.apache.mahout.math.VectorWritable outputVector;

    public void <init>()
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper r0;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        return;
    }

    public void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration r2;
        org.apache.hadoop.fs.Path $r4;
        java.lang.String $r5;
        java.util.Map $r6;
        org.apache.mahout.math.VectorWritable $r7;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r4 = new org.apache.hadoop.fs.Path;

        $r5 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("clusterOutputPath");

        specialinvoke $r4.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r5);

        $r6 = staticinvoke <org.apache.mahout.clustering.topdown.postprocessor.ClusterCountReader: java.util.Map getClusterIDs(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration,boolean)>($r4, r2, 1);

        r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper: java.util.Map newClusterMappings> = $r6;

        $r7 = new org.apache.mahout.math.VectorWritable;

        specialinvoke $r7.<org.apache.mahout.math.VectorWritable: void <init>()>();

        r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper: org.apache.mahout.math.VectorWritable outputVector> = $r7;

        return;
    }

    public void map(org.apache.hadoop.io.IntWritable, org.apache.mahout.clustering.classify.WeightedVectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper r0;
        org.apache.hadoop.io.IntWritable r1, $r6;
        org.apache.mahout.clustering.classify.WeightedVectorWritable r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4, $r11;
        org.apache.mahout.math.Vector $r5;
        java.util.Map $r7;
        int $i0, $i1;
        java.lang.Integer $r8, $r10;
        java.lang.Object $r9;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: org.apache.mahout.clustering.classify.WeightedVectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r4 = r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper: org.apache.mahout.math.VectorWritable outputVector>;

        $r5 = virtualinvoke r2.<org.apache.mahout.clustering.classify.WeightedVectorWritable: org.apache.mahout.math.Vector getVector()>();

        virtualinvoke $r4.<org.apache.mahout.math.VectorWritable: void set(org.apache.mahout.math.Vector)>($r5);

        $r6 = new org.apache.hadoop.io.IntWritable;

        $r7 = r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper: java.util.Map newClusterMappings>;

        $i0 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r10 = (java.lang.Integer) $r9;

        $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        specialinvoke $r6.<org.apache.hadoop.io.IntWritable: void <init>(int)>($i1);

        $r11 = r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper: org.apache.mahout.math.VectorWritable outputVector>;

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r6, $r11);

        return;
    }

    public volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.clustering.classify.WeightedVectorWritable $r4;
        org.apache.hadoop.io.IntWritable $r5;

        r0 := @this: org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.IntWritable) r1;

        $r4 = (org.apache.mahout.clustering.classify.WeightedVectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.clustering.topdown.postprocessor.ClusterOutputPostProcessorMapper: void map(org.apache.hadoop.io.IntWritable,org.apache.mahout.clustering.classify.WeightedVectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
