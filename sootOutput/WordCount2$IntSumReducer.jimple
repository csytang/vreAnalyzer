public class WordCount2$IntSumReducer extends org.apache.hadoop.mapreduce.Reducer
{
    private org.apache.hadoop.io.IntWritable result;

    public void <init>()
    {
        WordCount2$IntSumReducer r0;
        org.apache.hadoop.io.IntWritable $r1;

        r0 := @this: WordCount2$IntSumReducer;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>();

        $r1 = new org.apache.hadoop.io.IntWritable;

        specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>();

        r0.<WordCount2$IntSumReducer: org.apache.hadoop.io.IntWritable result> = $r1;

        return;
    }

    public void reduce(org.apache.hadoop.io.Text, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        WordCount2$IntSumReducer r0;
        org.apache.hadoop.io.Text r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        org.apache.hadoop.io.IntWritable r4, $r7, $r8;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r6;
        int $i0, i1;

        r0 := @this: WordCount2$IntSumReducer;

        r1 := @parameter0: org.apache.hadoop.io.Text;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        i1 = 0;

        r5 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.hadoop.io.IntWritable) $r6;

        $i0 = virtualinvoke r4.<org.apache.hadoop.io.IntWritable: int get()>();

        i1 = i1 + $i0;

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<WordCount2$IntSumReducer: org.apache.hadoop.io.IntWritable result>;

        virtualinvoke $r7.<org.apache.hadoop.io.IntWritable: void set(int)>(i1);

        $r8 = r0.<WordCount2$IntSumReducer: org.apache.hadoop.io.IntWritable result>;

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r8);

        return;
    }

    public volatile void reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        WordCount2$IntSumReducer r0;
        java.lang.Object r1;
        java.lang.Iterable r2, $r5;
        org.apache.hadoop.mapreduce.Reducer$Context r3, $r4;
        org.apache.hadoop.io.Text $r6;

        r0 := @this: WordCount2$IntSumReducer;

        ##r1 := @parameter0: java.lang.Object;#v1#

        ##r2 := @parameter1: java.lang.Iterable;#v2#

        ##r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;#v3#

        ##$r6 = (org.apache.hadoop.io.Text) r1;#v1#

        ##$r5 = (java.lang.Iterable) r2;#v2#

        ##$r4 = (org.apache.hadoop.mapreduce.Reducer$Context) r3;#v3#

        ##virtualinvoke r0.<WordCount2$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r6, $r5, $r4);#v1,v2,v3#

        return;
    }
}
