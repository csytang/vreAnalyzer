public static class WordCount2$IntSumReducer extends org.apache.hadoop.mapreduce.Reducer
{
    private org.apache.hadoop.io.IntWritable result;

    public void reduce(org.apache.hadoop.io.Text, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        WordCount2$IntSumReducer this;
        org.apache.hadoop.io.Text key;
        java.lang.Iterable values;
        org.apache.hadoop.mapreduce.Reducer$Context context;
        int sum, temp$4, temp$5;
        java.util.Iterator temp$0;
        org.apache.hadoop.io.IntWritable val, temp$6, temp$7;
        boolean temp$1;
        java.lang.Object temp$2;

        this := @this: WordCount2$IntSumReducer;

        key := @parameter0: org.apache.hadoop.io.Text;

        values := @parameter1: java.lang.Iterable;

        context := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        sum = 0;

        temp$0 = interfaceinvoke values.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        temp$1 = interfaceinvoke temp$0.<java.util.Iterator: boolean hasNext()>();

        if temp$1 == 0 goto label2;

        temp$2 = interfaceinvoke temp$0.<java.util.Iterator: java.lang.Object next()>();

        val = (org.apache.hadoop.io.IntWritable) temp$2;

        temp$4 = virtualinvoke val.<org.apache.hadoop.io.IntWritable: int get()>();

        temp$5 = sum + temp$4;

        sum = temp$5;

        goto label1;

     label2:
        temp$6 = this.<WordCount2$IntSumReducer: org.apache.hadoop.io.IntWritable result>;

        virtualinvoke temp$6.<org.apache.hadoop.io.IntWritable: void set(int)>(sum);

        temp$7 = this.<WordCount2$IntSumReducer: org.apache.hadoop.io.IntWritable result>;

        interfaceinvoke context.<org.apache.hadoop.mapreduce.TaskInputOutputContext: void write(java.lang.Object,java.lang.Object)>(key, temp$7);

        return;
    }

    public void <init>()
    {
        WordCount2$IntSumReducer this;
        org.apache.hadoop.io.IntWritable temp$0;

        this := @this: WordCount2$IntSumReducer;

        specialinvoke this.<org.apache.hadoop.mapreduce.Reducer: void <init>()>();

        temp$0 = new org.apache.hadoop.io.IntWritable;

        specialinvoke temp$0.<org.apache.hadoop.io.IntWritable: void <init>()>();

        this.<WordCount2$IntSumReducer: org.apache.hadoop.io.IntWritable result> = temp$0;

        return;
    }

    public volatile void reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        WordCount2$IntSumReducer this;
        java.lang.Object p0;
        java.lang.Iterable p1;
        org.apache.hadoop.mapreduce.Reducer$Context p2;
        org.apache.hadoop.io.Text temp$0;

        this := @this: WordCount2$IntSumReducer;

        p0 := @parameter0: java.lang.Object;

        p1 := @parameter1: java.lang.Iterable;

        p2 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        temp$0 = (org.apache.hadoop.io.Text) p0;

        virtualinvoke this.<WordCount2$IntSumReducer: void reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>(temp$0, p1, p2);

        return;
    }
}
