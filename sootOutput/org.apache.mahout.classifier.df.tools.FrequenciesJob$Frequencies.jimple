class org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies extends java.lang.Object implements org.apache.hadoop.io.Writable, java.lang.Comparable, java.lang.Cloneable
{
    private long firstId;
    private int[] counts;

    void <init>()
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(long, int[])
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0;
        long l0;
        int[] r1, $r2;
        int $i1;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        l0 := @parameter0: long;

        r1 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId> = l0;

        $i1 = lengthof r1;

        $r2 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(r1, $i1);

        r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: int[] counts> = $r2;

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0;
        java.io.DataInput r1;
        long $l0;
        int[] $r2;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        r1 := @parameter0: java.io.DataInput;

        $l0 = interfaceinvoke r1.<java.io.DataInput: long readLong()>();

        r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId> = $l0;

        $r2 = staticinvoke <org.apache.mahout.classifier.df.DFUtils: int[] readIntArray(java.io.DataInput)>(r1);

        r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: int[] counts> = $r2;

        return;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0;
        java.io.DataOutput r1;
        long $l0;
        int[] $r2;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        r1 := @parameter0: java.io.DataOutput;

        $l0 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        interfaceinvoke r1.<java.io.DataOutput: void writeLong(long)>($l0);

        $r2 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: int[] counts>;

        staticinvoke <org.apache.mahout.classifier.df.DFUtils: void writeArray(java.io.DataOutput,int[])>(r1, $r2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1;
        byte $b2;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        if $z0 == 0 goto label1;

        $l1 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $r2 = (org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies) r1;

        $l0 = $r2.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0;
        long $l0;
        int $i1;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        $l0 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $i1 = (int) $l0;

        return $i1;
    }

    protected org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies clone()
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0, $r1;
        int[] $r2;
        long $l0;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        $r1 = new org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        $l0 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $r2 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: int[] counts>;

        specialinvoke $r1.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: void <init>(long,int[])>($l0, $r2);

        return $r1;
    }

    public int compareTo(org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies)
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0, r1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        r1 := @parameter0: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        $l1 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $l0 = r1.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $b2 = $l1 cmp $l0;

        if $b2 >= 0 goto label1;

        return -1;

     label1:
        $l4 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $l3 = r1.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: long firstId>;

        $b5 = $l4 cmp $l3;

        if $b5 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static int[][] extractCounts(org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies[])
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies[] r0;
        int[][] r1;
        int $i0, $i1, i2;
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies $r2;
        int[] $r3;

        r0 := @parameter0: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies[];

        $i0 = lengthof r0;

        r1 = newarray (int[])[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        $r3 = $r2.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: int[] counts>;

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    protected volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0, $r1;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        $r1 = virtualinvoke r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies clone()>();

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies) r1;

        $i0 = virtualinvoke r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies: int compareTo(org.apache.mahout.classifier.df.tools.FrequenciesJob$Frequencies)>($r2);

        return $i0;
    }
}
