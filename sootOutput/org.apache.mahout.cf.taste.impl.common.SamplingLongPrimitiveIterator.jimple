public final class org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator extends org.apache.mahout.cf.taste.impl.common.AbstractLongPrimitiveIterator
{
    private final org.apache.commons.math3.distribution.PascalDistribution geometricDistribution;
    private final org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate;
    private long next;
    private boolean hasNext;

    public void <init>(org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator, double)
    {
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r0;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator r1;
        double d0;
        org.apache.mahout.common.RandomWrapper $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;

        d0 := @parameter1: double;

        $r2 = staticinvoke <org.apache.mahout.common.RandomUtils: org.apache.mahout.common.RandomWrapper getRandom()>();

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: void <init>(org.apache.mahout.common.RandomWrapper,org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator,double)>($r2, r1, d0);

        return;
    }

    public void <init>(org.apache.mahout.common.RandomWrapper, org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator, double)
    {
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r0;
        org.apache.mahout.common.RandomWrapper r1;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator r2;
        double d0;
        byte $b0, $b1;
        boolean $z0;
        org.apache.commons.math3.distribution.PascalDistribution $r4;
        org.apache.commons.math3.random.RandomGenerator $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        r1 := @parameter0: org.apache.mahout.common.RandomWrapper;

        r2 := @parameter1: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;

        d0 := @parameter2: double;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.AbstractLongPrimitiveIterator: void <init>()>();

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $b1 = d0 cmpg 1.0;

        if $b1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "Must be: 0.0 < samplingRate <= 1.0");

        $r4 = new org.apache.commons.math3.distribution.PascalDistribution;

        $r5 = virtualinvoke r1.<org.apache.mahout.common.RandomWrapper: org.apache.commons.math3.random.RandomGenerator getRandomGenerator()>();

        specialinvoke $r4.<org.apache.commons.math3.distribution.PascalDistribution: void <init>(org.apache.commons.math3.random.RandomGenerator,int,double)>($r5, 1, d0);

        r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.commons.math3.distribution.PascalDistribution geometricDistribution> = $r4;

        r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate> = r2;

        r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: boolean hasNext> = 1;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: void doNext()>();

        return;
    }

    public boolean hasNext()
    {
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r0;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: boolean hasNext>;

        return $z0;
    }

    public long nextLong()
    {
        java.util.NoSuchElementException $r0;
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r1;
        long l0;
        boolean $z0;

        r1 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        $z0 = r1.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: boolean hasNext>;

        if $z0 == 0 goto label1;

        l0 = r1.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: long next>;

        specialinvoke r1.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: void doNext()>();

        return l0;

     label1:
        $r0 = new java.util.NoSuchElementException;

        specialinvoke $r0.<java.util.NoSuchElementException: void <init>()>();

        throw $r0;
    }

    public long peek()
    {
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r0;
        boolean $z0;
        java.util.NoSuchElementException $r1;
        long $l0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: boolean hasNext>;

        if $z0 == 0 goto label1;

        $l0 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: long next>;

        return $l0;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;
    }

    private void doNext()
    {
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r0;
        int i0;
        org.apache.commons.math3.distribution.PascalDistribution $r1;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r2, $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Long $r6;
        long $l1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.commons.math3.distribution.PascalDistribution geometricDistribution>;

        i0 = virtualinvoke $r1.<org.apache.commons.math3.distribution.PascalDistribution: int sample()>();

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate>;

        interfaceinvoke $r2.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: void skip(int)>(i0);

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate>;

        $z0 = interfaceinvoke $r3.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate>;

        $r5 = interfaceinvoke $r4.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: java.lang.Object next()>();

        $r6 = (java.lang.Long) $r5;

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: long next> = $l1;

        goto label2;

     label1:
        r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: boolean hasNext> = 0;

     label2:
        return;
    }

    public void remove()
    {
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void skip(int)
    {
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r0;
        int i0, $i2, i3, i4;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r1, $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Long $r5;
        long $l1;
        org.apache.commons.math3.distribution.PascalDistribution $r6;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        i0 := @parameter0: int;

        i3 = 0;

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.commons.math3.distribution.PascalDistribution geometricDistribution>;

        $i2 = virtualinvoke $r6.<org.apache.commons.math3.distribution.PascalDistribution: int sample()>();

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label1;

     label2:
        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate>;

        interfaceinvoke $r1.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: void skip(int)>(i3);

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate>;

        $z0 = interfaceinvoke $r2.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator delegate>;

        $r4 = interfaceinvoke $r3.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: java.lang.Object next()>();

        $r5 = (java.lang.Long) $r4;

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: long next> = $l1;

        goto label4;

     label3:
        r0.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: boolean hasNext> = 0;

     label4:
        return;
    }

    public static org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator maybeWrapIterator(org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator, double)
    {
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator r0, r3;
        double d0;
        byte $b0;
        java.lang.Object $r1;
        org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator r2;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;

        d0 := @parameter1: double;

        $b0 = d0 cmpl 1.0;

        if $b0 < 0 goto label1;

        $r1 = r0;

        goto label2;

     label1:
        r2 = new org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator;

        $r1 = r2;

        specialinvoke r2.<org.apache.mahout.cf.taste.impl.common.SamplingLongPrimitiveIterator: void <init>(org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator,double)>(r0, d0);

     label2:
        r3 = (org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator) $r1;

        return r3;
    }
}
