public class org.apache.mahout.classifier.naivebayes.training.WeightsMapper extends org.apache.hadoop.mapreduce.Mapper
{
    static final java.lang.String NUM_LABELS;
    private org.apache.mahout.math.Vector weightsPerFeature;
    private org.apache.mahout.math.Vector weightsPerLabel;

    public void <init>()
    {
        org.apache.mahout.classifier.naivebayes.training.WeightsMapper r0;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.WeightsMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.naivebayes.training.WeightsMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        int i0;
        org.apache.hadoop.conf.Configuration $r2;
        java.lang.String $r3, $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        org.apache.mahout.math.DenseVector $r10;
        boolean $z0;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.WeightsMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void setup(org.apache.hadoop.mapreduce.Mapper$Context)>(r1);

        $r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r3 = <org.apache.mahout.classifier.naivebayes.training.WeightsMapper: java.lang.String NUM_LABELS>;

        $r4 = virtualinvoke $r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r3);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong numLabels: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Must be > 0!");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r9);

        $r10 = new org.apache.mahout.math.DenseVector;

        specialinvoke $r10.<org.apache.mahout.math.DenseVector: void <init>(int)>(i0);

        r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerLabel> = $r10;

        return;
    }

    protected void map(org.apache.hadoop.io.IntWritable, org.apache.mahout.math.VectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.naivebayes.training.WeightsMapper r0;
        org.apache.hadoop.io.IntWritable r1;
        org.apache.mahout.math.VectorWritable r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.Vector r4, $r5, $r7, $r9, $r10;
        int i0, $i1, $i2;
        org.apache.mahout.math.function.DoubleDoubleFunction $r6;
        double $d0, $d1, $d2;
        org.apache.mahout.math.RandomAccessSparseVector $r11;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.WeightsMapper;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: org.apache.mahout.math.VectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        r4 = virtualinvoke r2.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $r5 = r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerFeature>;

        if $r5 != null goto label1;

        $r11 = new org.apache.mahout.math.RandomAccessSparseVector;

        $i2 = interfaceinvoke r4.<org.apache.mahout.math.Vector: int size()>();

        $i1 = interfaceinvoke r4.<org.apache.mahout.math.Vector: int getNumNondefaultElements()>();

        specialinvoke $r11.<org.apache.mahout.math.RandomAccessSparseVector: void <init>(int,int)>($i2, $i1);

        r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerFeature> = $r11;

     label1:
        i0 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        $r7 = r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerFeature>;

        $r6 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction PLUS>;

        interfaceinvoke $r7.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)>(r4, $r6);

        $r10 = r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerLabel>;

        $r9 = r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerLabel>;

        $d0 = interfaceinvoke $r9.<org.apache.mahout.math.Vector: double get(int)>(i0);

        $d1 = interfaceinvoke r4.<org.apache.mahout.math.Vector: double zSum()>();

        $d2 = $d0 + $d1;

        interfaceinvoke $r10.<org.apache.mahout.math.Vector: void set(int,double)>(i0, $d2);

        return;
    }

    protected void cleanup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.naivebayes.training.WeightsMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.mahout.math.Vector $r2, $r5, $r8;
        org.apache.hadoop.io.Text $r3, $r6;
        org.apache.mahout.math.VectorWritable $r4, $r7;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.WeightsMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        $r2 = r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerFeature>;

        if $r2 == null goto label1;

        $r3 = new org.apache.hadoop.io.Text;

        specialinvoke $r3.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>("__SPF");

        $r4 = new org.apache.mahout.math.VectorWritable;

        $r5 = r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerFeature>;

        specialinvoke $r4.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>($r5);

        virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r3, $r4);

        $r6 = new org.apache.hadoop.io.Text;

        specialinvoke $r6.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>("__SPL");

        $r7 = new org.apache.mahout.math.VectorWritable;

        $r8 = r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: org.apache.mahout.math.Vector weightsPerLabel>;

        specialinvoke $r7.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>($r8);

        virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r6, $r7);

     label1:
        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void cleanup(org.apache.hadoop.mapreduce.Mapper$Context)>(r1);

        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.naivebayes.training.WeightsMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4;
        org.apache.hadoop.io.IntWritable $r5;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.WeightsMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.IntWritable) r1;

        $r4 = (org.apache.mahout.math.VectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.WeightsMapper: void map(org.apache.hadoop.io.IntWritable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.Class $r1;
        java.lang.String $r2, $r5;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "org/apache/mahout/classifier/naivebayes/training/WeightsMapper";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".numLabels");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.mahout.classifier.naivebayes.training.WeightsMapper: java.lang.String NUM_LABELS> = $r5;

        return;
    }
}
