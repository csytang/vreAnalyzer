public class org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable extends java.lang.Object implements org.apache.hadoop.io.Writable
{
    private org.apache.mahout.math.Centroid centroid;

    public void <init>()
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid> = null;

        return;
    }

    public void <init>(org.apache.mahout.math.Centroid)
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0;
        org.apache.mahout.math.Centroid r1;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        r1 := @parameter0: org.apache.mahout.math.Centroid;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid> = null;

        r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid> = r1;

        return;
    }

    public org.apache.mahout.math.Centroid getCentroid()
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0;
        org.apache.mahout.math.Centroid $r1;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        $r1 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        return $r1;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0;
        java.io.DataOutput r1;
        org.apache.mahout.math.Centroid $r2, $r3, $r4;
        int $i0;
        double $d0;
        org.apache.mahout.math.Vector $r5;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $i0 = virtualinvoke $r2.<org.apache.mahout.math.Centroid: int getIndex()>();

        interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i0);

        $r3 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $d0 = virtualinvoke $r3.<org.apache.mahout.math.Centroid: double getWeight()>();

        interfaceinvoke r1.<java.io.DataOutput: void writeDouble(double)>($d0);

        $r4 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $r5 = virtualinvoke $r4.<org.apache.mahout.math.Centroid: org.apache.mahout.math.Vector getVector()>();

        staticinvoke <org.apache.mahout.math.VectorWritable: void writeVector(java.io.DataOutput,org.apache.mahout.math.Vector)>(r1, $r5);

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0;
        java.io.DataInput r1;
        org.apache.mahout.math.Centroid $r2, $r3, $r4, $r5, $r8;
        int $i0;
        double $d0;
        org.apache.mahout.math.Vector $r6;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        r1 := @parameter0: java.io.DataInput;

        $r2 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        if $r2 != null goto label1;

        $r8 = staticinvoke <org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid read(java.io.DataInput)>(r1);

        r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid> = $r8;

        return;

     label1:
        $r3 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $i0 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();

        virtualinvoke $r3.<org.apache.mahout.math.Centroid: void setIndex(int)>($i0);

        $r4 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $d0 = interfaceinvoke r1.<java.io.DataInput: double readDouble()>();

        virtualinvoke $r4.<org.apache.mahout.math.Centroid: void setWeight(double)>($d0);

        $r5 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $r6 = staticinvoke <org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector readVector(java.io.DataInput)>(r1);

        virtualinvoke $r5.<org.apache.mahout.math.Centroid: org.apache.mahout.math.Vector assign(org.apache.mahout.math.Vector)>($r6);

        return;
    }

    public static org.apache.mahout.math.Centroid read(java.io.DataInput) throws java.io.IOException
    {
        java.io.DataInput r0;
        int i0;
        double d0;
        org.apache.mahout.math.Vector r1;
        org.apache.mahout.math.Centroid $r2;

        r0 := @parameter0: java.io.DataInput;

        i0 = interfaceinvoke r0.<java.io.DataInput: int readInt()>();

        d0 = interfaceinvoke r0.<java.io.DataInput: double readDouble()>();

        r1 = staticinvoke <org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector readVector(java.io.DataInput)>(r0);

        $r2 = new org.apache.mahout.math.Centroid;

        specialinvoke $r2.<org.apache.mahout.math.Centroid: void <init>(int,org.apache.mahout.math.Vector,double)>(i0, r1, d0);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        org.apache.mahout.math.Centroid $r3, $r4;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable) r1;

        $r4 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $r3 = r2.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $z1 = virtualinvoke $r4.<org.apache.mahout.math.Centroid: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0;
        org.apache.mahout.math.Centroid $r1;
        int $i0;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        $r1 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $i0 = virtualinvoke $r1.<org.apache.mahout.math.Centroid: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r0;
        org.apache.mahout.math.Centroid $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        $r1 = r0.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: org.apache.mahout.math.Centroid centroid>;

        $r2 = virtualinvoke $r1.<org.apache.mahout.math.Centroid: java.lang.String toString()>();

        return $r2;
    }
}
