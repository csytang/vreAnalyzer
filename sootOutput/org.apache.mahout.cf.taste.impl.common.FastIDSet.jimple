public final class org.apache.mahout.cf.taste.impl.common.FastIDSet extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable, java.lang.Iterable
{
    private static final float DEFAULT_LOAD_FACTOR;
    private static final long REMOVED;
    private static final long NULL;
    private long[] keys;
    private float loadFactor;
    private int numEntries;
    private int numSlotsUsed;

    public void <init>()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void <init>(int)>(2);

        return;
    }

    public void <init>(long[])
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] r1;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: long[];

        $i0 = lengthof r1;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void <init>(int)>($i0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean addAll(long[])>(r1);

        return;
    }

    public void <init>(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        int i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void <init>(int,float)>(i0, 1.5F);

        return;
    }

    public void <init>(int, float)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        int i0, i1, i2, $i4;
        float f0, $f1, $f2, $f3;
        byte $b3;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        long[] $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "size must be at least 0");

        $b3 = f0 cmpl 1.0F;

        if $b3 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "loadFactor must be at least 1.0");

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: float loadFactor> = f0;

        $f1 = 2.14748301E9F / f0;

        i1 = (int) $f1;

        if i0 >= i1 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r1[0] = $r2;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z2, "size must be less than %d", $r1);

        $f2 = (float) i0;

        $f3 = f0 * $f2;

        $i4 = (int) $f3;

        i2 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i4);

        $r4 = newarray (long)[i2];

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys> = $r4;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r3, -9223372036854775808L);

        return;
    }

    private int find(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long l0, l11;
        int i1, i2, i3, $i4, $i5, $i6, $i9, i10, $i12;
        long[] r1;
        byte $b7, $b8;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        l0 := @parameter0: long;

        $i4 = (int) l0;

        i1 = $i4 & 2147483647;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i2 = lengthof r1;

        $i5 = i2 - 2;

        $i6 = i1 % $i5;

        i3 = 1 + $i6;

        i10 = i1 % i2;

        l11 = r1[i10];

     label1:
        $b7 = l11 cmp -9223372036854775808L;

        if $b7 == 0 goto label4;

        $b8 = l0 cmp l11;

        if $b8 == 0 goto label4;

        $i9 = i10;

        if i10 >= i3 goto label2;

        $i12 = i3 - i2;

        goto label3;

     label2:
        $i12 = i3;

     label3:
        i10 = $i9 - $i12;

        l11 = r1[i10];

        goto label1;

     label4:
        return i10;
    }

    private int findForAdd(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long l0, l17;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i12, $i15, i16, $i18, $i20, $i21;
        long[] r1;
        byte $b8, $b9, $b10, $b11, $b13, $b14, $b19;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        l0 := @parameter0: long;

        $i5 = (int) l0;

        i1 = $i5 & 2147483647;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i2 = lengthof r1;

        $i6 = i2 - 2;

        $i7 = i1 % $i6;

        i3 = 1 + $i7;

        i16 = i1 % i2;

        l17 = r1[i16];

     label01:
        $b8 = l17 cmp -9223372036854775808L;

        if $b8 == 0 goto label04;

        $b13 = l17 cmp 9223372036854775807L;

        if $b13 == 0 goto label04;

        $b14 = l0 cmp l17;

        if $b14 == 0 goto label04;

        $i15 = i16;

        if i16 >= i3 goto label02;

        $i18 = i3 - i2;

        goto label03;

     label02:
        $i18 = i3;

     label03:
        i16 = $i15 - $i18;

        l17 = r1[i16];

        goto label01;

     label04:
        $b19 = l17 cmp 9223372036854775807L;

        if $b19 == 0 goto label05;

        return i16;

     label05:
        i4 = i16;

     label06:
        $b10 = l17 cmp -9223372036854775808L;

        if $b10 == 0 goto label09;

        $b11 = l0 cmp l17;

        if $b11 == 0 goto label09;

        $i12 = i16;

        if i16 >= i3 goto label07;

        $i20 = i3 - i2;

        goto label08;

     label07:
        $i20 = i3;

     label08:
        i16 = $i12 - $i20;

        l17 = r1[i16];

        goto label06;

     label09:
        $b9 = l0 cmp l17;

        if $b9 != 0 goto label10;

        $i21 = i16;

        goto label11;

     label10:
        $i21 = i4;

     label11:
        return $i21;
    }

    public int size()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean contains(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long l0, $l4;
        byte $b1, $b2, $b5;
        long[] $r1;
        int $i3;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        l0 := @parameter0: long;

        $b1 = l0 cmp -9223372036854775808L;

        if $b1 == 0 goto label1;

        $b2 = l0 cmp 9223372036854775807L;

        if $b2 == 0 goto label1;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $i3 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int find(long)>(l0);

        $l4 = $r1[$i3];

        $b5 = $l4 cmp -9223372036854775808L;

        if $b5 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean add(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long l0, l2;
        int i1, $i4, $i6, $i7, $i8, $i9, $i10, $i13, $i14;
        byte $b3, $b5, $b11, $b12, $b15, $b16;
        long[] $r1, $r2, $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        l0 := @parameter0: long;

        $b3 = l0 cmp -9223372036854775808L;

        if $b3 == 0 goto label1;

        $b12 = l0 cmp 9223372036854775807L;

        if $b12 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $i13 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numSlotsUsed>;

        $f4 = (float) $i13;

        $f5 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: float loadFactor>;

        $f6 = $f4 * $f5;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $i14 = lengthof $r2;

        $f7 = (float) $i14;

        $b15 = $f6 cmpl $f7;

        if $b15 < 0 goto label4;

        $i9 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        $f0 = (float) $i9;

        $f1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: float loadFactor>;

        $f3 = $f0 * $f1;

        $i10 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numSlotsUsed>;

        $f2 = (float) $i10;

        $b11 = $f3 cmpl $f2;

        if $b11 < 0 goto label3;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void growAndRehash()>();

        goto label4;

     label3:
        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void rehash()>();

     label4:
        i1 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int findForAdd(long)>(l0);

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        l2 = $r3[i1];

        $b16 = l2 cmp l0;

        if $b16 == 0 goto label6;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $r1[i1] = l0;

        $i4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        $i6 = $i4 + 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries> = $i6;

        $b5 = l2 cmp -9223372036854775808L;

        if $b5 != 0 goto label5;

        $i8 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numSlotsUsed>;

        $i7 = $i8 + 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numSlotsUsed> = $i7;

     label5:
        return 1;

     label6:
        return 0;
    }

    public org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator iterator()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        org.apache.mahout.cf.taste.impl.common.FastIDSet$KeyIterator $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $r1 = new org.apache.mahout.cf.taste.impl.common.FastIDSet$KeyIterator;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastIDSet$KeyIterator: void <init>(org.apache.mahout.cf.taste.impl.common.FastIDSet,org.apache.mahout.cf.taste.impl.common.FastIDSet$1)>(r0, null);

        return $r1;
    }

    public long[] toArray()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] r1, $r2, $r3, $r4;
        int $i0, $i1, $i6, i8, i9;
        long $l2, $l4, $l7;
        byte $b3, $b5;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        r1 = newarray (long)[$i0];

        i8 = 0;

        i9 = 0;

     label1:
        $i1 = lengthof r1;

        if i8 >= $i1 goto label5;

     label2:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $l2 = $r2[i9];

        $b3 = $l2 cmp -9223372036854775808L;

        if $b3 == 0 goto label3;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $l4 = $r3[i9];

        $b5 = $l4 cmp 9223372036854775807L;

        if $b5 != 0 goto label4;

     label3:
        i9 = i9 + 1;

        goto label2;

     label4:
        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $i6 = i9;

        i9 = i9 + 1;

        $l7 = $r4[$i6];

        r1[i8] = $l7;

        i8 = i8 + 1;

        goto label1;

     label5:
        return r1;
    }

    public boolean remove(long)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long l0, $l4;
        int i1, $i6, $i7;
        byte $b2, $b3, $b5;
        long[] $r1, $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        l0 := @parameter0: long;

        $b2 = l0 cmp -9223372036854775808L;

        if $b2 == 0 goto label1;

        $b3 = l0 cmp 9223372036854775807L;

        if $b3 != 0 goto label2;

     label1:
        return 0;

     label2:
        i1 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int find(long)>(l0);

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $l4 = $r1[i1];

        $b5 = $l4 cmp -9223372036854775808L;

        if $b5 != 0 goto label3;

        return 0;

     label3:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $r2[i1] = 9223372036854775807L;

        $i6 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        $i7 = $i6 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries> = $i7;

        return 1;
    }

    public boolean addAll(long[])
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] r1;
        int i0, i2;
        long l1;
        boolean $z0, z1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: long[];

        z1 = 0;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        l1 = r1[i2];

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean add(long)>(l1);

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return z1;
    }

    public boolean addAll(org.apache.mahout.cf.taste.impl.common.FastIDSet)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0, r1;
        long[] r2;
        int i0, i4;
        long l1;
        byte $b2, $b3;
        boolean $z0, z1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        z1 = 0;

        r2 = r1.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        l1 = r2[i4];

        $b2 = l1 cmp -9223372036854775808L;

        if $b2 == 0 goto label2;

        $b3 = l1 cmp 9223372036854775807L;

        if $b3 == 0 goto label2;

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean add(long)>(l1);

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return z1;
    }

    public boolean removeAll(long[])
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] r1;
        int i0, i2;
        long l1;
        boolean $z0, z1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: long[];

        z1 = 0;

        i0 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        l1 = r1[i2];

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean remove(long)>(l1);

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return z1;
    }

    public boolean removeAll(org.apache.mahout.cf.taste.impl.common.FastIDSet)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0, r1;
        long[] r2;
        int i0, i4;
        long l1;
        byte $b2, $b3;
        boolean $z0, z1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        z1 = 0;

        r2 = r1.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i0 = lengthof r2;

        i4 = 0;

     label1:
        if i4 >= i0 goto label3;

        l1 = r2[i4];

        $b2 = l1 cmp -9223372036854775808L;

        if $b2 == 0 goto label2;

        $b3 = l1 cmp 9223372036854775807L;

        if $b3 == 0 goto label2;

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean remove(long)>(l1);

        if $z0 == 0 goto label2;

        z1 = 1;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return z1;
    }

    public boolean retainAll(org.apache.mahout.cf.taste.impl.common.FastIDSet)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0, r1;
        long l0;
        long[] $r2, $r3, $r4;
        int $i1, $i4, $i5, i6;
        byte $b2, $b3;
        boolean $z0, z1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        z1 = 0;

        i6 = 0;

     label1:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $i1 = lengthof $r2;

        if i6 >= $i1 goto label3;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        l0 = $r3[i6];

        $b2 = l0 cmp -9223372036854775808L;

        if $b2 == 0 goto label2;

        $b3 = l0 cmp 9223372036854775807L;

        if $b3 == 0 goto label2;

        $z0 = virtualinvoke r1.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean contains(long)>(l0);

        if $z0 != 0 goto label2;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $r4[i6] = 9223372036854775807L;

        $i4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        $i5 = $i4 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries> = $i5;

        z1 = 1;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return z1;
    }

    public void clear()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries> = 0;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numSlotsUsed> = 0;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r1, -9223372036854775808L);

        return;
    }

    private void growAndRehash()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] $r1, $r2;
        int $i0, $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b1;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $i0 = lengthof $r1;

        $f1 = (float) $i0;

        $f0 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: float loadFactor>;

        $f2 = $f1 * $f0;

        $b1 = $f2 cmpl 2.14748301E9F;

        if $b1 < 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t grow any more");

        throw $r3;

     label1:
        $f4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: float loadFactor>;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $i2 = lengthof $r2;

        $f3 = (float) $i2;

        $f5 = $f4 * $f3;

        $i3 = (int) $f5;

        $i4 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i3);

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void rehash(int)>($i4);

        return;
    }

    public void rehash()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $f1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: float loadFactor>;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        $f0 = (float) $i0;

        $f2 = $f1 * $f0;

        $i1 = (int) $f2;

        $i2 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i1);

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void rehash(int)>($i2);

        return;
    }

    private void rehash(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        int i0, i1, i5;
        long[] r1, $r3, $r4;
        long l2;
        byte $b3, $b4;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries> = 0;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numSlotsUsed> = 0;

        $r3 = newarray (long)[i0];

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys> = $r3;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        staticinvoke <java.util.Arrays: void fill(long[],long)>($r4, -9223372036854775808L);

        i1 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i1 goto label3;

        l2 = r1[i5];

        $b3 = l2 cmp -9223372036854775808L;

        if $b3 == 0 goto label2;

        $b4 = l2 cmp 9223372036854775807L;

        if $b4 == 0 goto label2;

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean add(long)>(l2);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    public int intersectionSize(org.apache.mahout.cf.taste.impl.common.FastIDSet)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0, r1;
        long[] r2, $r3;
        int i0, $i4, i7, i8;
        long l1, $l5;
        byte $b2, $b3, $b6;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        i7 = 0;

        r2 = r1.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i0 = lengthof r2;

        i8 = 0;

     label1:
        if i8 >= i0 goto label3;

        l1 = r2[i8];

        $b2 = l1 cmp -9223372036854775808L;

        if $b2 == 0 goto label2;

        $b3 = l1 cmp 9223372036854775807L;

        if $b3 == 0 goto label2;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $i4 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int find(long)>(l1);

        $l5 = $r3[$i4];

        $b6 = $l5 cmp -9223372036854775808L;

        if $b6 == 0 goto label2;

        i7 = i7 + 1;

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        return i7;
    }

    public org.apache.mahout.cf.taste.impl.common.FastIDSet clone()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0, r1;
        java.lang.Object $r3, $r5;
        long[] $r4, $r6;
        java.lang.CloneNotSupportedException $r7;
        java.lang.AssertionError $r8;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.mahout.cf.taste.impl.common.FastIDSet) $r3;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label4:
        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (long[]) $r5;

        r1.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys> = $r6;

        return r1;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public int hashCode()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] r1;
        int i0, $i5, $i6, $i7, $i8, i9, i10;
        long l1, $l4;
        byte $b2, $b3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        i9 = 0;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i0 = lengthof r1;

        i10 = 0;

     label1:
        if i10 >= i0 goto label3;

        l1 = r1[i10];

        $b2 = l1 cmp -9223372036854775808L;

        if $b2 == 0 goto label2;

        $b3 = l1 cmp 9223372036854775807L;

        if $b3 == 0 goto label2;

        $i8 = 31 * i9;

        $l4 = l1 >> 32;

        $i6 = (int) $l4;

        $i5 = (int) l1;

        $i7 = $i6 ^ $i5;

        i9 = $i8 + $i7;

     label2:
        i10 = i10 + 1;

        goto label1;

     label3:
        return i9;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0, r2;
        java.lang.Object r1;
        long[] r3, $r4, $r5, $r6;
        int i0, i1, i2, i13;
        long l3, l14, l15, l16;
        boolean $z0;
        byte $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.cf.taste.impl.common.FastIDSet;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (org.apache.mahout.cf.taste.impl.common.FastIDSet) r1;

        r3 = r2.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i0 = lengthof $r4;

        i1 = lengthof r3;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i13 = 0;

     label02:
        if i13 >= i2 goto label06;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        l14 = $r6[i13];

        l3 = r3[i13];

        $b8 = l14 cmp -9223372036854775808L;

        if $b8 == 0 goto label03;

        $b12 = l14 cmp 9223372036854775807L;

        if $b12 != 0 goto label04;

     label03:
        $b9 = l3 cmp -9223372036854775808L;

        if $b9 == 0 goto label05;

        $b10 = l3 cmp 9223372036854775807L;

        if $b10 == 0 goto label05;

        return 0;

     label04:
        $b11 = l14 cmp l3;

        if $b11 == 0 goto label05;

        return 0;

     label05:
        i13 = i13 + 1;

        goto label02;

     label06:
        if i13 >= i0 goto label08;

        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        l15 = $r5[i13];

        $b6 = l15 cmp -9223372036854775808L;

        if $b6 == 0 goto label07;

        $b7 = l15 cmp 9223372036854775807L;

        if $b7 == 0 goto label07;

        return 0;

     label07:
        i13 = i13 + 1;

        goto label06;

     label08:
        if i13 >= i1 goto label10;

        l16 = r3[i13];

        $b4 = l16 cmp -9223372036854775808L;

        if $b4 == 0 goto label09;

        $b5 = l16 cmp 9223372036854775807L;

        if $b5 == 0 goto label09;

        return 0;

     label09:
        i13 = i13 + 1;

        goto label08;

     label10:
        return 1;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] r2;
        int i0, $i2, $i3, i6;
        long l1;
        boolean $z0;
        java.lang.StringBuilder $r3, $r6;
        java.lang.String $r5;
        byte $b4, $b5;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "[]";

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        i0 = lengthof r2;

        i6 = 0;

     label2:
        if i6 >= i0 goto label4;

        l1 = r2[i6];

        $b4 = l1 cmp -9223372036854775808L;

        if $b4 == 0 goto label3;

        $b5 = l1 cmp 9223372036854775807L;

        if $b5 == 0 goto label3;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $i2 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        $i3 = $i2 - 1;

        virtualinvoke $r3.<java.lang.StringBuilder: void setCharAt(int,char)>($i3, 93);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0, $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: org.apache.mahout.cf.taste.impl.common.FastIDSet clone()>();

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator iterator()>();

        return $r1;
    }

    static long[] access$100(org.apache.mahout.cf.taste.impl.common.FastIDSet)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        long[] $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] keys>;

        return $r1;
    }

    static int access$210(org.apache.mahout.cf.taste.impl.common.FastIDSet)
    {
        org.apache.mahout.cf.taste.impl.common.FastIDSet r0;
        int $i0, $i1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastIDSet;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries>;

        $i1 = $i0 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastIDSet: int numEntries> = $i1;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.cf.taste.impl.common.FastIDSet: long NULL> = -9223372036854775808L;

        <org.apache.mahout.cf.taste.impl.common.FastIDSet: long REMOVED> = 9223372036854775807L;

        <org.apache.mahout.cf.taste.impl.common.FastIDSet: float DEFAULT_LOAD_FACTOR> = 1.5F;

        return;
    }
}
