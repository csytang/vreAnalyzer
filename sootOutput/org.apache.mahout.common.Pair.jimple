public final class org.apache.mahout.common.Pair extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private final java.lang.Object first;
    private final java.lang.Object second;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        org.apache.mahout.common.Pair r0;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.mahout.common.Pair;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.common.Pair: java.lang.Object first> = r1;

        r0.<org.apache.mahout.common.Pair: java.lang.Object second> = r2;

        return;
    }

    public java.lang.Object getFirst()
    {
        org.apache.mahout.common.Pair r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.mahout.common.Pair;

        $r1 = r0.<org.apache.mahout.common.Pair: java.lang.Object first>;

        return $r1;
    }

    public java.lang.Object getSecond()
    {
        org.apache.mahout.common.Pair r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.mahout.common.Pair;

        $r1 = r0.<org.apache.mahout.common.Pair: java.lang.Object second>;

        return $r1;
    }

    public org.apache.mahout.common.Pair swap()
    {
        org.apache.mahout.common.Pair r0, $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: org.apache.mahout.common.Pair;

        $r1 = new org.apache.mahout.common.Pair;

        $r3 = r0.<org.apache.mahout.common.Pair: java.lang.Object second>;

        $r2 = r0.<org.apache.mahout.common.Pair: java.lang.Object first>;

        specialinvoke $r1.<org.apache.mahout.common.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        return $r1;
    }

    public static org.apache.mahout.common.Pair of(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        org.apache.mahout.common.Pair $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r2 = new org.apache.mahout.common.Pair;

        specialinvoke $r2.<org.apache.mahout.common.Pair: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.common.Pair r0, r2;
        java.lang.Object r1, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.mahout.common.Pair;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.common.Pair;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.mahout.common.Pair) r1;

        $r3 = r0.<org.apache.mahout.common.Pair: java.lang.Object first>;

        $r4 = virtualinvoke r2.<org.apache.mahout.common.Pair: java.lang.Object getFirst()>();

        $z1 = staticinvoke <org.apache.mahout.common.Pair: boolean isEqualOrNulls(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z1 == 0 goto label2;

        $r5 = r0.<org.apache.mahout.common.Pair: java.lang.Object second>;

        $r6 = virtualinvoke r2.<org.apache.mahout.common.Pair: java.lang.Object getSecond()>();

        $z2 = staticinvoke <org.apache.mahout.common.Pair: boolean isEqualOrNulls(java.lang.Object,java.lang.Object)>($r5, $r6);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    private static boolean isEqualOrNulls(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    public int hashCode()
    {
        org.apache.mahout.common.Pair r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r1, $r2;

        r0 := @this: org.apache.mahout.common.Pair;

        $r1 = r0.<org.apache.mahout.common.Pair: java.lang.Object first>;

        i0 = staticinvoke <org.apache.mahout.common.Pair: int hashCodeNull(java.lang.Object)>($r1);

        $i2 = i0 >>> 16;

        $i1 = i0 << 16;

        $i3 = $i2 | $i1;

        $r2 = r0.<org.apache.mahout.common.Pair: java.lang.Object second>;

        $i4 = staticinvoke <org.apache.mahout.common.Pair: int hashCodeNull(java.lang.Object)>($r2);

        $i5 = $i3 ^ $i4;

        return $i5;
    }

    private static int hashCodeNull(java.lang.Object)
    {
        java.lang.Object r0;
        int $i0;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

     label2:
        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.common.Pair r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        java.lang.Object $r3, $r7;
        java.lang.String $r4, $r10;

        r0 := @this: org.apache.mahout.common.Pair;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r3 = r0.<org.apache.mahout.common.Pair: java.lang.Object first>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r7 = r0.<org.apache.mahout.common.Pair: java.lang.Object second>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public int compareTo(org.apache.mahout.common.Pair)
    {
        org.apache.mahout.common.Pair r0, r1;
        java.lang.Comparable r2, r4;
        java.lang.Object r3, r5, $r6, $r7;
        int i0, $i1;

        r0 := @this: org.apache.mahout.common.Pair;

        r1 := @parameter0: org.apache.mahout.common.Pair;

        $r6 = r0.<org.apache.mahout.common.Pair: java.lang.Object first>;

        r2 = (java.lang.Comparable) $r6;

        r3 = virtualinvoke r1.<org.apache.mahout.common.Pair: java.lang.Object getFirst()>();

        i0 = interfaceinvoke r2.<java.lang.Comparable: int compareTo(java.lang.Object)>(r3);

        if i0 == 0 goto label1;

        return i0;

     label1:
        $r7 = r0.<org.apache.mahout.common.Pair: java.lang.Object second>;

        r4 = (java.lang.Comparable) $r7;

        r5 = virtualinvoke r1.<org.apache.mahout.common.Pair: java.lang.Object getSecond()>();

        $i1 = interfaceinvoke r4.<java.lang.Comparable: int compareTo(java.lang.Object)>(r5);

        return $i1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.mahout.common.Pair r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.mahout.common.Pair;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.mahout.common.Pair) r1;

        $i0 = virtualinvoke r0.<org.apache.mahout.common.Pair: int compareTo(org.apache.mahout.common.Pair)>($r2);

        return $i0;
    }
}
