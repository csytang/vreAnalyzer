public class org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator extends org.apache.mahout.common.AbstractJob
{
    private static final java.lang.String USER_FEATURES_PATH;
    private static final java.lang.String ITEM_FEATURES_PATH;

    public void <init>()
    {
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator r0;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator;

        specialinvoke r0.<org.apache.mahout.common.AbstractJob: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator;

        specialinvoke $r1.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: void <init>()>();

        staticinvoke <org.apache.hadoop.util.ToolRunner: int run(org.apache.hadoop.util.Tool,java.lang.String[])>($r1, r0);

        return;
    }

    public int run(java.lang.String[]) throws java.lang.Exception
    {
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator r0;
        java.lang.String[] r1;
        java.util.Map r2;
        org.apache.hadoop.fs.Path r3, $r11, $r18, $r22;
        org.apache.hadoop.mapreduce.Job r4;
        org.apache.hadoop.conf.Configuration r5, $r19;
        boolean z0, z1;
        org.apache.hadoop.fs.FileSystem r6;
        org.apache.hadoop.fs.FSDataOutputStream r7;
        java.lang.String $r12, $r13, $r14, $r15, $r16, $r23, $r25, $r26;
        java.net.URI $r17;
        java.io.BufferedWriter $r20;
        java.io.OutputStreamWriter $r21;
        java.nio.charset.Charset $r24;
        java.lang.Throwable $r28, $r29, $r30, r31;
        double d0;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator;

        r1 := @parameter0: java.lang.String[];

        virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: void addInputOption()>();

        virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: void addOption(java.lang.String,java.lang.String,java.lang.String,boolean)>("userFeatures", null, "path to the user feature matrix", 1);

        virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: void addOption(java.lang.String,java.lang.String,java.lang.String,boolean)>("itemFeatures", null, "path to the item feature matrix", 1);

        virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: void addOption(java.lang.String,java.lang.String,java.lang.String)>("usesLongIDs", null, "input contains long IDs that need to be translated");

        virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: void addOutputOption()>();

        r2 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.util.Map parseArguments(java.lang.String[])>(r1);

        if r2 != null goto label01;

        return -1;

     label01:
        r3 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("errors");

        $r11 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: org.apache.hadoop.fs.Path getInputPath()>();

        r4 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: org.apache.hadoop.mapreduce.Job prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)>($r11, r3, class "org/apache/hadoop/mapreduce/lib/input/TextInputFormat", class "org/apache/mahout/cf/taste/hadoop/als/FactorizationEvaluator$PredictRatingsMapper", class "org/apache/hadoop/io/DoubleWritable", class "org/apache/hadoop/io/NullWritable", class "org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat");

        r5 = virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r12 = <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String USER_FEATURES_PATH>;

        $r14 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String getOption(java.lang.String)>("userFeatures");

        virtualinvoke r5.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>($r12, $r14);

        $r13 = <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String ITEM_FEATURES_PATH>;

        $r16 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String getOption(java.lang.String)>("itemFeatures");

        virtualinvoke r5.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>($r13, $r16);

        $r15 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String getOption(java.lang.String)>("usesLongIDs");

        z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r15);

        if z0 == 0 goto label02;

        $r25 = <org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob: java.lang.String USES_LONG_IDS>;

        $r26 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(1);

        virtualinvoke r5.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>($r25, $r26);

     label02:
        z1 = virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1);

        if z1 != 0 goto label03;

        return -1;

     label03:
        $r18 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: org.apache.hadoop.fs.Path getOutputPath()>();

        $r17 = virtualinvoke $r18.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        $r19 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: org.apache.hadoop.conf.Configuration getConf()>();

        r6 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>($r17, $r19);

        $r22 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: org.apache.hadoop.fs.Path getOutputPath(java.lang.String)>("rmse.txt");

        r7 = virtualinvoke r6.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path)>($r22);

        $r20 = new java.io.BufferedWriter;

        $r21 = new java.io.OutputStreamWriter;

        $r24 = <org.apache.commons.io.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r21.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r7, $r24);

        specialinvoke $r20.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r21);

        r31 = null;

     label04:
        d0 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: double computeRmse(org.apache.hadoop.fs.Path)>(r3);

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        virtualinvoke $r20.<java.io.BufferedWriter: void write(java.lang.String)>($r23);

     label05:
        if $r20 == null goto label14;

        virtualinvoke $r20.<java.io.BufferedWriter: void close()>();

        goto label14;

     label06:
        $r29 := @caughtexception;

        r31 = $r29;

        throw $r29;

     label07:
        $r30 := @caughtexception;

     label08:
        if $r20 == null goto label13;

        if r31 == null goto label12;

     label09:
        virtualinvoke $r20.<java.io.BufferedWriter: void close()>();

     label10:
        goto label13;

     label11:
        $r28 := @caughtexception;

        virtualinvoke r31.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r28);

        goto label13;

     label12:
        virtualinvoke $r20.<java.io.BufferedWriter: void close()>();

     label13:
        throw $r30;

     label14:
        return 0;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label06 to label08 with label07;
    }

    double computeRmse(org.apache.hadoop.fs.Path)
    {
        org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator r0;
        org.apache.hadoop.fs.Path r1;
        java.util.Iterator r3;
        org.apache.mahout.common.Pair r4;
        org.apache.hadoop.io.DoubleWritable r5;
        org.apache.mahout.cf.taste.impl.common.FullRunningAverage $r6;
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable $r7;
        org.apache.mahout.common.iterator.sequencefile.PathType $r8;
        org.apache.hadoop.fs.PathFilter $r9;
        org.apache.hadoop.conf.Configuration $r10;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Object $r11, $r12;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator;

        r1 := @parameter0: org.apache.hadoop.fs.Path;

        $r6 = new org.apache.mahout.cf.taste.impl.common.FullRunningAverage;

        specialinvoke $r6.<org.apache.mahout.cf.taste.impl.common.FullRunningAverage: void <init>()>();

        $r7 = new org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable;

        $r8 = <org.apache.mahout.common.iterator.sequencefile.PathType: org.apache.mahout.common.iterator.sequencefile.PathType LIST>;

        $r9 = staticinvoke <org.apache.mahout.common.iterator.sequencefile.PathFilters: org.apache.hadoop.fs.PathFilter logsCRCFilter()>();

        $r10 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: org.apache.hadoop.conf.Configuration getConf()>();

        specialinvoke $r7.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: void <init>(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)>(r1, $r8, $r9, $r10);

        r3 = virtualinvoke $r7.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.mahout.common.Pair) $r11;

        $r12 = virtualinvoke r4.<org.apache.mahout.common.Pair: java.lang.Object getFirst()>();

        r5 = (org.apache.hadoop.io.DoubleWritable) $r12;

        $d2 = virtualinvoke r5.<org.apache.hadoop.io.DoubleWritable: double get()>();

        $d4 = virtualinvoke r5.<org.apache.hadoop.io.DoubleWritable: double get()>();

        $d3 = $d2 * $d4;

        interfaceinvoke $r6.<org.apache.mahout.cf.taste.impl.common.RunningAverage: void addDatum(double)>($d3);

        goto label1;

     label2:
        $d0 = interfaceinvoke $r6.<org.apache.mahout.cf.taste.impl.common.RunningAverage: double getAverage()>();

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        return $d1;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String USER_FEATURES_PATH>;

        return $r0;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String ITEM_FEATURES_PATH>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r9, $r10;
        java.lang.Class $r1, $r7;
        java.lang.String $r2, $r5, $r8, $r11;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "org/apache/mahout/cf/taste/hadoop/als/RecommenderJob";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".userFeatures");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String USER_FEATURES_PATH> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = class "org/apache/mahout/cf/taste/hadoop/als/RecommenderJob";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".itemFeatures");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.mahout.cf.taste.hadoop.als.FactorizationEvaluator: java.lang.String ITEM_FEATURES_PATH> = $r11;

        return;
    }
}
