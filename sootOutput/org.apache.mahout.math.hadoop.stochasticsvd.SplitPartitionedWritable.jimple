public class org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable extends java.lang.Object implements org.apache.hadoop.io.WritableComparable
{
    private int taskId;
    private long taskItemOrdinal;

    public void <init>(org.apache.hadoop.mapreduce.Mapper$Context)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.mapreduce.TaskAttemptID $r2;
        org.apache.hadoop.mapreduce.TaskID $r3;
        int $i0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.mapreduce.TaskAttemptID getTaskAttemptID()>();

        $r3 = virtualinvoke $r2.<org.apache.hadoop.mapreduce.TaskAttemptID: org.apache.hadoop.mapreduce.TaskID getTaskID()>();

        $i0 = virtualinvoke $r3.<org.apache.hadoop.mapreduce.TaskID: int getId()>();

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId> = $i0;

        return;
    }

    public void <init>()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getTaskId()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        int $i0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        $i0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        return $i0;
    }

    public long getTaskItemOrdinal()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        long $l0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        $l0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal>;

        return $l0;
    }

    public void incrementItemOrdinal()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        long $l0, $l1;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        $l0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal>;

        $l1 = $l0 + 1L;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal> = $l1;

        return;
    }

    public void setTaskItemOrdinal(long)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        long l0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        l0 := @parameter0: long;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal> = l0;

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        java.io.DataInput r1;
        int $i0;
        long $l1;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        r1 := @parameter0: java.io.DataInput;

        $i0 = staticinvoke <org.apache.mahout.math.Varint: int readUnsignedVarInt(java.io.DataInput)>(r1);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId> = $i0;

        $l1 = staticinvoke <org.apache.mahout.math.Varint: long readUnsignedVarLong(java.io.DataInput)>(r1);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal> = $l1;

        return;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        java.io.DataOutput r1;
        int $i0;
        long $l1;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        r1 := @parameter0: java.io.DataOutput;

        $i0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        staticinvoke <org.apache.mahout.math.Varint: void writeUnsignedVarInt(int,java.io.DataOutput)>($i0, r1);

        $l1 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal>;

        staticinvoke <org.apache.mahout.math.Varint: void writeUnsignedVarLong(long,java.io.DataOutput)>($l1, r1);

        return;
    }

    public int hashCode()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        int $i1, i4;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        $i1 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        i4 = 31 + $i1;

        return i4;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

        return 0;

     label3:
        r2 = (org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable) r1;

        $i1 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        $i0 = r2.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        if $i1 != $i0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public int compareTo(org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0, r1;
        int $i0, $i1, $i2, $i3;
        long $l4, $l5, $l7, $l8;
        byte $b6, $b9;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        r1 := @parameter0: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        $i1 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        $i0 = r1.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        if $i1 >= $i0 goto label1;

        return -1;

     label1:
        $i3 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        $i2 = r1.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        if $i3 <= $i2 goto label2;

        return 1;

     label2:
        $l5 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal>;

        $l4 = r1.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal>;

        $b6 = $l5 cmp $l4;

        if $b6 >= 0 goto label3;

        return -1;

     label3:
        $l8 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal>;

        $l7 = r1.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: long taskItemOrdinal>;

        $b9 = $l8 cmp $l7;

        if $b9 <= 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable) r1;

        $i0 = virtualinvoke r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int compareTo(org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable)>($r2);

        return $i0;
    }

    static int access$000(org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable r0;
        int $i0;

        r0 := @parameter0: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        $i0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: int taskId>;

        return $i0;
    }
}
