public class org.apache.hadoop.examples.WordCount$TokenizerMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private static final org.apache.hadoop.io.IntWritable one;
    private org.apache.hadoop.io.Text word;

    public void <init>()
    {
        org.apache.hadoop.examples.WordCount$TokenizerMapper r0;
        org.apache.hadoop.io.Text $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new org.apache.hadoop.io.Text;

        specialinvoke $r1.<init>();

        r0.word = $r1;

        return;
    }

    public void map(java.lang.Object, org.apache.hadoop.io.Text, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.hadoop.examples.WordCount$TokenizerMapper r0;
        java.lang.Object r1;
        org.apache.hadoop.io.Text r2, $r7, $r10;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        java.util.StringTokenizer $r5;
        java.lang.String $r6, $r8;
        boolean $z0;
        org.apache.hadoop.io.IntWritable $r9;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r5 = new java.util.StringTokenizer;

        $r6 = r2.toString();

        specialinvoke $r5.<init>($r6);

     label1:
        $z0 = $r5.hasMoreTokens();

        if $z0 == 0 goto label2;

        $r7 = r0.word;

        $r8 = $r5.nextToken();

        $r7.set($r8);

        $r10 = r0.word;

        $r9 = org.apache.hadoop.examples.WordCount$TokenizerMapper.one;

        r3.write($r10, $r9);

        goto label1;

     label2:
        return;
    }

    public volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.hadoop.examples.WordCount$TokenizerMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.hadoop.io.Text $r4;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r4 = (org.apache.hadoop.io.Text) r2;

        r0.map(r1, $r4, r3);

        return;
    }

    static void <clinit>()
    {
        org.apache.hadoop.io.IntWritable $r0;

        $r0 = new org.apache.hadoop.io.IntWritable;

        specialinvoke $r0.<init>(1);

        org.apache.hadoop.examples.WordCount$TokenizerMapper.one = $r0;

        return;
    }
}
