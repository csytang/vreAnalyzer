public final class org.apache.mahout.cf.taste.impl.recommender.TopItems extends java.lang.Object
{
    private static final long[] NO_IDS;

    private void <init>()
    {
        org.apache.mahout.cf.taste.impl.recommender.TopItems r0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.TopItems;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List getTopItems(int, org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator, org.apache.mahout.cf.taste.recommender.IDRescorer, org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator) throws org.apache.mahout.cf.taste.common.TasteException
    {
        int i0, $i1, $i2, i5;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator r0;
        org.apache.mahout.cf.taste.recommender.IDRescorer r1;
        org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator r2;
        double d0, d1, $d2, d3;
        java.util.PriorityQueue $r5;
        java.util.Comparator $r6, $r7, $r10;
        java.util.ArrayList $r8;
        java.util.List $r9;
        java.lang.Long $r11, $r13;
        java.lang.Object $r12, $r19;
        boolean $z1, $z3, $z4, $z5, z6, $z7;
        org.apache.mahout.cf.taste.impl.recommender.GenericRecommendedItem $r14;
        float $f0, $f1;
        byte $b3;
        org.apache.mahout.cf.taste.common.NoSuchItemException $r17;
        long l4;
        org.apache.mahout.cf.taste.recommender.RecommendedItem $r20;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;

        r1 := @parameter2: org.apache.mahout.cf.taste.recommender.IDRescorer;

        r2 := @parameter3: org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator;

        if r0 == null goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z4, "possibleItemIDs is null");

        if r2 == null goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z5, "estimator is null");

        $r5 = new java.util.PriorityQueue;

        $i1 = i0 + 1;

        $r7 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.ByValueRecommendedItemComparator: java.util.Comparator getInstance()>();

        $r6 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder(java.util.Comparator)>($r7);

        specialinvoke $r5.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>($i1, $r6);

        z6 = 0;

        d1 = #-Infinity;

     label05:
        $z7 = interfaceinvoke r0.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: boolean hasNext()>();

        if $z7 == 0 goto label15;

        $r12 = interfaceinvoke r0.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: java.lang.Object next()>();

        $r11 = (java.lang.Long) $r12;

        l4 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        if r1 == null goto label06;

        $z3 = interfaceinvoke r1.<org.apache.mahout.cf.taste.recommender.IDRescorer: boolean isFiltered(long)>(l4);

        if $z3 != 0 goto label05;

     label06:
        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        d0 = interfaceinvoke r2.<org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator: double estimate(java.lang.Object)>($r13);

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

        goto label05;

     label09:
        if r1 != null goto label10;

        $d2 = d0;

        goto label11;

     label10:
        $d2 = interfaceinvoke r1.<org.apache.mahout.cf.taste.recommender.IDRescorer: double rescore(long,double)>(l4, d0);

     label11:
        d3 = $d2;

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z1 != 0 goto label05;

        if z6 == 0 goto label12;

        $b3 = $d2 cmpl d1;

        if $b3 <= 0 goto label05;

     label12:
        $r14 = new org.apache.mahout.cf.taste.impl.recommender.GenericRecommendedItem;

        $f0 = (float) d3;

        specialinvoke $r14.<org.apache.mahout.cf.taste.impl.recommender.GenericRecommendedItem: void <init>(long,float)>(l4, $f0);

        interfaceinvoke $r5.<java.util.Queue: boolean add(java.lang.Object)>($r14);

        if z6 == 0 goto label13;

        interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

        goto label14;

     label13:
        $i2 = interfaceinvoke $r5.<java.util.Queue: int size()>();

        if $i2 <= i0 goto label14;

        z6 = 1;

        interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

     label14:
        $r19 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object peek()>();

        $r20 = (org.apache.mahout.cf.taste.recommender.RecommendedItem) $r19;

        $f1 = interfaceinvoke $r20.<org.apache.mahout.cf.taste.recommender.RecommendedItem: float getValue()>();

        d1 = (double) $f1;

        goto label05;

     label15:
        i5 = interfaceinvoke $r5.<java.util.Queue: int size()>();

        if i5 != 0 goto label16;

        $r9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r9;

     label16:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i5);

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r10 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.ByValueRecommendedItemComparator: java.util.Comparator getInstance()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r8, $r10);

        return $r8;

        catch org.apache.mahout.cf.taste.common.NoSuchItemException from label06 to label07 with label08;
    }

    public static long[] getTopUsers(int, org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator, org.apache.mahout.cf.taste.recommender.IDRescorer, org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator) throws org.apache.mahout.cf.taste.common.TasteException
    {
        int i0, $i1, $i3, $i4, i7, i8;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator r0;
        org.apache.mahout.cf.taste.recommender.IDRescorer r1;
        org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator r2;
        org.apache.mahout.cf.taste.impl.recommender.SimilarUser r5, $r14, $r20;
        java.util.PriorityQueue $r6;
        java.util.Comparator $r7;
        java.util.ArrayList $r8;
        java.lang.Object $r9, $r12, $r19;
        boolean $z1, $z2, $z4, z5, $z6;
        long $l2, l6;
        long[] $r10, r21;
        java.lang.Long $r11, $r13;
        byte $b5;
        org.apache.mahout.cf.taste.common.NoSuchUserException $r17;
        double d0, d1, $d2, d3;
        java.util.Iterator r22;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;

        r1 := @parameter2: org.apache.mahout.cf.taste.recommender.IDRescorer;

        r2 := @parameter3: org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator;

        $r6 = new java.util.PriorityQueue;

        $i1 = i0 + 1;

        $r7 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();

        specialinvoke $r6.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>($i1, $r7);

        z5 = 0;

        d0 = #-Infinity;

     label01:
        $z6 = interfaceinvoke r0.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r12 = interfaceinvoke r0.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: java.lang.Object next()>();

        $r11 = (java.lang.Long) $r12;

        l6 = virtualinvoke $r11.<java.lang.Long: long longValue()>();

        if r1 == null goto label02;

        $z4 = interfaceinvoke r1.<org.apache.mahout.cf.taste.recommender.IDRescorer: boolean isFiltered(long)>(l6);

        if $z4 == 0 goto label02;

        goto label01;

     label02:
        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        d1 = interfaceinvoke r2.<org.apache.mahout.cf.taste.impl.recommender.TopItems$Estimator: double estimate(java.lang.Object)>($r13);

     label03:
        goto label05;

     label04:
        $r17 := @caughtexception;

        goto label01;

     label05:
        if r1 != null goto label06;

        $d2 = d1;

        goto label07;

     label06:
        $d2 = interfaceinvoke r1.<org.apache.mahout.cf.taste.recommender.IDRescorer: double rescore(long,double)>(l6, d1);

     label07:
        d3 = $d2;

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z2 != 0 goto label01;

        if z5 == 0 goto label08;

        $b5 = $d2 cmpl d0;

        if $b5 <= 0 goto label01;

     label08:
        $r14 = new org.apache.mahout.cf.taste.impl.recommender.SimilarUser;

        specialinvoke $r14.<org.apache.mahout.cf.taste.impl.recommender.SimilarUser: void <init>(long,double)>(l6, d3);

        interfaceinvoke $r6.<java.util.Queue: boolean add(java.lang.Object)>($r14);

        if z5 == 0 goto label09;

        interfaceinvoke $r6.<java.util.Queue: java.lang.Object poll()>();

        goto label10;

     label09:
        $i4 = interfaceinvoke $r6.<java.util.Queue: int size()>();

        if $i4 <= i0 goto label10;

        z5 = 1;

        interfaceinvoke $r6.<java.util.Queue: java.lang.Object poll()>();

     label10:
        $r19 = interfaceinvoke $r6.<java.util.Queue: java.lang.Object peek()>();

        $r20 = (org.apache.mahout.cf.taste.impl.recommender.SimilarUser) $r19;

        d0 = virtualinvoke $r20.<org.apache.mahout.cf.taste.impl.recommender.SimilarUser: double getSimilarity()>();

        goto label01;

     label11:
        i7 = interfaceinvoke $r6.<java.util.Queue: int size()>();

        if i7 != 0 goto label12;

        $r10 = <org.apache.mahout.cf.taste.impl.recommender.TopItems: long[] NO_IDS>;

        return $r10;

     label12:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(i7);

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r8);

        r21 = newarray (long)[i7];

        i8 = 0;

        r22 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r9 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.mahout.cf.taste.impl.recommender.SimilarUser) $r9;

        $i3 = i8;

        i8 = i8 + 1;

        $l2 = virtualinvoke r5.<org.apache.mahout.cf.taste.impl.recommender.SimilarUser: long getUserID()>();

        r21[$i3] = $l2;

        goto label13;

     label14:
        return r21;

        catch org.apache.mahout.cf.taste.common.NoSuchUserException from label02 to label03 with label04;
    }

    public static java.util.List getTopItemItemSimilarities(int, java.util.Iterator)
    {
        int i0, $i1, $i2, i4;
        java.util.Iterator r0;
        java.util.PriorityQueue $r2;
        java.util.Comparator $r3;
        boolean $z0, $z2, z4;
        java.util.ArrayList $r4;
        java.lang.Object $r5, $r10;
        java.util.List $r6;
        byte $b3;
        double d0, d1;
        org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity$ItemItemSimilarity r9, $r11;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Iterator;

        $r2 = new java.util.PriorityQueue;

        $i1 = i0 + 1;

        $r3 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();

        specialinvoke $r2.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>($i1, $r3);

        z4 = 0;

        d0 = #-Infinity;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity$ItemItemSimilarity) $r5;

        d1 = virtualinvoke r9.<org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity$ItemItemSimilarity: double getValue()>();

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z2 != 0 goto label1;

        if z4 == 0 goto label2;

        $b3 = d1 cmpl d0;

        if $b3 <= 0 goto label1;

     label2:
        interfaceinvoke $r2.<java.util.Queue: boolean add(java.lang.Object)>(r9);

        if z4 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        goto label4;

     label3:
        $i2 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        if $i2 <= i0 goto label4;

        z4 = 1;

        interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

     label4:
        $r10 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object peek()>();

        $r11 = (org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity$ItemItemSimilarity) $r10;

        d0 = virtualinvoke $r11.<org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity$ItemItemSimilarity: double getValue()>();

        goto label1;

     label5:
        i4 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        if i4 != 0 goto label6;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label6:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i4);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        return $r4;
    }

    public static java.util.List getTopUserUserSimilarities(int, java.util.Iterator)
    {
        int i0, $i1, $i2, i4;
        java.util.Iterator r0;
        java.util.PriorityQueue $r2;
        java.util.Comparator $r3;
        boolean $z0, $z2, z4;
        java.util.ArrayList $r4;
        java.lang.Object $r5, $r10;
        java.util.List $r6;
        byte $b3;
        double d0, d1;
        org.apache.mahout.cf.taste.impl.similarity.GenericUserSimilarity$UserUserSimilarity r9, $r11;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.Iterator;

        $r2 = new java.util.PriorityQueue;

        $i1 = i0 + 1;

        $r3 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>();

        specialinvoke $r2.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>($i1, $r3);

        z4 = 0;

        d0 = #-Infinity;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.mahout.cf.taste.impl.similarity.GenericUserSimilarity$UserUserSimilarity) $r5;

        d1 = virtualinvoke r9.<org.apache.mahout.cf.taste.impl.similarity.GenericUserSimilarity$UserUserSimilarity: double getValue()>();

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z2 != 0 goto label1;

        if z4 == 0 goto label2;

        $b3 = d1 cmpl d0;

        if $b3 <= 0 goto label1;

     label2:
        interfaceinvoke $r2.<java.util.Queue: boolean add(java.lang.Object)>(r9);

        if z4 == 0 goto label3;

        interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        goto label4;

     label3:
        $i2 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        if $i2 <= i0 goto label4;

        z4 = 1;

        interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

     label4:
        $r10 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object peek()>();

        $r11 = (org.apache.mahout.cf.taste.impl.similarity.GenericUserSimilarity$UserUserSimilarity) $r10;

        d0 = virtualinvoke $r11.<org.apache.mahout.cf.taste.impl.similarity.GenericUserSimilarity$UserUserSimilarity: double getValue()>();

        goto label1;

     label5:
        i4 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        if i4 != 0 goto label6;

        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r6;

     label6:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(i4);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r2);

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        return $r4;
    }

    static void <clinit>()
    {
        long[] $r0;

        $r0 = newarray (long)[0];

        <org.apache.mahout.cf.taste.impl.recommender.TopItems: long[] NO_IDS> = $r0;

        return;
    }
}
