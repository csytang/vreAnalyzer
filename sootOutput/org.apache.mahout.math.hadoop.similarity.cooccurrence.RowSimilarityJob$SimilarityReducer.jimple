public class org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer extends org.apache.hadoop.mapreduce.Reducer
{
    private org.apache.mahout.math.hadoop.similarity.cooccurrence.measures.VectorSimilarityMeasure similarity;
    private int numberOfColumns;
    private boolean excludeSelfSimilarity;
    private org.apache.mahout.math.Vector norms;
    private double treshold;

    public void <init>()
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer r0;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>();

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer r0;
        org.apache.hadoop.mapreduce.Reducer$Context r1;
        org.apache.hadoop.conf.Configuration $r2, $r7, $r12, $r15, $r20, $r22;
        java.lang.String $r3, $r4, $r8, $r13, $r14, $r17, $r18, $r21, $r23;
        java.lang.Object $r5;
        org.apache.mahout.math.hadoop.similarity.cooccurrence.measures.VectorSimilarityMeasure $r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r9, $r10, $r11;
        boolean $z0, $z1;
        org.apache.hadoop.fs.Path $r16;
        org.apache.mahout.math.Vector $r19;
        double $d0;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Reducer$Context;

        $r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r3 = staticinvoke <org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob: java.lang.String access$100()>();

        $r4 = virtualinvoke $r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r3);

        $r5 = staticinvoke <org.apache.mahout.common.ClassUtils: java.lang.Object instantiateAs(java.lang.String,java.lang.Class)>($r4, class "org/apache/mahout/math/hadoop/similarity/cooccurrence/measures/VectorSimilarityMeasure");

        $r6 = (org.apache.mahout.math.hadoop.similarity.cooccurrence.measures.VectorSimilarityMeasure) $r5;

        r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: org.apache.mahout.math.hadoop.similarity.cooccurrence.measures.VectorSimilarityMeasure similarity> = $r6;

        $r7 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r8 = staticinvoke <org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob: java.lang.String access$900()>();

        $i0 = virtualinvoke $r7.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>($r8, -1);

        r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: int numberOfColumns> = $i0;

        $i1 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: int numberOfColumns>;

        if $i1 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number of columns must be greater then 0! But numberOfColumns = ");

        $i2 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: int numberOfColumns>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, $r13);

        $r12 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r14 = staticinvoke <org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob: java.lang.String access$1000()>();

        $z0 = virtualinvoke $r12.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>($r14, 0);

        r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: boolean excludeSelfSimilarity> = $z0;

        $r16 = new org.apache.hadoop.fs.Path;

        $r15 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r18 = staticinvoke <org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob: java.lang.String access$600()>();

        $r17 = virtualinvoke $r15.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r18);

        specialinvoke $r16.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r17);

        $r20 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r19 = staticinvoke <org.apache.mahout.math.hadoop.similarity.cooccurrence.Vectors: org.apache.mahout.math.Vector read(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r16, $r20);

        r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: org.apache.mahout.math.Vector norms> = $r19;

        $r22 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r21 = staticinvoke <org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob: java.lang.String access$200()>();

        $r23 = virtualinvoke $r22.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r21);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r23);

        r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: double treshold> = $d0;

        return;
    }

    protected void reduce(org.apache.hadoop.io.IntWritable, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer r0;
        org.apache.hadoop.io.IntWritable r1;
        java.lang.Iterable r2, $r12, $r18;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        java.util.Iterator r4, r7, r22;
        org.apache.mahout.math.Vector r5, $r11, $r15, r21, r23;
        org.apache.mahout.math.Vector$Element r6, r8;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        java.lang.Object $r9, $r14, $r17, $r20;
        org.apache.mahout.math.VectorWritable $r10, $r13, $r19;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        org.apache.mahout.math.hadoop.similarity.cooccurrence.measures.VectorSimilarityMeasure $r16;
        byte $b5;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        r4 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (org.apache.mahout.math.VectorWritable) $r9;

        r5 = virtualinvoke $r10.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r17 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $r19 = (org.apache.mahout.math.VectorWritable) $r17;

        r21 = virtualinvoke $r19.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $r18 = interfaceinvoke r21.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r22 = interfaceinvoke $r18.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label1;

        $r20 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.mahout.math.Vector$Element) $r20;

        $i6 = interfaceinvoke r6.<org.apache.mahout.math.Vector$Element: int index()>();

        $i7 = interfaceinvoke r6.<org.apache.mahout.math.Vector$Element: int index()>();

        $d6 = interfaceinvoke r5.<org.apache.mahout.math.Vector: double getQuick(int)>($i7);

        $d5 = interfaceinvoke r6.<org.apache.mahout.math.Vector$Element: double get()>();

        $d4 = $d6 + $d5;

        interfaceinvoke r5.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i6, $d4);

        goto label2;

     label3:
        r23 = interfaceinvoke r5.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector like()>();

        $r11 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: org.apache.mahout.math.Vector norms>;

        $i0 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        d7 = interfaceinvoke $r11.<org.apache.mahout.math.Vector: double getQuick(int)>($i0);

        $r12 = interfaceinvoke r5.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r7 = interfaceinvoke $r12.<java.lang.Iterable: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.mahout.math.Vector$Element) $r14;

        $r16 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: org.apache.mahout.math.hadoop.similarity.cooccurrence.measures.VectorSimilarityMeasure similarity>;

        $d1 = interfaceinvoke r8.<org.apache.mahout.math.Vector$Element: double get()>();

        $r15 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: org.apache.mahout.math.Vector norms>;

        $i2 = interfaceinvoke r8.<org.apache.mahout.math.Vector$Element: int index()>();

        $d3 = interfaceinvoke $r15.<org.apache.mahout.math.Vector: double getQuick(int)>($i2);

        $i3 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: int numberOfColumns>;

        d0 = interfaceinvoke $r16.<org.apache.mahout.math.hadoop.similarity.cooccurrence.measures.VectorSimilarityMeasure: double similarity(double,double,double,int)>($d1, d7, $d3, $i3);

        $d2 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: double treshold>;

        $b5 = d0 cmpl $d2;

        if $b5 < 0 goto label4;

        $i4 = interfaceinvoke r8.<org.apache.mahout.math.Vector$Element: int index()>();

        interfaceinvoke r23.<org.apache.mahout.math.Vector: void set(int,double)>($i4, d0);

        goto label4;

     label5:
        $z1 = r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: boolean excludeSelfSimilarity>;

        if $z1 == 0 goto label6;

        $i1 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        interfaceinvoke r23.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i1, 0.0);

     label6:
        $r13 = new org.apache.mahout.math.VectorWritable;

        specialinvoke $r13.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>(r23);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r13);

        return;
    }

    protected volatile void reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer r0;
        java.lang.Object r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        org.apache.hadoop.io.IntWritable $r4;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r4 = (org.apache.hadoop.io.IntWritable) r1;

        virtualinvoke r0.<org.apache.mahout.math.hadoop.similarity.cooccurrence.RowSimilarityJob$SimilarityReducer: void reduce(org.apache.hadoop.io.IntWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3);

        return;
    }
}
