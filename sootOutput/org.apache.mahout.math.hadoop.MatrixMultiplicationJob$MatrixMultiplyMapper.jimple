public class org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper extends org.apache.hadoop.mapred.MapReduceBase implements org.apache.hadoop.mapred.Mapper
{
    private int outCardinality;
    private final org.apache.hadoop.io.IntWritable row;

    public void <init>()
    {
        org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper r0;
        org.apache.hadoop.io.IntWritable $r1;

        r0 := @this: org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper;

        specialinvoke r0.<org.apache.hadoop.mapred.MapReduceBase: void <init>()>();

        $r1 = new org.apache.hadoop.io.IntWritable;

        specialinvoke $r1.<org.apache.hadoop.io.IntWritable: void <init>()>();

        r0.<org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper: org.apache.hadoop.io.IntWritable row> = $r1;

        return;
    }

    public void configure(org.apache.hadoop.mapred.JobConf)
    {
        org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper r0;
        org.apache.hadoop.mapred.JobConf r1;
        int $i0;

        r0 := @this: org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper;

        r1 := @parameter0: org.apache.hadoop.mapred.JobConf;

        $i0 = virtualinvoke r1.<org.apache.hadoop.mapred.JobConf: int getInt(java.lang.String,int)>("output.vector.cardinality", 2147483647);

        r0.<org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper: int outCardinality> = $i0;

        return;
    }

    public void map(org.apache.hadoop.io.IntWritable, org.apache.hadoop.mapred.join.TupleWritable, org.apache.hadoop.mapred.OutputCollector, org.apache.hadoop.mapred.Reporter) throws java.io.IOException
    {
        org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper r0;
        org.apache.hadoop.io.IntWritable r1, $r19, $r21;
        org.apache.hadoop.mapred.join.TupleWritable r2;
        org.apache.hadoop.mapred.OutputCollector r3;
        org.apache.hadoop.mapred.Reporter r4;
        boolean z0, $z1, $z2;
        org.apache.mahout.math.Vector r5, $r12, $r22, $r27, $r28;
        java.util.Iterator r8;
        org.apache.mahout.math.Vector$Element r9;
        org.apache.hadoop.io.Writable $r10, $r14, $r15, $r24, $r26;
        org.apache.mahout.math.VectorWritable $r11, $r13, $r16, $r18, $r23, $r25;
        int $i0, $i1, $i2;
        java.lang.Iterable $r17;
        java.lang.Object $r20;
        double $d0;

        r0 := @this: org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: org.apache.hadoop.mapred.join.TupleWritable;

        r3 := @parameter2: org.apache.hadoop.mapred.OutputCollector;

        r4 := @parameter3: org.apache.hadoop.mapred.Reporter;

        $r10 = virtualinvoke r2.<org.apache.hadoop.mapred.join.TupleWritable: org.apache.hadoop.io.Writable get(int)>(0);

        $r11 = (org.apache.mahout.math.VectorWritable) $r10;

        $r12 = virtualinvoke $r11.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $i0 = interfaceinvoke $r12.<org.apache.mahout.math.Vector: int size()>();

        $i1 = r0.<org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper: int outCardinality>;

        if $i0 != $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if $z1 == 0 goto label3;

        $r26 = virtualinvoke r2.<org.apache.hadoop.mapred.join.TupleWritable: org.apache.hadoop.io.Writable get(int)>(0);

        $r25 = (org.apache.mahout.math.VectorWritable) $r26;

        $r27 = virtualinvoke $r25.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        goto label4;

     label3:
        $r14 = virtualinvoke r2.<org.apache.hadoop.mapred.join.TupleWritable: org.apache.hadoop.io.Writable get(int)>(1);

        $r13 = (org.apache.mahout.math.VectorWritable) $r14;

        $r27 = virtualinvoke $r13.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

     label4:
        r5 = $r27;

        if z0 == 0 goto label5;

        $r24 = virtualinvoke r2.<org.apache.hadoop.mapred.join.TupleWritable: org.apache.hadoop.io.Writable get(int)>(1);

        $r23 = (org.apache.mahout.math.VectorWritable) $r24;

        $r28 = virtualinvoke $r23.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        goto label6;

     label5:
        $r15 = virtualinvoke r2.<org.apache.hadoop.mapred.join.TupleWritable: org.apache.hadoop.io.Writable get(int)>(0);

        $r16 = (org.apache.mahout.math.VectorWritable) $r15;

        $r28 = virtualinvoke $r16.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

     label6:
        $r18 = new org.apache.mahout.math.VectorWritable;

        specialinvoke $r18.<org.apache.mahout.math.VectorWritable: void <init>()>();

        $r17 = interfaceinvoke $r28.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r8 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label7:
        $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r20 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.mahout.math.Vector$Element) $r20;

        $r19 = r0.<org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper: org.apache.hadoop.io.IntWritable row>;

        $i2 = interfaceinvoke r9.<org.apache.mahout.math.Vector$Element: int index()>();

        virtualinvoke $r19.<org.apache.hadoop.io.IntWritable: void set(int)>($i2);

        $d0 = interfaceinvoke r9.<org.apache.mahout.math.Vector$Element: double get()>();

        $r22 = interfaceinvoke r5.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector times(double)>($d0);

        virtualinvoke $r18.<org.apache.mahout.math.VectorWritable: void set(org.apache.mahout.math.Vector)>($r22);

        $r21 = r0.<org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper: org.apache.hadoop.io.IntWritable row>;

        interfaceinvoke r3.<org.apache.hadoop.mapred.OutputCollector: void collect(java.lang.Object,java.lang.Object)>($r21, $r18);

        goto label7;

     label8:
        return;
    }

    public volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapred.OutputCollector, org.apache.hadoop.mapred.Reporter) throws java.io.IOException
    {
        org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapred.OutputCollector r3;
        org.apache.hadoop.mapred.Reporter r4;
        org.apache.hadoop.mapred.join.TupleWritable $r5;
        org.apache.hadoop.io.IntWritable $r6;

        r0 := @this: org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapred.OutputCollector;

        r4 := @parameter3: org.apache.hadoop.mapred.Reporter;

        $r6 = (org.apache.hadoop.io.IntWritable) r1;

        $r5 = (org.apache.hadoop.mapred.join.TupleWritable) r2;

        virtualinvoke r0.<org.apache.mahout.math.hadoop.MatrixMultiplicationJob$MatrixMultiplyMapper: void map(org.apache.hadoop.io.IntWritable,org.apache.hadoop.mapred.join.TupleWritable,org.apache.hadoop.mapred.OutputCollector,org.apache.hadoop.mapred.Reporter)>($r6, $r5, r3, r4);

        return;
    }
}
