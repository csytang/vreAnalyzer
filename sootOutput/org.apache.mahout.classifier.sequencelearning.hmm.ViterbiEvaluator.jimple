public final class org.apache.mahout.classifier.sequencelearning.hmm.ViterbiEvaluator extends java.lang.Object
{

    private void <init>()
    {
        org.apache.mahout.classifier.sequencelearning.hmm.ViterbiEvaluator r0;

        r0 := @this: org.apache.mahout.classifier.sequencelearning.hmm.ViterbiEvaluator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        org.apache.commons.cli2.option.DefaultOption r3, r4, r5, r6;
        org.apache.commons.cli2.Group r7;
        org.apache.commons.cli2.CommandLine r8;
        java.lang.String r9, r10, r11, $r48;
        boolean z0, $z2;
        org.apache.mahout.classifier.sequencelearning.hmm.HmmModel r12;
        int i0, $i1, $i2, $i3, i4, $i5, i6, i7;
        org.apache.commons.cli2.builder.ArgumentBuilder $r15, $r20, $r25, $r26;
        org.apache.commons.cli2.builder.DefaultOptionBuilder $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r27, $r28, $r29, $r31, $r32;
        org.apache.commons.cli2.Argument $r23;
        org.apache.commons.cli2.builder.GroupBuilder $r30, $r33, $r34, $r35, $r36, $r38;
        org.apache.commons.cli2.commandline.Parser $r37;
        java.lang.Object $r39, $r40, $r41, $r54;
        java.io.FileInputStream $r42, $r79;
        java.io.DataInputStream $r43;
        java.io.PrintWriter $r44;
        java.io.OutputStreamWriter $r45;
        java.lang.StringBuilder $r46, $r47, $r51;
        double $d0;
        java.io.FileOutputStream $r49;
        java.nio.charset.Charset $r50;
        java.io.PrintStream $r52;
        java.lang.Integer $r53, $r55;
        java.lang.Throwable $r56, $r57, $r58, $r61, $r63, $r64, $r65, $r66, $r68, r71, r81, r89;
        org.apache.commons.cli2.OptionException $r67;
        java.util.ArrayList $r76;
        java.util.Scanner $r78;
        int[] r86, r87;

        r0 := @parameter0: java.lang.String[];

        $r16 = new org.apache.commons.cli2.builder.DefaultOptionBuilder;

        specialinvoke $r16.<org.apache.commons.cli2.builder.DefaultOptionBuilder: void <init>()>();

        $r15 = new org.apache.commons.cli2.builder.ArgumentBuilder;

        specialinvoke $r15.<org.apache.commons.cli2.builder.ArgumentBuilder: void <init>()>();

        $r17 = staticinvoke <org.apache.mahout.common.commandline.DefaultOptionCreator: org.apache.commons.cli2.builder.DefaultOptionBuilder inputOption()>();

        r3 = virtualinvoke $r17.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r18 = staticinvoke <org.apache.mahout.common.commandline.DefaultOptionCreator: org.apache.commons.cli2.builder.DefaultOptionBuilder outputOption()>();

        r4 = virtualinvoke $r18.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r21 = virtualinvoke $r16.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("model");

        $r22 = virtualinvoke $r21.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("Path to serialized HMM model");

        $r19 = virtualinvoke $r22.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("m");

        $r20 = virtualinvoke $r15.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMaximum(int)>(1);

        $r25 = virtualinvoke $r20.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMinimum(int)>(1);

        $r26 = virtualinvoke $r25.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withName(java.lang.String)>("path");

        $r23 = virtualinvoke $r26.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.Argument create()>();

        $r24 = virtualinvoke $r19.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withArgument(org.apache.commons.cli2.Argument)>($r23);

        $r29 = virtualinvoke $r24.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withRequired(boolean)>(1);

        r5 = virtualinvoke $r29.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r27 = virtualinvoke $r16.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("likelihood");

        $r28 = virtualinvoke $r27.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("Compute likelihood of observed sequence");

        $r31 = virtualinvoke $r28.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("l");

        $r32 = virtualinvoke $r31.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withRequired(boolean)>(0);

        r6 = virtualinvoke $r32.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r30 = new org.apache.commons.cli2.builder.GroupBuilder;

        specialinvoke $r30.<org.apache.commons.cli2.builder.GroupBuilder: void <init>()>();

        $r36 = virtualinvoke $r30.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r3);

        $r35 = virtualinvoke $r36.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r4);

        $r34 = virtualinvoke $r35.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r5);

        $r33 = virtualinvoke $r34.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r6);

        $r38 = virtualinvoke $r33.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withName(java.lang.String)>("Options");

        r7 = virtualinvoke $r38.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.Group create()>();

     label01:
        $r37 = new org.apache.commons.cli2.commandline.Parser;

        specialinvoke $r37.<org.apache.commons.cli2.commandline.Parser: void <init>()>();

        virtualinvoke $r37.<org.apache.commons.cli2.commandline.Parser: void setGroup(org.apache.commons.cli2.Group)>(r7);

        r8 = virtualinvoke $r37.<org.apache.commons.cli2.commandline.Parser: org.apache.commons.cli2.CommandLine parse(java.lang.String[])>(r0);

        $r41 = interfaceinvoke r8.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r3);

        r9 = (java.lang.String) $r41;

        $r40 = interfaceinvoke r8.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r4);

        r10 = (java.lang.String) $r40;

        $r39 = interfaceinvoke r8.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r5);

        r11 = (java.lang.String) $r39;

        z0 = interfaceinvoke r8.<org.apache.commons.cli2.CommandLine: boolean hasOption(org.apache.commons.cli2.Option)>(r6);

        $r43 = new java.io.DataInputStream;

        $r42 = new java.io.FileInputStream;

        specialinvoke $r42.<java.io.FileInputStream: void <init>(java.lang.String)>(r11);

        specialinvoke $r43.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r42);

        r71 = null;

     label02:
        r12 = staticinvoke <org.apache.mahout.classifier.sequencelearning.hmm.LossyHmmSerializer: org.apache.mahout.classifier.sequencelearning.hmm.HmmModel deserialize(java.io.DataInput)>($r43);

     label03:
        if $r43 == null goto label12;

        virtualinvoke $r43.<java.io.DataInputStream: void close()>();

        goto label12;

     label04:
        $r57 := @caughtexception;

        r71 = $r57;

        throw $r57;

     label05:
        $r63 := @caughtexception;

     label06:
        if $r43 == null goto label11;

        if r71 == null goto label10;

     label07:
        virtualinvoke $r43.<java.io.DataInputStream: void close()>();

     label08:
        goto label11;

     label09:
        $r66 := @caughtexception;

        virtualinvoke r71.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r66);

        goto label11;

     label10:
        virtualinvoke $r43.<java.io.DataInputStream: void close()>();

     label11:
        throw $r63;

     label12:
        $r76 = new java.util.ArrayList;

        specialinvoke $r76.<java.util.ArrayList: void <init>()>();

        $r78 = new java.util.Scanner;

        $r79 = new java.io.FileInputStream;

        specialinvoke $r79.<java.io.FileInputStream: void <init>(java.lang.String)>(r9);

        specialinvoke $r78.<java.util.Scanner: void <init>(java.io.InputStream,java.lang.String)>($r79, "UTF-8");

        r81 = null;

     label13:
        $z2 = virtualinvoke $r78.<java.util.Scanner: boolean hasNextInt()>();

        if $z2 == 0 goto label14;

        $i2 = virtualinvoke $r78.<java.util.Scanner: int nextInt()>();

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>($r55);

        goto label13;

     label14:
        if $r78 == null goto label23;

        virtualinvoke $r78.<java.util.Scanner: void close()>();

        goto label23;

     label15:
        $r61 := @caughtexception;

        r81 = $r61;

        throw $r61;

     label16:
        $r58 := @caughtexception;

     label17:
        if $r78 == null goto label22;

        if r81 == null goto label21;

     label18:
        virtualinvoke $r78.<java.util.Scanner: void close()>();

     label19:
        goto label22;

     label20:
        $r65 := @caughtexception;

        virtualinvoke r81.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r65);

        goto label22;

     label21:
        virtualinvoke $r78.<java.util.Scanner: void close()>();

     label22:
        throw $r58;

     label23:
        $i3 = interfaceinvoke $r76.<java.util.List: int size()>();

        r86 = newarray (int)[$i3];

        i4 = 0;

     label24:
        $i5 = interfaceinvoke $r76.<java.util.List: int size()>();

        if i4 >= $i5 goto label25;

        $r54 = interfaceinvoke $r76.<java.util.List: java.lang.Object get(int)>(i4);

        $r53 = (java.lang.Integer) $r54;

        $i1 = virtualinvoke $r53.<java.lang.Integer: int intValue()>();

        r86[i4] = $i1;

        i4 = i4 + 1;

        goto label24;

     label25:
        r87 = staticinvoke <org.apache.mahout.classifier.sequencelearning.hmm.HmmEvaluator: int[] decode(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int[],boolean)>(r12, r86, 1);

        $r44 = new java.io.PrintWriter;

        $r45 = new java.io.OutputStreamWriter;

        $r49 = new java.io.FileOutputStream;

        specialinvoke $r49.<java.io.FileOutputStream: void <init>(java.lang.String)>(r10);

        $r50 = <org.apache.commons.io.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r45.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r49, $r50);

        specialinvoke $r44.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r45, 1);

        r89 = null;

     label26:
        i6 = lengthof r87;

        i7 = 0;

     label27:
        if i7 >= i6 goto label28;

        i0 = r87[i7];

        virtualinvoke $r44.<java.io.PrintWriter: void print(int)>(i0);

        virtualinvoke $r44.<java.io.PrintWriter: void print(char)>(32);

        i7 = i7 + 1;

        goto label27;

     label28:
        if $r44 == null goto label37;

        virtualinvoke $r44.<java.io.PrintWriter: void close()>();

        goto label37;

     label29:
        $r68 := @caughtexception;

        r89 = $r68;

        throw $r68;

     label30:
        $r56 := @caughtexception;

     label31:
        if $r44 == null goto label36;

        if r89 == null goto label35;

     label32:
        virtualinvoke $r44.<java.io.PrintWriter: void close()>();

     label33:
        goto label36;

     label34:
        $r64 := @caughtexception;

        virtualinvoke r89.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r64);

        goto label36;

     label35:
        virtualinvoke $r44.<java.io.PrintWriter: void close()>();

     label36:
        throw $r56;

     label37:
        if z0 == 0 goto label40;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Likelihood: ");

        $d0 = staticinvoke <org.apache.mahout.classifier.sequencelearning.hmm.HmmEvaluator: double modelLikelihood(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int[],boolean)>(r12, r86, 1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r48);

     label38:
        goto label40;

     label39:
        $r67 := @caughtexception;

        staticinvoke <org.apache.mahout.common.CommandLineUtil: void printHelp(org.apache.commons.cli2.Group)>(r7);

     label40:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label06 with label05;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label13 to label14 with label16;
        catch java.lang.Throwable from label18 to label19 with label20;
        catch java.lang.Throwable from label15 to label17 with label16;
        catch java.lang.Throwable from label26 to label28 with label29;
        catch java.lang.Throwable from label26 to label28 with label30;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label29 to label31 with label30;
        catch org.apache.commons.cli2.OptionException from label01 to label38 with label39;
    }
}
