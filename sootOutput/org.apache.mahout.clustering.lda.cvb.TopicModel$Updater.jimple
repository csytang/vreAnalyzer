final class org.apache.mahout.clustering.lda.cvb.TopicModel$Updater extends java.lang.Object implements java.lang.Runnable
{
    private final java.util.concurrent.ArrayBlockingQueue queue;
    private boolean shutdown;
    private boolean shutdownComplete;
    final org.apache.mahout.clustering.lda.cvb.TopicModel this$0;

    private void <init>(org.apache.mahout.clustering.lda.cvb.TopicModel)
    {
        org.apache.mahout.clustering.lda.cvb.TopicModel$Updater r0;
        org.apache.mahout.clustering.lda.cvb.TopicModel r1;
        java.util.concurrent.ArrayBlockingQueue $r2;

        r0 := @this: org.apache.mahout.clustering.lda.cvb.TopicModel$Updater;

        r1 := @parameter0: org.apache.mahout.clustering.lda.cvb.TopicModel;

        r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: org.apache.mahout.clustering.lda.cvb.TopicModel this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(100);

        r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: java.util.concurrent.ArrayBlockingQueue queue> = $r2;

        r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: boolean shutdown> = 0;

        r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: boolean shutdownComplete> = 0;

        return;
    }

    public void shutdown()
    {
        org.apache.mahout.clustering.lda.cvb.TopicModel$Updater r0;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.InterruptedException $r4;
        org.slf4j.Logger $r5;

        r0 := @this: org.apache.mahout.clustering.lda.cvb.TopicModel$Updater;

     label1:
        entermonitor r0;

     label2:
        $z0 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: boolean shutdownComplete>;

        if $z0 != 0 goto label3;

        r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: boolean shutdown> = 1;

        virtualinvoke r0.<java.lang.Object: void wait(long)>(10000L);

        goto label2;

     label3:
        exitmonitor r0;

     label4:
        goto label8;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r3;

     label7:
        $r4 := @caughtexception;

        $r5 = staticinvoke <org.apache.mahout.clustering.lda.cvb.TopicModel: org.slf4j.Logger access$100()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Interrupted waiting to shutdown() : ", $r4);

     label8:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.lang.InterruptedException from label1 to label7 with label7;
    }

    public boolean update(int, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.clustering.lda.cvb.TopicModel$Updater r0;
        int i0;
        org.apache.mahout.math.Vector r1;
        boolean $z0;
        java.util.concurrent.ArrayBlockingQueue $r3;
        java.lang.Integer $r4;
        org.apache.mahout.common.Pair $r5;
        java.lang.IllegalStateException $r6;
        java.lang.InterruptedException $r7;
        org.slf4j.Logger $r8;

        r0 := @this: org.apache.mahout.clustering.lda.cvb.TopicModel$Updater;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.mahout.math.Vector;

        $z0 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: boolean shutdown>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("In SHUTDOWN state: cannot submit tasks");

        throw $r6;

     label1:
        $r3 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: java.util.concurrent.ArrayBlockingQueue queue>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = staticinvoke <org.apache.mahout.common.Pair: org.apache.mahout.common.Pair of(java.lang.Object,java.lang.Object)>($r4, r1);

        virtualinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: void put(java.lang.Object)>($r5);

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        $r8 = staticinvoke <org.apache.mahout.clustering.lda.cvb.TopicModel: org.slf4j.Logger access$100()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Interrupted trying to queue update:", $r7);

        goto label1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void run()
    {
        org.apache.mahout.clustering.lda.cvb.TopicModel$Updater r0;
        org.apache.mahout.common.Pair r1, r22;
        java.util.concurrent.ArrayBlockingQueue $r3, $r11;
        boolean $z0, $z1;
        java.lang.Object $r5, $r7, $r9, $r13, $r14, $r18;
        org.apache.mahout.clustering.lda.cvb.TopicModel $r6, $r15;
        java.lang.Integer $r8, $r16;
        int $i0, $i1;
        org.apache.mahout.math.Vector $r10, $r17;
        java.util.concurrent.TimeUnit $r12;
        java.lang.Throwable $r19;
        org.slf4j.Logger $r20;
        java.lang.InterruptedException $r21;
        java.util.Iterator r24;

        r0 := @this: org.apache.mahout.clustering.lda.cvb.TopicModel$Updater;

     label01:
        $z1 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: boolean shutdown>;

        if $z1 != 0 goto label05;

     label02:
        $r11 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: java.util.concurrent.ArrayBlockingQueue queue>;

        $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r13 = virtualinvoke $r11.<java.util.concurrent.ArrayBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(1L, $r12);

        r22 = (org.apache.mahout.common.Pair) $r13;

        if r22 == null goto label01;

        $r15 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: org.apache.mahout.clustering.lda.cvb.TopicModel this$0>;

        $r14 = virtualinvoke r22.<org.apache.mahout.common.Pair: java.lang.Object getFirst()>();

        $r16 = (java.lang.Integer) $r14;

        $i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r18 = virtualinvoke r22.<org.apache.mahout.common.Pair: java.lang.Object getSecond()>();

        $r17 = (org.apache.mahout.math.Vector) $r18;

        virtualinvoke $r15.<org.apache.mahout.clustering.lda.cvb.TopicModel: void updateTopic(int,org.apache.mahout.math.Vector)>($i1, $r17);

     label03:
        goto label01;

     label04:
        $r21 := @caughtexception;

        $r20 = staticinvoke <org.apache.mahout.clustering.lda.cvb.TopicModel: org.slf4j.Logger access$100()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Interrupted waiting to poll for update", $r21);

        goto label01;

     label05:
        $r3 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: java.util.concurrent.ArrayBlockingQueue queue>;

        r24 = virtualinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r5 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r1 = (org.apache.mahout.common.Pair) $r5;

        $r6 = r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: org.apache.mahout.clustering.lda.cvb.TopicModel this$0>;

        $r7 = virtualinvoke r1.<org.apache.mahout.common.Pair: java.lang.Object getFirst()>();

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = virtualinvoke r1.<org.apache.mahout.common.Pair: java.lang.Object getSecond()>();

        $r10 = (org.apache.mahout.math.Vector) $r9;

        virtualinvoke $r6.<org.apache.mahout.clustering.lda.cvb.TopicModel: void updateTopic(int,org.apache.mahout.math.Vector)>($i0, $r10);

        goto label06;

     label07:
        entermonitor r0;

     label08:
        r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: boolean shutdownComplete> = 1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label09:
        goto label12;

     label10:
        $r19 := @caughtexception;

        exitmonitor r0;

     label11:
        throw $r19;

     label12:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    void <init>(org.apache.mahout.clustering.lda.cvb.TopicModel, org.apache.mahout.clustering.lda.cvb.TopicModel$1)
    {
        org.apache.mahout.clustering.lda.cvb.TopicModel$Updater r0;
        org.apache.mahout.clustering.lda.cvb.TopicModel r1;
        org.apache.mahout.clustering.lda.cvb.TopicModel$1 r2;

        r0 := @this: org.apache.mahout.clustering.lda.cvb.TopicModel$Updater;

        r1 := @parameter0: org.apache.mahout.clustering.lda.cvb.TopicModel;

        r2 := @parameter1: org.apache.mahout.clustering.lda.cvb.TopicModel$1;

        specialinvoke r0.<org.apache.mahout.clustering.lda.cvb.TopicModel$Updater: void <init>(org.apache.mahout.clustering.lda.cvb.TopicModel)>(r1);

        return;
    }
}
