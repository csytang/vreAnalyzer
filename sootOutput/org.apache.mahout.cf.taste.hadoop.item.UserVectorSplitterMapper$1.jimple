class org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1 extends org.apache.lucene.util.PriorityQueue
{
    final org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper this$0;

    void <init>(org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper, int)
    {
        org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1 r0;
        org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper r1;
        int i0;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1;

        r1 := @parameter0: org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper;

        i0 := @parameter1: int;

        r0.<org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1: org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper this$0> = r1;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void <init>(int)>(i0);

        return;
    }

    protected boolean lessThan(java.lang.Float, java.lang.Float)
    {
        org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1 r0;
        java.lang.Float r1, r2;
        float $f0, $f1;
        byte $b0;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1;

        r1 := @parameter0: java.lang.Float;

        r2 := @parameter1: java.lang.Float;

        $f0 = virtualinvoke r1.<java.lang.Float: float floatValue()>();

        $f1 = virtualinvoke r2.<java.lang.Float: float floatValue()>();

        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected volatile boolean lessThan(java.lang.Object, java.lang.Object)
    {
        org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1 r0;
        java.lang.Object r1, r2;
        java.lang.Float $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Float) r1;

        $r3 = (java.lang.Float) r2;

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.item.UserVectorSplitterMapper$1: boolean lessThan(java.lang.Float,java.lang.Float)>($r4, $r3);

        return $z0;
    }
}
