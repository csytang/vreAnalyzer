public class org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable outKey;
    private final java.util.Deque closeables;
    private org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput;
    private org.apache.mahout.math.Vector[] aCols;
    private double[][] yiCols;
    private int aRowCount;
    private int kp;
    private int blockHeight;
    private boolean distributedBt;
    private org.apache.hadoop.fs.Path[] btLocalPath;
    private org.apache.hadoop.conf.Configuration localFsConfig;
    protected org.apache.mahout.math.Vector xi;
    protected org.apache.mahout.math.Vector sq;

    public void <init>()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper r0;
        java.util.ArrayDeque $r1;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        $r1 = new java.util.ArrayDeque;

        specialinvoke $r1.<java.util.ArrayDeque: void <init>()>();

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: java.util.Deque closeables> = $r1;

        return;
    }

    protected void map(org.apache.hadoop.io.Writable, org.apache.mahout.math.VectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper r0;
        org.apache.hadoop.io.Writable r1;
        org.apache.mahout.math.VectorWritable r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.Vector r4, $r11, $r13;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        org.apache.mahout.math.Vector$Element r5;
        org.apache.mahout.math.Vector[] $r6, $r7, $r10, $r12, $r14, $r15, $r17;
        java.lang.Iterable $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        double $d0, $d1;
        java.lang.Object[] $r16;
        java.util.Iterator r18;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper;

        r1 := @parameter0: org.apache.hadoop.io.Writable;

        r2 := @parameter1: org.apache.mahout.math.VectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        r4 = virtualinvoke r2.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        i0 = interfaceinvoke r4.<org.apache.mahout.math.Vector: int size()>();

        $r6 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        if $r6 != null goto label1;

        $r17 = newarray (org.apache.mahout.math.Vector)[i0];

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols> = $r17;

        goto label2;

     label1:
        $r7 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $i2 = lengthof $r7;

        if $i2 >= i0 goto label2;

        $r15 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r16 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r15, i0);

        $r14 = (org.apache.mahout.math.Vector[]) $r16;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols> = $r14;

     label2:
        $z1 = interfaceinvoke r4.<org.apache.mahout.math.Vector: boolean isDense()>();

        if $z1 == 0 goto label4;

        i10 = 0;

     label3:
        if i10 >= i0 goto label6;

        $i7 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $i8 = $i7 + 1;

        specialinvoke r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: void extendAColIfNeeded(int,int)>(i10, $i8);

        $r12 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r13 = $r12[i10];

        $i9 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $d1 = interfaceinvoke r4.<org.apache.mahout.math.Vector: double getQuick(int)>(i10);

        interfaceinvoke $r13.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i9, $d1);

        i10 = i10 + 1;

        goto label3;

     label4:
        $i3 = interfaceinvoke r4.<org.apache.mahout.math.Vector: int size()>();

        if $i3 <= 0 goto label6;

        $r8 = interfaceinvoke r4.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r18 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.mahout.math.Vector$Element) $r9;

        i1 = interfaceinvoke r5.<org.apache.mahout.math.Vector$Element: int index()>();

        $i4 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $i5 = $i4 + 1;

        specialinvoke r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: void extendAColIfNeeded(int,int)>(i1, $i5);

        $r10 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r11 = $r10[i1];

        $i6 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $d0 = interfaceinvoke r5.<org.apache.mahout.math.Vector$Element: double get()>();

        interfaceinvoke $r11.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i6, $d0);

        goto label5;

     label6:
        $i11 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $i12 = $i11 + 1;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount> = $i12;

        return;
    }

    private void extendAColIfNeeded(int, int)
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10;
        org.apache.mahout.math.Vector[] $r2, $r4, $r7, $r10, $r11, $r16, $r17;
        org.apache.mahout.math.Vector $r3, $r5, $r8, $r9, $r12, $r14;
        org.apache.mahout.math.SequentialAccessSparseVector $r6, $r15;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r3 = $r2[i0];

        if $r3 != null goto label3;

        $r17 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r15 = new org.apache.mahout.math.SequentialAccessSparseVector;

        $i8 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        if i1 >= $i8 goto label1;

        $i10 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        goto label2;

     label1:
        $i10 = i1;

     label2:
        specialinvoke $r15.<org.apache.mahout.math.SequentialAccessSparseVector: void <init>(int,int)>($i10, 1);

        $r17[i0] = $r15;

        goto label4;

     label3:
        $r4 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r5 = $r4[i0];

        $i2 = interfaceinvoke $r5.<org.apache.mahout.math.Vector: int size()>();

        if $i2 >= i1 goto label4;

        $r6 = new org.apache.mahout.math.SequentialAccessSparseVector;

        $i3 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        $i4 = i1 + $i3;

        $r7 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r8 = $r7[i0];

        $i5 = interfaceinvoke $r8.<org.apache.mahout.math.Vector: int getNumNondefaultElements()>();

        $i6 = $i5 << 1;

        specialinvoke $r6.<org.apache.mahout.math.SequentialAccessSparseVector: void <init>(int,int)>($i4, $i6);

        $r10 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r9 = $r10[i0];

        $i7 = interfaceinvoke $r9.<org.apache.mahout.math.Vector: int size()>();

        $r12 = interfaceinvoke $r6.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector viewPart(int,int)>(0, $i7);

        $r11 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r14 = $r11[i0];

        interfaceinvoke $r12.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector assign(org.apache.mahout.math.Vector)>($r14);

        $r16 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r16[i0] = $r6;

     label4:
        return;
    }

    protected void cleanup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        java.lang.String r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, i32, i33, i34, i35, i36, i37, i38;
        org.apache.mahout.math.Vector r5, $r36, $r40, $r46, $r47, $r48;
        java.util.Iterator r7;
        org.apache.mahout.math.Vector$Element r8;
        double[][] $r10, $r24, $r41, $r45, $r49, $r53, $r54, $r58;
        org.apache.hadoop.conf.Configuration $r11, $r21, $r55;
        java.lang.Object[] $r13, $r22;
        java.util.Deque $r14, $r20, $r25, $r59;
        boolean $z0, $z1, $z3, $z4;
        org.apache.hadoop.fs.Path $r15;
        org.apache.mahout.math.hadoop.stochasticsvd.DenseBlockWritable $r16;
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator $r17, $r19, $r23, $r26, $r29, $r32, $r51, $r61;
        org.apache.mahout.common.iterator.sequencefile.PathType $r18;
        long $l13;
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable $r27, $r28;
        java.lang.Object $r30, $r33, $r34, $r42;
        org.apache.mahout.math.VectorWritable $r31;
        org.apache.hadoop.io.IntWritable $r35;
        java.lang.Iterable $r37;
        org.apache.mahout.math.Vector[] $r38, $r39;
        double $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14;
        double[] $r43, $r44, $r50, $r52, $r57;
        org.apache.hadoop.fs.Path[] $r56;
        java.lang.Throwable $r60;
        org.apache.mahout.common.Pair r62;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

     label01:
        $i3 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp>;

        $r10 = newarray (double[])[$i3];

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols> = $r10;

        i29 = 0;

     label02:
        $i4 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp>;

        if i29 >= $i4 goto label03;

        $r58 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols>;

        $i27 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $i26 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        $i28 = staticinvoke <java.lang.Math: int min(int,int)>($i27, $i26);

        $r57 = newarray (double)[$i28];

        $r58[i29] = $r57;

        i29 = i29 + 1;

        goto label02;

     label03:
        $i6 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $i8 = $i6 - 1;

        $i5 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        $i7 = $i8 / $i5;

        i30 = $i7 + 1;

        $r11 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        r2 = virtualinvoke $r11.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvd.Bt.path");

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(r2, "Bt input is not set", $r13);

        $r15 = new org.apache.hadoop.fs.Path;

        specialinvoke $r15.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r2);

        $r16 = new org.apache.mahout.math.hadoop.stochasticsvd.DenseBlockWritable;

        specialinvoke $r16.<org.apache.mahout.math.hadoop.stochasticsvd.DenseBlockWritable: void <init>()>();

        i31 = -1;

        i32 = 0;

     label04:
        if i32 >= i30 goto label24;

        $z0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: boolean distributedBt>;

        if $z0 == 0 goto label05;

        $r51 = new org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator;

        $r56 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.hadoop.fs.Path[] btLocalPath>;

        $r55 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.hadoop.conf.Configuration localFsConfig>;

        specialinvoke $r51.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator: void <init>(org.apache.hadoop.fs.Path[],boolean,org.apache.hadoop.conf.Configuration)>($r56, 1, $r55);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput> = $r51;

        goto label06;

     label05:
        $r17 = new org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator;

        $r18 = <org.apache.mahout.common.iterator.sequencefile.PathType: org.apache.mahout.common.iterator.sequencefile.PathType GLOB>;

        $r21 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        specialinvoke $r17.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator: void <init>(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,java.util.Comparator,boolean,org.apache.hadoop.conf.Configuration)>($r15, $r18, null, null, 1, $r21);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput> = $r17;

     label06:
        $r20 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: java.util.Deque closeables>;

        $r19 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput>;

        interfaceinvoke $r20.<java.util.Deque: void addFirst(java.lang.Object)>($r19);

        $r23 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput>;

        $z1 = virtualinvoke $r23.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator: boolean hasNext()>();

        $r22 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z1, "Empty B\' input!", $r22);

        $i9 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        i0 = i32 * $i9;

        $i10 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        $i12 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int aRowCount>;

        $i11 = $i12 - i0;

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i11);

        if i32 <= 0 goto label12;

        $i24 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight>;

        if i1 != $i24 goto label08;

        i33 = 0;

     label07:
        $i22 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp>;

        if i33 >= $i22 goto label12;

        $r49 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols>;

        $r50 = $r49[i33];

        staticinvoke <java.util.Arrays: void fill(double[],double)>($r50, 0.0);

        i33 = i33 + 1;

        goto label07;

     label08:
        i34 = 0;

     label09:
        $i23 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp>;

        if i34 >= $i23 goto label10;

        $r54 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols>;

        $r54[i34] = null;

        i34 = i34 + 1;

        goto label09;

     label10:
        i35 = 0;

     label11:
        $i25 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp>;

        if i35 >= $i25 goto label12;

        $r53 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols>;

        $r52 = newarray (double)[i1];

        $r53[i35] = $r52;

        i35 = i35 + 1;

        goto label11;

     label12:
        $r61 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput>;

        $z3 = virtualinvoke $r61.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator: boolean hasNext()>();

        if $z3 == 0 goto label23;

        $r32 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput>;

        $r33 = virtualinvoke $r32.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator: java.lang.Object next()>();

        r62 = (org.apache.mahout.common.Pair) $r33;

        $r34 = virtualinvoke r62.<org.apache.mahout.common.Pair: java.lang.Object getFirst()>();

        $r35 = (org.apache.hadoop.io.IntWritable) $r34;

        i2 = virtualinvoke $r35.<org.apache.hadoop.io.IntWritable: int get()>();

        $r30 = virtualinvoke r62.<org.apache.mahout.common.Pair: java.lang.Object getSecond()>();

        $r31 = (org.apache.mahout.math.VectorWritable) $r30;

        r5 = virtualinvoke $r31.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $r38 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $i15 = lengthof $r38;

        if i2 > $i15 goto label12;

        $r39 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector[] aCols>;

        $r36 = $r39[i2];

        if $r36 == null goto label12;

        $i14 = interfaceinvoke $r36.<org.apache.mahout.math.Vector: int size()>();

        if $i14 != 0 goto label13;

        goto label12;

     label13:
        i36 = -1;

        $r37 = interfaceinvoke $r36.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r7 = interfaceinvoke $r37.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label22;

        $r42 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.mahout.math.Vector$Element) $r42;

        i36 = interfaceinvoke r8.<org.apache.mahout.math.Vector$Element: int index()>();

        if i36 >= i0 goto label15;

        goto label14;

     label15:
        $i17 = i0 + i1;

        if i36 < $i17 goto label16;

        goto label22;

     label16:
        $r40 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector xi>;

        if $r40 == null goto label20;

        i37 = 0;

     label17:
        $i21 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp>;

        if i37 >= $i21 goto label14;

        $r46 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector xi>;

        $i20 = interfaceinvoke $r46.<org.apache.mahout.math.Vector: int size()>();

        if $i20 <= i2 goto label18;

        $r48 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector xi>;

        $d14 = interfaceinvoke $r48.<org.apache.mahout.math.Vector: double get(int)>(i2);

        goto label19;

     label18:
        $d14 = 0.0;

     label19:
        $r45 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols>;

        $r44 = $r45[i37];

        $i19 = i36 - i0;

        $d6 = $r44[$i19];

        $d12 = interfaceinvoke r8.<org.apache.mahout.math.Vector$Element: double get()>();

        $d13 = interfaceinvoke r5.<org.apache.mahout.math.Vector: double getQuick(int)>(i37);

        $r47 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector sq>;

        $d11 = interfaceinvoke $r47.<org.apache.mahout.math.Vector: double get(int)>(i37);

        $d9 = $d14 * $d11;

        $d10 = $d13 - $d9;

        $d7 = $d12 * $d10;

        $d8 = $d6 + $d7;

        $r44[$i19] = $d8;

        i37 = i37 + 1;

        goto label17;

     label20:
        i38 = 0;

     label21:
        $i16 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp>;

        if i38 >= $i16 goto label14;

        $r41 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols>;

        $r43 = $r41[i38];

        $i18 = i36 - i0;

        $d5 = $r43[$i18];

        $d4 = interfaceinvoke r8.<org.apache.mahout.math.Vector$Element: double get()>();

        $d2 = interfaceinvoke r5.<org.apache.mahout.math.Vector: double getQuick(int)>(i38);

        $d1 = $d4 * $d2;

        $d3 = $d5 + $d1;

        $r43[$i18] = $d3;

        i38 = i38 + 1;

        goto label21;

     label22:
        if i31 >= i36 goto label12;

        i31 = i36;

        goto label12;

     label23:
        $r24 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: double[][] yiCols>;

        virtualinvoke $r16.<org.apache.mahout.math.hadoop.stochasticsvd.DenseBlockWritable: void setBlock(double[][])>($r24);

        $r28 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable outKey>;

        $l13 = (long) i32;

        virtualinvoke $r28.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: void setTaskItemOrdinal(long)>($l13);

        $r27 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable outKey>;

        virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r27, $r16);

        $r25 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: java.util.Deque closeables>;

        $r26 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput>;

        interfaceinvoke $r25.<java.util.Deque: boolean remove(java.lang.Object)>($r26);

        $r29 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator btInput>;

        virtualinvoke $r29.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterator: void close()>();

        i32 = i32 + 1;

        goto label04;

     label24:
        $r14 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: java.util.Deque closeables>;

        staticinvoke <org.apache.mahout.common.IOUtils: void close(java.util.Collection)>($r14);

        goto label27;

     label25:
        $r60 := @caughtexception;

     label26:
        $r59 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: java.util.Deque closeables>;

        staticinvoke <org.apache.mahout.common.IOUtils: void close(java.util.Collection)>($r59);

        throw $r60;

     label27:
        return;

        catch java.lang.Throwable from label01 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration r2, $r13, $r15;
        int i0, i1, $i2, $i3;
        java.lang.String r3, $r4, $r5, $r7, $r12;
        org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable $r6;
        boolean $z0, $z1;
        org.apache.hadoop.fs.Path $r8, $r9;
        org.apache.mahout.math.Vector $r10, $r11;
        org.apache.hadoop.fs.Path[] $r14;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r4 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvd.k");

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $r5 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvd.p");

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $i2 = i0 + i1;

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int kp> = $i2;

        $r6 = new org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable;

        specialinvoke $r6.<org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable: void <init>(org.apache.hadoop.mapreduce.Mapper$Context)>(r1);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.hadoop.stochasticsvd.SplitPartitionedWritable outKey> = $r6;

        $i3 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("ssvd.outerProdBlockHeight", -1);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: int blockHeight> = $i3;

        $r7 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvd.Bt.broadcast");

        if $r7 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: boolean distributedBt> = $z1;

        $z0 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: boolean distributedBt>;

        if $z0 == 0 goto label3;

        $r14 = staticinvoke <org.apache.mahout.common.HadoopUtil: org.apache.hadoop.fs.Path[] getCachedFiles(org.apache.hadoop.conf.Configuration)>(r2);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.hadoop.fs.Path[] btLocalPath> = $r14;

        $r13 = new org.apache.hadoop.conf.Configuration;

        specialinvoke $r13.<org.apache.hadoop.conf.Configuration: void <init>()>();

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.hadoop.conf.Configuration localFsConfig> = $r13;

        $r15 = r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.hadoop.conf.Configuration localFsConfig>;

        virtualinvoke $r15.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("fs.default.name", "file:///");

     label3:
        r3 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvdpca.xi.path");

        if r3 == null goto label4;

        $r8 = new org.apache.hadoop.fs.Path;

        specialinvoke $r8.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r3);

        $r10 = staticinvoke <org.apache.mahout.math.hadoop.stochasticsvd.SSVDHelper: org.apache.mahout.math.Vector loadAndSumUpVectors(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r8, r2);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector xi> = $r10;

        $r9 = new org.apache.hadoop.fs.Path;

        $r12 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("ssvdpca.sq.path");

        specialinvoke $r9.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12);

        $r11 = staticinvoke <org.apache.mahout.math.hadoop.stochasticsvd.SSVDHelper: org.apache.mahout.math.Vector loadAndSumUpVectors(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r9, r2);

        r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: org.apache.mahout.math.Vector sq> = $r11;

     label4:
        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4;
        org.apache.hadoop.io.Writable $r5;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.Writable) r1;

        $r4 = (org.apache.mahout.math.VectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob$ABtMapper: void map(org.apache.hadoop.io.Writable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
