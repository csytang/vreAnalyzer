public final class org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob extends java.lang.Object
{
    public static final java.lang.String PROP_BT_PATH;
    public static final java.lang.String PROP_BT_BROADCAST;
    public static final java.lang.String PROP_SB_PATH;
    public static final java.lang.String PROP_SQ_PATH;
    public static final java.lang.String PROP_XI_PATH;

    private void <init>()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob r0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void run(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path[], org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, int, int, int, int, int, int, boolean) throws java.lang.ClassNotFoundException, java.lang.InterruptedException, java.io.IOException
    {
        org.apache.hadoop.conf.Configuration r0, $r15, $r17, $r18, $r19, $r20, $r23, $r27, $r28, $r30, $r31;
        org.apache.hadoop.fs.Path[] r1;
        org.apache.hadoop.fs.Path r2, r3, r4, r5, r6, $r25;
        int i0, i1, i2, i3, i4, i5, i6, i8;
        boolean z0, $z2;
        org.apache.hadoop.fs.FileStatus[] r9;
        org.apache.hadoop.fs.FileSystem r10;
        org.apache.hadoop.fs.FileStatus r12;
        org.apache.hadoop.mapreduce.Job $r13;
        org.apache.hadoop.mapred.JobConf $r14;
        org.apache.hadoop.io.SequenceFile$CompressionType $r16;
        java.lang.String $r21, $r29, $r32, $r33;
        java.io.IOException $r22;
        java.net.URI $r24, $r26;
        long $l7;

        r0 := @parameter0: org.apache.hadoop.conf.Configuration;

        r1 := @parameter1: org.apache.hadoop.fs.Path[];

        r2 := @parameter2: org.apache.hadoop.fs.Path;

        r3 := @parameter3: org.apache.hadoop.fs.Path;

        r4 := @parameter4: org.apache.hadoop.fs.Path;

        r5 := @parameter5: org.apache.hadoop.fs.Path;

        r6 := @parameter6: org.apache.hadoop.fs.Path;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        i2 := @parameter9: int;

        i3 := @parameter10: int;

        i4 := @parameter11: int;

        i5 := @parameter12: int;

        z0 := @parameter13: boolean;

        $r14 = new org.apache.hadoop.mapred.JobConf;

        specialinvoke $r14.<org.apache.hadoop.mapred.JobConf: void <init>(org.apache.hadoop.conf.Configuration)>(r0);

        $r13 = new org.apache.hadoop.mapreduce.Job;

        specialinvoke $r13.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration)>($r14);

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setJobName(java.lang.String)>("ABt-job");

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/ABtDenseOutJob");

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setInputFormatClass(java.lang.Class)>(class "org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFormat");

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path[])>($r13, r1);

        if i1 <= 0 goto label1;

        $l7 = (long) i1;

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void setMinInputSplitSize(org.apache.hadoop.mapreduce.Job,long)>($r13, $l7);

     label1:
        staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>($r13, r6);

        $r16 = <org.apache.hadoop.io.SequenceFile$CompressionType: org.apache.hadoop.io.SequenceFile$CompressionType BLOCK>;

        staticinvoke <org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat: void setOutputCompressionType(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.io.SequenceFile$CompressionType)>($r13, $r16);

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setMapOutputKeyClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/SplitPartitionedWritable");

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setMapOutputValueClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/DenseBlockWritable");

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/SplitPartitionedWritable");

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/mahout/math/VectorWritable");

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/ABtDenseOutJob$ABtMapper");

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/ABtDenseOutJob$QRReducer");

        $r15 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r15.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.arowblock.size", i0);

        $r18 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r18.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.outerProdBlockHeight", i4);

        $r17 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r17.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.k", i2);

        $r20 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r20.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.p", i3);

        $r19 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r21 = virtualinvoke r2.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        virtualinvoke $r19.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvd.Bt.path", $r21);

        if r3 == null goto label2;

        $r30 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r29 = virtualinvoke r3.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        virtualinvoke $r30.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvdpca.xi.path", $r29);

        $r28 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r32 = virtualinvoke r5.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        virtualinvoke $r28.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvdpca.sb.path", $r32);

        $r31 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r33 = virtualinvoke r4.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        virtualinvoke $r31.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvdpca.sq.path", $r33);

     label2:
        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void setNumReduceTasks(int)>(i5);

        if z0 == 0 goto label4;

        $r23 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r23.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvd.Bt.broadcast", "y");

        $r24 = virtualinvoke r2.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        r10 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>($r24, r0);

        r9 = virtualinvoke r10.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileStatus[] globStatus(org.apache.hadoop.fs.Path)>(r2);

        if r9 == null goto label4;

        i6 = lengthof r9;

        i8 = 0;

     label3:
        if i8 >= i6 goto label4;

        r12 = r9[i8];

        $r25 = virtualinvoke r12.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>();

        $r26 = virtualinvoke $r25.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        $r27 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        staticinvoke <org.apache.hadoop.filecache.DistributedCache: void addCacheFile(java.net.URI,org.apache.hadoop.conf.Configuration)>($r26, $r27);

        i8 = i8 + 1;

        goto label3;

     label4:
        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: void submit()>();

        virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(0);

        $z2 = virtualinvoke $r13.<org.apache.hadoop.mapreduce.Job: boolean isSuccessful()>();

        if $z2 != 0 goto label5;

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("ABt job unsuccessful.");

        throw $r22;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob: java.lang.String PROP_XI_PATH> = "ssvdpca.xi.path";

        <org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob: java.lang.String PROP_SQ_PATH> = "ssvdpca.sq.path";

        <org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob: java.lang.String PROP_SB_PATH> = "ssvdpca.sb.path";

        <org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob: java.lang.String PROP_BT_BROADCAST> = "ssvd.Bt.broadcast";

        <org.apache.mahout.math.hadoop.stochasticsvd.ABtDenseOutJob: java.lang.String PROP_BT_PATH> = "ssvd.Bt.path";

        return;
    }
}
