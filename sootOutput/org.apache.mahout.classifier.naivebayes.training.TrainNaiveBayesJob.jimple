public final class org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob extends org.apache.mahout.common.AbstractJob
{
    private static final java.lang.String TRAIN_COMPLEMENTARY;
    private static final java.lang.String ALPHA_I;
    private static final java.lang.String LABEL_INDEX;
    public static final java.lang.String WEIGHTS_PER_FEATURE;
    public static final java.lang.String WEIGHTS_PER_LABEL;
    public static final java.lang.String LABEL_THETA_NORMALIZER;
    public static final java.lang.String SUMMED_OBSERVATIONS;
    public static final java.lang.String WEIGHTS;
    public static final java.lang.String THETAS;

    public void <init>()
    {
        org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob r0;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob;

        specialinvoke r0.<org.apache.mahout.common.AbstractJob: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        org.apache.hadoop.conf.Configuration $r1;
        org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob $r2;

        r0 := @parameter0: java.lang.String[];

        $r1 = new org.apache.hadoop.conf.Configuration;

        specialinvoke $r1.<org.apache.hadoop.conf.Configuration: void <init>()>();

        $r2 = new org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob;

        specialinvoke $r2.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: void <init>()>();

        staticinvoke <org.apache.hadoop.util.ToolRunner: int run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String[])>($r1, $r2, r0);

        return;
    }

    public int run(java.lang.String[]) throws java.lang.Exception
    {
        org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob r0;
        java.lang.String[] r1;
        java.util.Map r2;
        java.lang.String r3, $r6, $r8, $r13, $r20, $r21, $r27, $r37, $r39;
        long l0;
        float f0;
        boolean z0, $z1, z2, z3, z4;
        org.apache.hadoop.mapreduce.Job r4, r5, r48;
        org.apache.commons.cli2.Option $r7;
        org.apache.commons.cli2.builder.DefaultOptionBuilder $r9;
        org.apache.commons.cli2.option.DefaultOption $r12;
        org.apache.hadoop.fs.Path $r14, $r15, $r18, $r19, $r23, $r25, $r30, $r32, $r33, $r34, $r40, $r42, $r45, r47;
        org.apache.hadoop.conf.Configuration $r16, $r17, $r22, $r24, $r26, $r28, $r29, $r31, $r35, $r36, $r38, $r41, $r44;
        org.apache.hadoop.fs.Path[] $r43, $r46;
        org.apache.mahout.classifier.naivebayes.NaiveBayesModel r49;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob;

        r1 := @parameter0: java.lang.String[];

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: void addInputOption()>();

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: void addOutputOption()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(1.0F);

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: void addOption(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("alphaI", "a", "smoothing parameter", $r6);

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(0);

        $r7 = staticinvoke <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.commons.cli2.Option buildOption(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)>("trainComplementary", "c", "train complementary?", 0, 0, $r8);

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.commons.cli2.Option addOption(org.apache.commons.cli2.Option)>($r7);

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: void addOption(java.lang.String,java.lang.String,java.lang.String,boolean)>("labelIndex", "li", "The path to store the label index in", 0);

        $r9 = staticinvoke <org.apache.mahout.common.commandline.DefaultOptionCreator: org.apache.commons.cli2.builder.DefaultOptionBuilder overwriteOption()>();

        $r12 = virtualinvoke $r9.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.commons.cli2.Option addOption(org.apache.commons.cli2.Option)>($r12);

        r2 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.util.Map parseArguments(java.lang.String[])>(r1);

        if r2 != null goto label1;

        return -1;

     label1:
        $z1 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: boolean hasOption(java.lang.String)>("overwrite");

        if $z1 == 0 goto label2;

        $r41 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        $r46 = newarray (org.apache.hadoop.fs.Path)[1];

        $r45 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getOutputPath()>();

        $r46[0] = $r45;

        staticinvoke <org.apache.mahout.common.HadoopUtil: void delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path[])>($r41, $r46);

        $r44 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        $r43 = newarray (org.apache.hadoop.fs.Path)[1];

        $r42 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath()>();

        $r43[0] = $r42;

        staticinvoke <org.apache.mahout.common.HadoopUtil: void delete(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path[])>($r44, $r43);

     label2:
        r3 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String getOption(java.lang.String)>("labelIndex");

        if r3 == null goto label3;

        $r40 = new org.apache.hadoop.fs.Path;

        specialinvoke $r40.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r3);

        r47 = $r40;

        goto label4;

     label3:
        r47 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("labelIndex");

     label4:
        l0 = specialinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: long createLabelIndex(org.apache.hadoop.fs.Path)>(r47);

        $r13 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String getOption(java.lang.String)>("alphaI");

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r13);

        z0 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: boolean hasOption(java.lang.String)>("trainComplementary");

        $r16 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        staticinvoke <org.apache.mahout.common.HadoopUtil: void setSerializations(org.apache.hadoop.conf.Configuration)>($r16);

        $r17 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        staticinvoke <org.apache.mahout.common.HadoopUtil: void cacheFiles(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>(r47, $r17);

        $r14 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getInputPath()>();

        $r15 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("summedObservations");

        r4 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.mapreduce.Job prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)>($r14, $r15, class "org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFormat", class "org/apache/mahout/classifier/naivebayes/training/IndexInstancesMapper", class "org/apache/hadoop/io/IntWritable", class "org/apache/mahout/math/VectorWritable", class "org/apache/mahout/common/mapreduce/VectorSumReducer", class "org/apache/hadoop/io/IntWritable", class "org/apache/mahout/math/VectorWritable", class "org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "org/apache/mahout/common/mapreduce/VectorSumReducer");

        z2 = virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1);

        if z2 != 0 goto label5;

        return -1;

     label5:
        $r18 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("summedObservations");

        $r19 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("weights");

        r5 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.mapreduce.Job prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)>($r18, $r19, class "org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFormat", class "org/apache/mahout/classifier/naivebayes/training/WeightsMapper", class "org/apache/hadoop/io/Text", class "org/apache/mahout/math/VectorWritable", class "org/apache/mahout/common/mapreduce/VectorSumReducer", class "org/apache/hadoop/io/Text", class "org/apache/mahout/math/VectorWritable", class "org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat");

        $r22 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r20 = <org.apache.mahout.classifier.naivebayes.training.WeightsMapper: java.lang.String NUM_LABELS>;

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke $r22.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>($r20, $r21);

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "org/apache/mahout/common/mapreduce/VectorSumReducer");

        z3 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1);

        if z3 != 0 goto label6;

        return -1;

     label6:
        $r25 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("weights");

        $r24 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        staticinvoke <org.apache.mahout.common.HadoopUtil: void cacheFiles(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r25, $r24);

        if z0 == 0 goto label7;

        $r34 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("summedObservations");

        $r33 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("thetas");

        r48 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.mapreduce.Job prepareJob(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)>($r34, $r33, class "org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFormat", class "org/apache/mahout/classifier/naivebayes/training/ThetaMapper", class "org/apache/hadoop/io/Text", class "org/apache/mahout/math/VectorWritable", class "org/apache/mahout/common/mapreduce/VectorSumReducer", class "org/apache/hadoop/io/Text", class "org/apache/mahout/math/VectorWritable", class "org/apache/hadoop/mapreduce/lib/output/SequenceFileOutputFormat");

        virtualinvoke r48.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "org/apache/mahout/common/mapreduce/VectorSumReducer");

        $r36 = virtualinvoke r48.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r37 = <org.apache.mahout.classifier.naivebayes.training.ThetaMapper: java.lang.String ALPHA_I>;

        virtualinvoke $r36.<org.apache.hadoop.conf.Configuration: void setFloat(java.lang.String,float)>($r37, f0);

        $r38 = virtualinvoke r48.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r39 = <org.apache.mahout.classifier.naivebayes.training.ThetaMapper: java.lang.String TRAIN_COMPLEMENTARY>;

        virtualinvoke $r38.<org.apache.hadoop.conf.Configuration: void setBoolean(java.lang.String,boolean)>($r39, z0);

        z4 = virtualinvoke r48.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1);

        if z4 != 0 goto label7;

        return -1;

     label7:
        $r23 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath(java.lang.String)>("thetas");

        $r29 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        staticinvoke <org.apache.mahout.common.HadoopUtil: void cacheFiles(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r23, $r29);

        $r28 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        $r27 = <org.apache.mahout.classifier.naivebayes.training.ThetaMapper: java.lang.String ALPHA_I>;

        virtualinvoke $r28.<org.apache.hadoop.conf.Configuration: void setFloat(java.lang.String,float)>($r27, f0);

        $r26 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        virtualinvoke $r26.<org.apache.hadoop.conf.Configuration: void setBoolean(java.lang.String,boolean)>("COMPLEMENTARY_MODEL", z0);

        $r32 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getTempPath()>();

        $r31 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        r49 = staticinvoke <org.apache.mahout.classifier.naivebayes.BayesUtils: org.apache.mahout.classifier.naivebayes.NaiveBayesModel readModelFromDir(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r32, $r31);

        virtualinvoke r49.<org.apache.mahout.classifier.naivebayes.NaiveBayesModel: void validate()>();

        $r30 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getOutputPath()>();

        $r35 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        virtualinvoke r49.<org.apache.mahout.classifier.naivebayes.NaiveBayesModel: void serialize(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r30, $r35);

        return 0;
    }

    private long createLabelIndex(org.apache.hadoop.fs.Path) throws java.io.IOException
    {
        org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob r0;
        org.apache.hadoop.fs.Path r1, $r4;
        org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable $r3;
        org.apache.mahout.common.iterator.sequencefile.PathType $r5;
        org.apache.hadoop.fs.PathFilter $r6;
        org.apache.hadoop.conf.Configuration $r7, $r8;
        int $i0;
        long l2;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob;

        r1 := @parameter0: org.apache.hadoop.fs.Path;

        $r3 = new org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable;

        $r4 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.fs.Path getInputPath()>();

        $r5 = <org.apache.mahout.common.iterator.sequencefile.PathType: org.apache.mahout.common.iterator.sequencefile.PathType LIST>;

        $r6 = staticinvoke <org.apache.mahout.common.iterator.sequencefile.PathFilters: org.apache.hadoop.fs.PathFilter logsCRCFilter()>();

        $r7 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        specialinvoke $r3.<org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable: void <init>(org.apache.hadoop.fs.Path,org.apache.mahout.common.iterator.sequencefile.PathType,org.apache.hadoop.fs.PathFilter,org.apache.hadoop.conf.Configuration)>($r4, $r5, $r6, $r7);

        $r8 = virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: org.apache.hadoop.conf.Configuration getConf()>();

        $i0 = staticinvoke <org.apache.mahout.classifier.naivebayes.BayesUtils: int writeLabelIndex(org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Iterable)>($r8, r1, $r3);

        l2 = (long) $i0;

        return l2;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String THETAS> = "thetas";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String WEIGHTS> = "weights";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String SUMMED_OBSERVATIONS> = "summedObservations";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String LABEL_THETA_NORMALIZER> = "_LTN";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String WEIGHTS_PER_LABEL> = "__SPL";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String WEIGHTS_PER_FEATURE> = "__SPF";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String LABEL_INDEX> = "labelIndex";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String ALPHA_I> = "alphaI";

        <org.apache.mahout.classifier.naivebayes.training.TrainNaiveBayesJob: java.lang.String TRAIN_COMPLEMENTARY> = "trainComplementary";

        return;
    }
}
