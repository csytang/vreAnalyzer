class org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1 extends java.lang.Object implements org.apache.mahout.ep.EvolutionaryProcess$Function
{
    final org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression this$0;

    void <init>(org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression)
    {
        org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1 r0;
        org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression r1;

        r0 := @this: org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1;

        r1 := @parameter0: org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression;

        r0.<org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1: org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double apply(org.apache.mahout.ep.Payload, double[])
    {
        org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1 r0;
        org.apache.mahout.ep.Payload r1;
        double[] r2;
        org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper r3;
        java.util.Iterator r4;
        org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$TrainingExample r5;
        org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression $r6;
        java.util.List $r7;
        boolean $z0, $z1;
        org.apache.mahout.classifier.sgd.CrossFoldLearner $r8, $r9, $r10, $r11;
        int $i0;
        double $d0, $d1;
        java.lang.Object $r12;

        r0 := @this: org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1;

        r1 := @parameter0: org.apache.mahout.ep.Payload;

        r2 := @parameter1: double[];

        r3 = (org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper) r1;

        $r6 = r0.<org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1: org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression this$0>;

        $r7 = staticinvoke <org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression: java.util.List access$000(org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression)>($r6);

        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$TrainingExample) $r12;

        virtualinvoke r3.<org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper: void train(org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$TrainingExample)>(r5);

        goto label1;

     label2:
        $r8 = virtualinvoke r3.<org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper: org.apache.mahout.classifier.sgd.CrossFoldLearner getLearner()>();

        $z1 = virtualinvoke $r8.<org.apache.mahout.classifier.sgd.CrossFoldLearner: boolean validModel()>();

        if $z1 == 0 goto label4;

        $r9 = virtualinvoke r3.<org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper: org.apache.mahout.classifier.sgd.CrossFoldLearner getLearner()>();

        $i0 = virtualinvoke $r9.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numCategories()>();

        if $i0 != 2 goto label3;

        $r11 = staticinvoke <org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper: org.apache.mahout.classifier.sgd.CrossFoldLearner access$100(org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper)>(r3);

        $d1 = virtualinvoke $r11.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double auc()>();

        return $d1;

     label3:
        $r10 = staticinvoke <org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper: org.apache.mahout.classifier.sgd.CrossFoldLearner access$100(org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$Wrapper)>(r3);

        $d0 = virtualinvoke $r10.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood()>();

        return $d0;

     label4:
        return #NaN;
    }

    public volatile double apply(java.lang.Object, double[])
    {
        org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1 r0;
        java.lang.Object r1;
        double[] r2;
        org.apache.mahout.ep.Payload $r3;
        double $d0;

        r0 := @this: org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: double[];

        $r3 = (org.apache.mahout.ep.Payload) r1;

        $d0 = virtualinvoke r0.<org.apache.mahout.classifier.sgd.AdaptiveLogisticRegression$1: double apply(org.apache.mahout.ep.Payload,double[])>($r3, r2);

        return $d0;
    }
}
