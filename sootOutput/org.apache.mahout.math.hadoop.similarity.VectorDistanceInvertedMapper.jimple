public final class org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private org.apache.mahout.common.distance.DistanceMeasure measure;
    private java.util.List seedVectors;

    public void <init>()
    {
        org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper r0;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        return;
    }

    protected void map(org.apache.hadoop.io.WritableComparable, org.apache.mahout.math.VectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper r0;
        org.apache.hadoop.io.WritableComparable r1;
        org.apache.mahout.math.VectorWritable r2, $r12;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.Vector r4;
        java.util.Iterator r6;
        org.apache.mahout.math.NamedVector r7, $r16;
        boolean $z0, $z1;
        org.apache.mahout.math.DenseVector $r8;
        java.util.List $r9, $r10;
        int $i0, $i1, i2;
        double[] $r11;
        org.apache.hadoop.io.Text $r13;
        java.lang.Object $r14;
        double $d0;
        org.apache.mahout.common.distance.DistanceMeasure $r15;
        java.lang.String r17;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper;

        r1 := @parameter0: org.apache.hadoop.io.WritableComparable;

        r2 := @parameter1: org.apache.mahout.math.VectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        r4 = virtualinvoke r2.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        $z0 = r4 instanceof org.apache.mahout.math.NamedVector;

        if $z0 == 0 goto label1;

        $r16 = (org.apache.mahout.math.NamedVector) r4;

        r17 = virtualinvoke $r16.<org.apache.mahout.math.NamedVector: java.lang.String getName()>();

        goto label2;

     label1:
        r17 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

     label2:
        $r8 = new org.apache.mahout.math.DenseVector;

        $r9 = r0.<org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper: java.util.List seedVectors>;

        $i0 = interfaceinvoke $r9.<java.util.List: int size()>();

        $r11 = newarray (double)[$i0];

        specialinvoke $r8.<org.apache.mahout.math.DenseVector: void <init>(double[])>($r11);

        i2 = 0;

        $r10 = r0.<org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper: java.util.List seedVectors>;

        r6 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.mahout.math.NamedVector) $r14;

        $i1 = i2;

        i2 = i2 + 1;

        $r15 = r0.<org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper: org.apache.mahout.common.distance.DistanceMeasure measure>;

        $d0 = interfaceinvoke $r15.<org.apache.mahout.common.distance.DistanceMeasure: double distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)>(r7, r4);

        interfaceinvoke $r8.<org.apache.mahout.math.Vector: void setQuick(int,double)>($i1, $d0);

        goto label3;

     label4:
        $r13 = new org.apache.hadoop.io.Text;

        specialinvoke $r13.<org.apache.hadoop.io.Text: void <init>(java.lang.String)>(r17);

        $r12 = new org.apache.mahout.math.VectorWritable;

        specialinvoke $r12.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>($r8);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r13, $r12);

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration r2;
        java.lang.String $r3;
        java.lang.Object $r4;
        org.apache.mahout.common.distance.DistanceMeasure $r5, $r6;
        java.util.List $r7;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void setup(org.apache.hadoop.mapreduce.Mapper$Context)>(r1);

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r3 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("vectorDistSim.measure");

        $r4 = staticinvoke <org.apache.mahout.common.ClassUtils: java.lang.Object instantiateAs(java.lang.String,java.lang.Class)>($r3, class "org/apache/mahout/common/distance/DistanceMeasure");

        $r5 = (org.apache.mahout.common.distance.DistanceMeasure) $r4;

        r0.<org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper: org.apache.mahout.common.distance.DistanceMeasure measure> = $r5;

        $r6 = r0.<org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper: org.apache.mahout.common.distance.DistanceMeasure measure>;

        interfaceinvoke $r6.<org.apache.mahout.common.distance.DistanceMeasure: void configure(org.apache.hadoop.conf.Configuration)>(r2);

        $r7 = staticinvoke <org.apache.mahout.math.hadoop.similarity.SeedVectorUtil: java.util.List loadSeedVectors(org.apache.hadoop.conf.Configuration)>(r2);

        r0.<org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper: java.util.List seedVectors> = $r7;

        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4;
        org.apache.hadoop.io.WritableComparable $r5;

        r0 := @this: org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.WritableComparable) r1;

        $r4 = (org.apache.mahout.math.VectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.math.hadoop.similarity.VectorDistanceInvertedMapper: void map(org.apache.hadoop.io.WritableComparable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
