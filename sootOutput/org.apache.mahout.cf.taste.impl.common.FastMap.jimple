public final class org.apache.mahout.cf.taste.impl.common.FastMap extends java.lang.Object implements java.util.Map, java.io.Serializable, java.lang.Cloneable
{
    public static final int NO_MAX_SIZE;
    private static final float DEFAULT_LOAD_FACTOR;
    private static final java.lang.Object REMOVED;
    private java.lang.Object[] keys;
    private java.lang.Object[] values;
    private float loadFactor;
    private int numEntries;
    private int numSlotsUsed;
    private final int maxSize;
    private org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed;
    private final boolean countingAccesses;

    public void <init>()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void <init>(int,int)>(2, 2147483647);

        return;
    }

    public void <init>(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void <init>(int,int)>(i0, 2147483647);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.util.Map r1;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.util.Map;

        $i0 = interfaceinvoke r1.<java.util.Map: int size()>();

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void <init>(int)>($i0);

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public void <init>(int, float)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int i0;
        float f0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void <init>(int,int,float)>(i0, 2147483647, f0);

        return;
    }

    public void <init>(int, int)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int i0, i1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void <init>(int,int,float)>(i0, i1, 1.5F);

        return;
    }

    public void <init>(int, int, float)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int i0, i1, i2, i3, $i5;
        float f0, $f1, $f2, $f3;
        byte $b4;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.lang.Object[] $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.mahout.cf.taste.impl.common.BitSet $r11;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 < 0 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "size must be at least 0");

        $b4 = f0 cmpl 1.0F;

        if $b4 < 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z2, "loadFactor must be at least 1.0");

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: float loadFactor> = f0;

        $f1 = 2.14748301E9F / f0;

        i2 = (int) $f1;

        if i0 >= i2 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size must be less than ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z3, $r4);

        if i1 < 1 goto label07;

        $z4 = 1;

        goto label08;

     label07:
        $z4 = 0;

     label08:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z4, "maxSize must be at least 1");

        $f2 = (float) i0;

        $f3 = f0 * $f2;

        $i5 = (int) $f3;

        i3 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i5);

        $r5 = newarray (java.lang.Object)[i3];

        $r7 = (java.lang.Object[]) $r5;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys> = $r7;

        $r6 = newarray (java.lang.Object)[i3];

        $r8 = (java.lang.Object[]) $r6;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values> = $r8;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int maxSize> = i1;

        if i1 == 2147483647 goto label09;

        $z5 = 1;

        goto label10;

     label09:
        $z5 = 0;

     label10:
        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean countingAccesses> = $z5;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean countingAccesses>;

        if $z0 == 0 goto label11;

        $r11 = new org.apache.mahout.cf.taste.impl.common.BitSet;

        specialinvoke $r11.<org.apache.mahout.cf.taste.impl.common.BitSet: void <init>(int)>(i3);

        goto label12;

     label11:
        $r11 = null;

     label12:
        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed> = $r11;

        return;
    }

    private int find(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8;
        java.lang.Object[] r2;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        $i3 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i0 = $i3 & 2147483647;

        r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        i1 = lengthof r2;

        $i4 = i1 - 2;

        $i5 = i0 % $i4;

        i2 = 1 + $i5;

        i7 = i0 % i1;

        r3 = r2[i7];

     label1:
        if r3 == null goto label4;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 != 0 goto label4;

        $i6 = i7;

        if i7 >= i2 goto label2;

        $i8 = i2 - i1;

        goto label3;

     label2:
        $i8 = i2;

     label3:
        i7 = $i6 - $i8;

        r3 = r2[i7];

        goto label1;

     label4:
        return i7;
    }

    private int findForAdd(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, $r3, r4, $r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12;
        java.lang.Object[] r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        $i4 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i0 = $i4 & 2147483647;

        r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        i1 = lengthof r2;

        $i5 = i1 - 2;

        $i6 = i0 % $i5;

        i2 = 1 + $i6;

        i9 = i0 % i1;

        r4 = r2[i9];

     label01:
        if r4 == null goto label04;

        $r3 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r4 == $r3 goto label04;

        if r1 == r4 goto label04;

        $i8 = i9;

        if i9 >= i2 goto label02;

        $i10 = i2 - i1;

        goto label03;

     label02:
        $i10 = i2;

     label03:
        i9 = $i8 - $i10;

        r4 = r2[i9];

        goto label01;

     label04:
        $r5 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r4 == $r5 goto label05;

        return i9;

     label05:
        i3 = i9;

     label06:
        if r4 == null goto label09;

        if r1 == r4 goto label09;

        $i7 = i9;

        if i9 >= i2 goto label07;

        $i11 = i2 - i1;

        goto label08;

     label07:
        $i11 = i2;

     label08:
        i9 = $i7 - $i11;

        r4 = r2[i9];

        goto label06;

     label09:
        if r1 != r4 goto label10;

        $i12 = i9;

        goto label11;

     label10:
        $i12 = i3;

     label11:
        return $i12;
    }

    public java.lang.Object get(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, $r3;
        int i0;
        boolean $z0;
        java.lang.Object[] $r2;
        org.apache.mahout.cf.taste.impl.common.BitSet $r4;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        i0 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int find(java.lang.Object)>(r1);

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean countingAccesses>;

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.BitSet: void set(int)>(i0);

     label2:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r3 = $r2[i0];

        return $r3;
    }

    public int size()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        return $i0;
    }

    public boolean isEmpty()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsKey(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, $r3;
        java.lang.Object[] $r2;
        int $i0;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $i0 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int find(java.lang.Object)>(r1);

        $r3 = $r2[$i0];

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, r3;
        java.lang.Object[] r2;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        if r3 == null goto label3;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, r2, r3, $r10;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.lang.Object[] $r6, $r7, $r8, $r9, $r11, $r12;
        byte $b3, $b8;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $i1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numSlotsUsed>;

        $f1 = (float) $i1;

        $f0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: float loadFactor>;

        $f3 = $f1 * $f0;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $i2 = lengthof $r6;

        $f2 = (float) $i2;

        $b3 = $f3 cmpl $f2;

        if $b3 < 0 goto label2;

        $i7 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        $f4 = (float) $i7;

        $f5 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: float loadFactor>;

        $f7 = $f4 * $f5;

        $i6 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numSlotsUsed>;

        $f6 = (float) $i6;

        $b8 = $f7 cmpl $f6;

        if $b8 < 0 goto label1;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void growAndRehash()>();

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void rehash()>();

     label2:
        i0 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int findForAdd(java.lang.Object)>(r1);

        $r9 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $r10 = $r9[i0];

        if $r10 != r1 goto label3;

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        r3 = $r7[i0];

        $r8 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r8[i0] = r2;

        return r3;

     label3:
        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean countingAccesses>;

        if $z0 == 0 goto label4;

        $i5 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        $i4 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int maxSize>;

        if $i5 < $i4 goto label4;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void clearStaleEntry(int)>(i0);

     label4:
        $r11 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $r11[i0] = r1;

        $r12 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r12[i0] = r2;

        $i9 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        $i10 = $i9 + 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries> = $i10;

        $i11 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numSlotsUsed>;

        $i12 = $i11 + 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numSlotsUsed> = $i12;

        return null;
    }

    private void clearStaleEntry(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, $r3, $r6;
        java.lang.Object[] $r2, $r5, $r7, $r8, $r10;
        org.apache.mahout.cf.taste.impl.common.BitSet $r4, $r9;
        boolean $z0;
        int $i0, $i1, $i2, i3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i3 := @parameter0: int;

     label1:
        if i3 != 0 goto label2;

        $r10 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $i2 = lengthof $r10;

        i3 = $i2 - 1;

        goto label3;

     label2:
        i3 = i3 + -1;

     label3:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        r1 = $r2[i3];

        if r1 == null goto label1;

        $r3 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r1 == $r3 goto label1;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        $z0 = virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.BitSet: boolean get(int)>(i3);

        if $z0 == 0 goto label4;

        $r9 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        virtualinvoke $r9.<org.apache.mahout.cf.taste.impl.common.BitSet: void clear(int)>(i3);

        goto label1;

     label4:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $r7 = (java.lang.Object[]) $r5;

        $r6 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        $r7[i3] = $r6;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        $i1 = $i0 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries> = $i1;

        $r8 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r8[i3] = null;

        return;
    }

    public void putAll(java.util.Map)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r1, r2, $r4, $r6;
        int i0, $i1, $i2;
        java.lang.Object[] $r3, $r5, $r7, $r8, $r9;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return null;

     label1:
        i0 = specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int find(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $r4 = $r3[i0];

        if $r4 != null goto label2;

        return null;

     label2:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $r7 = (java.lang.Object[]) $r5;

        $r6 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        $r7[i0] = $r6;

        $i1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        $i2 = $i1 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries> = $i2;

        $r8 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        r2 = $r8[i0];

        $r9 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r9[i0] = null;

        return r2;
    }

    public void clear()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object[] $r1, $r2;
        boolean $z0;
        org.apache.mahout.cf.taste.impl.common.BitSet $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries> = 0;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numSlotsUsed> = 0;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r1, null);

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>($r2, null);

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean countingAccesses>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed>;

        virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.BitSet: void clear()>();

     label1:
        return;
    }

    public java.util.Set keySet()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        org.apache.mahout.cf.taste.impl.common.FastMap$KeySet $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $r1 = new org.apache.mahout.cf.taste.impl.common.FastMap$KeySet;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastMap$KeySet: void <init>(org.apache.mahout.cf.taste.impl.common.FastMap,org.apache.mahout.cf.taste.impl.common.FastMap$1)>(r0, null);

        return $r1;
    }

    public java.util.Collection values()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        org.apache.mahout.cf.taste.impl.common.FastMap$ValueCollection $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $r1 = new org.apache.mahout.cf.taste.impl.common.FastMap$ValueCollection;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastMap$ValueCollection: void <init>(org.apache.mahout.cf.taste.impl.common.FastMap,org.apache.mahout.cf.taste.impl.common.FastMap$1)>(r0, null);

        return $r1;
    }

    public java.util.Set entrySet()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        org.apache.mahout.cf.taste.impl.common.FastMap$EntrySet $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $r1 = new org.apache.mahout.cf.taste.impl.common.FastMap$EntrySet;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.FastMap$EntrySet: void <init>(org.apache.mahout.cf.taste.impl.common.FastMap,org.apache.mahout.cf.taste.impl.common.FastMap$1)>(r0, null);

        return $r1;
    }

    public void rehash()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $f1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: float loadFactor>;

        $i0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        $f0 = (float) $i0;

        $f2 = $f1 * $f0;

        $i1 = (int) $f2;

        $i2 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i1);

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void rehash(int)>($i2);

        return;
    }

    private void growAndRehash()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object[] $r1, $r2;
        int $i0, $i2, $i3, $i4;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b1;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $i0 = lengthof $r1;

        $f1 = (float) $i0;

        $f0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: float loadFactor>;

        $f2 = $f1 * $f0;

        $b1 = $f2 cmpl 2.14748301E9F;

        if $b1 < 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t grow any more");

        throw $r3;

     label1:
        $f4 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: float loadFactor>;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $i2 = lengthof $r2;

        $f3 = (float) $i2;

        $f5 = $f4 * $f3;

        $i3 = (int) $f5;

        $i4 = staticinvoke <org.apache.mahout.common.RandomUtils: int nextTwinPrime(int)>($i3);

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: void rehash(int)>($i4);

        return;
    }

    private void rehash(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int i0, i1, i2;
        java.lang.Object[] r1, r2, $r4, $r5, $r6, $r7;
        java.lang.Object r3, $r8, $r9;
        boolean $z0;
        org.apache.mahout.cf.taste.impl.common.BitSet $r10;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i0 := @parameter0: int;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries> = 0;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numSlotsUsed> = 0;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean countingAccesses>;

        if $z0 == 0 goto label1;

        $r10 = new org.apache.mahout.cf.taste.impl.common.BitSet;

        specialinvoke $r10.<org.apache.mahout.cf.taste.impl.common.BitSet: void <init>(int)>(i0);

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed> = $r10;

     label1:
        $r4 = newarray (java.lang.Object)[i0];

        $r5 = (java.lang.Object[]) $r4;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys> = $r5;

        $r6 = newarray (java.lang.Object)[i0];

        $r7 = (java.lang.Object[]) $r6;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values> = $r7;

        i1 = lengthof r1;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r3 = r1[i2];

        if r3 == null goto label3;

        $r8 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r3 == $r8 goto label3;

        $r9 = r2[i2];

        virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r9);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    void iteratorRemove(int)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        int i0, $i1, $i2, $i3;
        java.lang.Object[] $r1, $r2, $r3, $r5;
        java.lang.Object $r4;
        java.lang.IllegalStateException $r6;
        java.util.NoSuchElementException $r7;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label1;

        $r7 = new java.util.NoSuchElementException;

        specialinvoke $r7.<java.util.NoSuchElementException: void <init>()>();

        throw $r7;

     label1:
        if i0 >= 0 goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label2:
        $r2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r2[i0] = null;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $r5 = (java.lang.Object[]) $r3;

        $r4 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        $r5[i0] = $r4;

        $i2 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries>;

        $i3 = $i2 - 1;

        r0.<org.apache.mahout.cf.taste.impl.common.FastMap: int numEntries> = $i3;

        return;
    }

    public org.apache.mahout.cf.taste.impl.common.FastMap clone()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0, r1;
        java.lang.Object $r3, $r5, $r8;
        java.lang.Object[] $r4, $r6, $r7, $r9, $r10;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r12;
        java.lang.CloneNotSupportedException $r13;
        org.apache.mahout.cf.taste.impl.common.BitSet $r14;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

     label1:
        $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.mahout.cf.taste.impl.common.FastMap) $r3;

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label4:
        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r6 = (java.lang.Object[]) $r5;

        r1.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys> = $r6;

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Object clone()>();

        $r9 = (java.lang.Object[]) $r8;

        r1.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values> = $r9;

        $z0 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean countingAccesses>;

        if $z0 == 0 goto label5;

        $r14 = new org.apache.mahout.cf.taste.impl.common.BitSet;

        $r10 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $i0 = lengthof $r10;

        specialinvoke $r14.<org.apache.mahout.cf.taste.impl.common.BitSet: void <init>(int)>($i0);

        goto label6;

     label5:
        $r14 = null;

     label6:
        r1.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.BitSet recentlyAccessed> = $r14;

        return r1;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public int hashCode()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object[] r1, $r4;
        int i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        java.lang.Object r2, $r3, $r5;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        i5 = 0;

        r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        i0 = lengthof r1;

        i6 = 0;

     label1:
        if i6 >= i0 goto label3;

        r2 = r1[i6];

        if r2 == null goto label2;

        $r3 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r2 == $r3 goto label2;

        $i1 = 31 * i5;

        $i2 = virtualinvoke r2.<java.lang.Object: int hashCode()>();

        i7 = $i1 + $i2;

        $i3 = 31 * i7;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r5 = $r4[i6];

        $i4 = virtualinvoke $r5.<java.lang.Object: int hashCode()>();

        i5 = $i3 + $i4;

     label2:
        i6 = i6 + 1;

        goto label1;

     label3:
        return i5;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0, r2;
        java.lang.Object r1, r5, $r8, $r10, $r11, $r12, $r13, $r15, r16, r17, r18;
        java.lang.Object[] r3, r4, $r6, $r7, $r9, $r14;
        int i0, i1, i2, i3;
        boolean $z0, $z1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.cf.taste.impl.common.FastMap;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (org.apache.mahout.cf.taste.impl.common.FastMap) r1;

        r3 = r2.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        r4 = r2.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r6 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        i0 = lengthof $r6;

        i1 = lengthof r3;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        i3 = 0;

     label02:
        if i3 >= i2 goto label07;

        $r9 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        r16 = $r9[i3];

        r5 = r3[i3];

        if r16 == null goto label03;

        $r11 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r16 != $r11 goto label04;

     label03:
        if r5 == null goto label06;

        $r12 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r5 == $r12 goto label06;

        return 0;

     label04:
        if r16 != r5 goto label05;

        $r14 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r15 = $r14[i3];

        $r13 = r4[i3];

        $z1 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label06;

     label05:
        return 0;

     label06:
        i3 = i3 + 1;

        goto label02;

     label07:
        if i3 >= i0 goto label09;

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        r17 = $r7[i3];

        if r17 == null goto label08;

        $r10 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r17 == $r10 goto label08;

        return 0;

     label08:
        i3 = i3 + 1;

        goto label07;

     label09:
        if i3 >= i1 goto label11;

        r18 = r3[i3];

        if r18 == null goto label10;

        $r8 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r18 == $r8 goto label10;

        return 0;

     label10:
        i3 = i3 + 1;

        goto label09;

     label11:
        return 1;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object r2, $r8, $r11;
        boolean $z0;
        java.lang.StringBuilder $r3, $r9, $r10, $r14;
        java.lang.Object[] $r5, $r7, $r12;
        int $i0, $i1, $i2, i3;
        java.lang.String $r6;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $z0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i3 = 0;

     label2:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        $i0 = lengthof $r5;

        if i3 >= $i0 goto label4;

        $r7 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        r2 = $r7[i3];

        if r2 == null goto label3;

        $r8 = <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED>;

        if r2 == $r8 goto label3;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r12 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        $r11 = $r12[i3];

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        $i2 = $i1 - 1;

        virtualinvoke $r3.<java.lang.StringBuilder: void setCharAt(int,char)>($i2, 125);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0, $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.FastMap;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.FastMap: org.apache.mahout.cf.taste.impl.common.FastMap clone()>();

        return $r1;
    }

    static java.lang.Object[] access$400(org.apache.mahout.cf.taste.impl.common.FastMap)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastMap;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] keys>;

        return $r1;
    }

    static java.lang.Object[] access$500(org.apache.mahout.cf.taste.impl.common.FastMap)
    {
        org.apache.mahout.cf.taste.impl.common.FastMap r0;
        java.lang.Object[] $r1;

        r0 := @parameter0: org.apache.mahout.cf.taste.impl.common.FastMap;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object[] values>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <org.apache.mahout.cf.taste.impl.common.FastMap: float DEFAULT_LOAD_FACTOR> = 1.5F;

        <org.apache.mahout.cf.taste.impl.common.FastMap: int NO_MAX_SIZE> = 2147483647;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.apache.mahout.cf.taste.impl.common.FastMap: java.lang.Object REMOVED> = $r0;

        return;
    }
}
