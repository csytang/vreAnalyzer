public final class org.apache.mahout.math.hadoop.stochasticsvd.qr.GramSchmidt extends java.lang.Object
{

    private void <init>()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.qr.GramSchmidt r0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.qr.GramSchmidt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void orthonormalizeColumns(org.apache.mahout.math.Matrix)
    {
        org.apache.mahout.math.Matrix r0;
        int i0, i1, i2;
        org.apache.mahout.math.Vector r1, r2, $r5, $r7;
        org.apache.mahout.math.hadoop.stochasticsvd.qr.GramSchmidt$1 $r3;
        double $d0, d1;

        r0 := @parameter0: org.apache.mahout.math.Matrix;

        i0 = interfaceinvoke r0.<org.apache.mahout.math.Matrix: int numCols()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r1 = interfaceinvoke r0.<org.apache.mahout.math.Matrix: org.apache.mahout.math.Vector viewColumn(int)>(i1);

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r2 = interfaceinvoke r0.<org.apache.mahout.math.Matrix: org.apache.mahout.math.Vector viewColumn(int)>(i2);

        $d0 = interfaceinvoke r2.<org.apache.mahout.math.Vector: double dot(org.apache.mahout.math.Vector)>(r1);

        $r5 = interfaceinvoke r2.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector times(double)>($d0);

        $r7 = interfaceinvoke r1.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector minus(org.apache.mahout.math.Vector)>($r5);

        interfaceinvoke r1.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector assign(org.apache.mahout.math.Vector)>($r7);

        i2 = i2 + 1;

        goto label2;

     label3:
        d1 = interfaceinvoke r1.<org.apache.mahout.math.Vector: double norm(double)>(2.0);

        $r3 = new org.apache.mahout.math.hadoop.stochasticsvd.qr.GramSchmidt$1;

        specialinvoke $r3.<org.apache.mahout.math.hadoop.stochasticsvd.qr.GramSchmidt$1: void <init>(double)>(d1);

        interfaceinvoke r1.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector assign(org.apache.mahout.math.function.DoubleFunction)>($r3);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }
}
