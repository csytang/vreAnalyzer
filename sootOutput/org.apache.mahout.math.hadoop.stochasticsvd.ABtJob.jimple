public final class org.apache.mahout.math.hadoop.stochasticsvd.ABtJob extends java.lang.Object
{
    public static final java.lang.String PROP_BT_PATH;
    public static final java.lang.String PROP_BT_BROADCAST;

    private void <init>()
    {
        org.apache.mahout.math.hadoop.stochasticsvd.ABtJob r0;

        r0 := @this: org.apache.mahout.math.hadoop.stochasticsvd.ABtJob;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void run(org.apache.hadoop.conf.Configuration, org.apache.hadoop.fs.Path[], org.apache.hadoop.fs.Path, org.apache.hadoop.fs.Path, int, int, int, int, int, int, boolean) throws java.lang.ClassNotFoundException, java.lang.InterruptedException, java.io.IOException
    {
        org.apache.hadoop.conf.Configuration r0, $r13, $r14, $r15, $r16, $r17, $r20;
        org.apache.hadoop.fs.Path[] r1;
        org.apache.hadoop.fs.Path r2, r3, $r22;
        int i0, i1, i2, i3, i4, i5, i6, i8;
        boolean z0, $z2;
        org.apache.hadoop.fs.FileSystem r6;
        org.apache.hadoop.fs.FileStatus[] r7;
        org.apache.hadoop.mapred.JobConf $r9;
        org.apache.hadoop.fs.FileStatus r10;
        org.apache.hadoop.io.SequenceFile$CompressionType $r11;
        org.apache.hadoop.mapreduce.Job $r12;
        java.lang.String $r18;
        java.io.IOException $r19;
        java.net.URI $r21, $r23;
        long $l7;

        r0 := @parameter0: org.apache.hadoop.conf.Configuration;

        r1 := @parameter1: org.apache.hadoop.fs.Path[];

        r2 := @parameter2: org.apache.hadoop.fs.Path;

        r3 := @parameter3: org.apache.hadoop.fs.Path;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        i5 := @parameter9: int;

        z0 := @parameter10: boolean;

        $r9 = new org.apache.hadoop.mapred.JobConf;

        specialinvoke $r9.<org.apache.hadoop.mapred.JobConf: void <init>(org.apache.hadoop.conf.Configuration)>(r0);

        $r12 = new org.apache.hadoop.mapreduce.Job;

        specialinvoke $r12.<org.apache.hadoop.mapreduce.Job: void <init>(org.apache.hadoop.conf.Configuration)>($r9);

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setJobName(java.lang.String)>("ABt-job");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/ABtJob");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setInputFormatClass(java.lang.Class)>(class "org/apache/hadoop/mapreduce/lib/input/SequenceFileInputFormat");

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path[])>($r12, r1);

        if i1 <= 0 goto label1;

        $l7 = (long) i1;

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void setMinInputSplitSize(org.apache.hadoop.mapreduce.Job,long)>($r12, $l7);

     label1:
        staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>($r12, r3);

        $r11 = <org.apache.hadoop.io.SequenceFile$CompressionType: org.apache.hadoop.io.SequenceFile$CompressionType BLOCK>;

        staticinvoke <org.apache.hadoop.mapreduce.lib.output.SequenceFileOutputFormat: void setOutputCompressionType(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.io.SequenceFile$CompressionType)>($r12, $r11);

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setMapOutputKeyClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/SplitPartitionedWritable");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setMapOutputValueClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/SparseRowBlockWritable");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/SplitPartitionedWritable");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/mahout/math/VectorWritable");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/ABtJob$ABtMapper");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/BtJob$OuterProductCombiner");

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "org/apache/mahout/math/hadoop/stochasticsvd/ABtJob$QRReducer");

        $r14 = virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r14.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.arowblock.size", i0);

        $r13 = virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r13.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.outerProdBlockHeight", i4);

        $r16 = virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r16.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.k", i2);

        $r15 = virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r15.<org.apache.hadoop.conf.Configuration: void setInt(java.lang.String,int)>("ssvd.p", i3);

        $r17 = virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r18 = virtualinvoke r2.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvd.Bt.path", $r18);

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void setNumReduceTasks(int)>(i5);

        if z0 == 0 goto label3;

        $r20 = virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r20.<org.apache.hadoop.conf.Configuration: void set(java.lang.String,java.lang.String)>("ssvd.Bt.broadcast", "y");

        $r21 = virtualinvoke r2.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        r6 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>($r21, r0);

        r7 = virtualinvoke r6.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileStatus[] globStatus(org.apache.hadoop.fs.Path)>(r2);

        if r7 == null goto label3;

        i6 = lengthof r7;

        i8 = 0;

     label2:
        if i8 >= i6 goto label3;

        r10 = r7[i8];

        $r22 = virtualinvoke r10.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>();

        $r23 = virtualinvoke $r22.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        staticinvoke <org.apache.hadoop.filecache.DistributedCache: void addCacheFile(java.net.URI,org.apache.hadoop.conf.Configuration)>($r23, r0);

        i8 = i8 + 1;

        goto label2;

     label3:
        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: void submit()>();

        virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(0);

        $z2 = virtualinvoke $r12.<org.apache.hadoop.mapreduce.Job: boolean isSuccessful()>();

        if $z2 != 0 goto label4;

        $r19 = new java.io.IOException;

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("ABt job unsuccessful.");

        throw $r19;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.math.hadoop.stochasticsvd.ABtJob: java.lang.String PROP_BT_BROADCAST> = "ssvd.Bt.broadcast";

        <org.apache.mahout.math.hadoop.stochasticsvd.ABtJob: java.lang.String PROP_BT_PATH> = "ssvd.Bt.path";

        return;
    }
}
