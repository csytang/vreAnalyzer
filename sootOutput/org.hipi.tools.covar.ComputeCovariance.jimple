public class org.hipi.tools.covar.ComputeCovariance extends java.lang.Object
{

    public void <init>()
    {
        org.hipi.tools.covar.ComputeCovariance r0;

        r0 := @this: org.hipi.tools.covar.ComputeCovariance;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int run(java.lang.String[], java.lang.String, java.lang.String, java.lang.String) throws java.lang.ClassNotFoundException, java.lang.IllegalStateException, java.lang.InterruptedException, java.io.IOException
    {
        java.lang.String[] r0, $r10;
        java.lang.String r1, r2, r3;
        org.apache.hadoop.mapreduce.Job r4;
        java.io.PrintStream $r5;
        org.apache.hadoop.fs.Path[] $r6;
        org.apache.hadoop.fs.Path $r7, $r8;
        org.apache.hadoop.conf.Configuration $r9;
        boolean $z0;
        byte $b0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Running compute covariance.");

        r4 = staticinvoke <org.apache.hadoop.mapreduce.Job: org.apache.hadoop.mapreduce.Job getInstance()>();

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "org/hipi/tools/covar/Covariance");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setInputFormatClass(java.lang.Class)>(class "org/hipi/imagebundle/mapreduce/HibInputFormat");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setMapOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setMapOutputValueClass(java.lang.Class)>(class "org/hipi/opencv/OpenCVMatWritable");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/NullWritable");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/hipi/opencv/OpenCVMatWritable");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "org/hipi/tools/covar/CovarianceMapper");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "org/hipi/tools/covar/CovarianceReducer");

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setNumReduceTasks(int)>(1);

        virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: void setOutputFormatClass(java.lang.Class)>(class "org/hipi/mapreduce/BinaryOutputFormat");

        $r6 = newarray (org.apache.hadoop.fs.Path)[1];

        $r7 = new org.apache.hadoop.fs.Path;

        specialinvoke $r7.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r1);

        $r6[0] = $r7;

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path[])>(r4, $r6);

        $r8 = new org.apache.hadoop.fs.Path;

        specialinvoke $r8.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r2);

        staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r4, $r8);

        $r9 = virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = r3;

        virtualinvoke $r9.<org.apache.hadoop.conf.Configuration: void setStrings(java.lang.String,java.lang.String[])>("hipi.covar.mean.path", $r10);

        $z0 = virtualinvoke r4.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1);

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        return $b0;
    }
}
