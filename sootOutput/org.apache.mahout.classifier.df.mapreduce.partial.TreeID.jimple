public class org.apache.mahout.classifier.df.mapreduce.partial.TreeID extends org.apache.hadoop.io.LongWritable implements java.lang.Cloneable
{
    public static final int MAX_TREEID;

    public void <init>()
    {
        org.apache.mahout.classifier.df.mapreduce.partial.TreeID r0;

        r0 := @this: org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        specialinvoke r0.<org.apache.hadoop.io.LongWritable: void <init>()>();

        return;
    }

    public void <init>(int, int)
    {
        org.apache.mahout.classifier.df.mapreduce.partial.TreeID r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r5, $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.apache.hadoop.io.LongWritable: void <init>()>();

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong partition: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Partition must be >= 0!");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, $r5);

        if i1 < 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Wrong treeId: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". TreeId must be >= 0!");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, $r10);

        virtualinvoke r0.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: void set(int,int)>(i0, i1);

        return;
    }

    public void set(int, int)
    {
        org.apache.mahout.classifier.df.mapreduce.partial.TreeID r0;
        int i0, i1;
        long $l2, $l3, $l4, $l5;

        r0 := @this: org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = (long) i0;

        $l4 = $l2 * 100000L;

        $l3 = (long) i1;

        $l5 = $l4 + $l3;

        virtualinvoke r0.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: void set(long)>($l5);

        return;
    }

    public int partition()
    {
        org.apache.mahout.classifier.df.mapreduce.partial.TreeID r0;
        long $l0, $l1;
        int $i2;

        r0 := @this: org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        $l0 = virtualinvoke r0.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: long get()>();

        $l1 = $l0 / 100000L;

        $i2 = (int) $l1;

        return $i2;
    }

    public int treeId()
    {
        org.apache.mahout.classifier.df.mapreduce.partial.TreeID r0;
        long $l0, $l1;
        int $i2;

        r0 := @this: org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        $l0 = virtualinvoke r0.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: long get()>();

        $l1 = $l0 % 100000L;

        $i2 = (int) $l1;

        return $i2;
    }

    public org.apache.mahout.classifier.df.mapreduce.partial.TreeID clone()
    {
        org.apache.mahout.classifier.df.mapreduce.partial.TreeID r0, $r1;
        int $i0, $i1;

        r0 := @this: org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        $r1 = new org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        $i0 = virtualinvoke r0.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: int partition()>();

        $i1 = virtualinvoke r0.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: int treeId()>();

        specialinvoke $r1.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.mahout.classifier.df.mapreduce.partial.TreeID r0, $r1;

        r0 := @this: org.apache.mahout.classifier.df.mapreduce.partial.TreeID;

        $r1 = virtualinvoke r0.<org.apache.mahout.classifier.df.mapreduce.partial.TreeID: org.apache.mahout.classifier.df.mapreduce.partial.TreeID clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.classifier.df.mapreduce.partial.TreeID: int MAX_TREEID> = 100000;

        return;
    }
}
