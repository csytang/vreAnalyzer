public final class org.apache.mahout.driver.MahoutDriver extends java.lang.Object
{
    private static final org.slf4j.Logger log;

    private void <init>()
    {
        org.apache.mahout.driver.MahoutDriver r0;

        r0 := @this: org.apache.mahout.driver.MahoutDriver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Throwable
    {
        java.lang.String[] r0, $r19, $r21, $r53, r82, $r83, r87, r95;
        java.lang.String r2, $r5, $r6, $r7, $r8, $r9, $r15, $r32, $r33, $r37, $r40, $r43, $r45, $r46, $r49, $r51, $r56, $r57, $r58, $r60, $r61, $r62, $r63, $r66, $r67, $r69, $r70, $r71, r76, r77, r81, r86, r88, $r89, r90, r94;
        org.apache.hadoop.util.ProgramDriver $r3;
        java.util.Set $r4, $r16, $r17;
        int $i0, $i1, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z8, $z10, $z11, $z12, $z13, $z14, $z17, $z18, $z19, z20, $z21, $z22, $z23;
        java.lang.StringBuilder $r11, $r12, $r14, $r35, $r36, $r38, $r39, $r41, $r42, $r47, $r48, $r50, $r54;
        java.util.HashMap $r13;
        java.util.ArrayList $r18, $r55;
        org.slf4j.Logger $r20, $r23, $r64, $r72;
        java.lang.Object[] $r22, $r30, $r84;
        long $l2, $l3, $l4, $l5, l15;
        double $d0, $d1;
        java.lang.Long $r24;
        java.lang.Object $r25, $r26, $r29, $r31, $r34, $r44, r75;
        java.lang.Double $r27;
        java.util.List $r28;
        java.util.Properties $r65, r73, r78;
        java.io.IOException $r68;
        java.util.Iterator r74, r85, r92, r96;
        java.util.Map$Entry r93;

        r0 := @parameter0: java.lang.String[];

        r73 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.util.Properties loadProperties(java.lang.String)>("driver.classes.props");

        if r73 != null goto label01;

        r73 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.util.Properties loadProperties(java.lang.String)>("driver.classes.default.props");

     label01:
        if r73 != null goto label02;

        $r68 = new java.io.IOException;

        specialinvoke $r68.<java.io.IOException: void <init>(java.lang.String)>("Can\'t load any properties file?");

        throw $r68;

     label02:
        z20 = 0;

        $r3 = new org.apache.hadoop.util.ProgramDriver;

        specialinvoke $r3.<org.apache.hadoop.util.ProgramDriver: void <init>()>();

        $r4 = virtualinvoke r73.<java.util.Properties: java.util.Set keySet()>();

        r74 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z21 = interfaceinvoke r74.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label07;

        r75 = interfaceinvoke r74.<java.util.Iterator: java.lang.Object next()>();

        r76 = (java.lang.String) r75;

        $i10 = lengthof r0;

        if $i10 <= 0 goto label04;

        $r69 = virtualinvoke r73.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r76);

        $r67 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.lang.String shortName(java.lang.String)>($r69);

        $r66 = r0[0];

        $z17 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>($r66);

        if $z17 == 0 goto label04;

        z20 = 1;

     label04:
        $i11 = lengthof r0;

        if $i11 <= 0 goto label05;

        $r62 = r0[0];

        $z19 = virtualinvoke r76.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r62);

        if $z19 == 0 goto label05;

        $z18 = staticinvoke <org.apache.mahout.driver.MahoutDriver: boolean isDeprecated(java.util.Properties,java.lang.String)>(r73, r76);

        if $z18 == 0 goto label05;

        $r72 = <org.apache.mahout.driver.MahoutDriver: org.slf4j.Logger log>;

        $r71 = virtualinvoke r73.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r76);

        $r70 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.lang.String desc(java.lang.String)>($r71);

        interfaceinvoke $r72.<org.slf4j.Logger: void error(java.lang.String)>($r70);

        return;

     label05:
        $z22 = staticinvoke <org.apache.mahout.driver.MahoutDriver: boolean isDeprecated(java.util.Properties,java.lang.String)>(r73, r76);

        if $z22 == 0 goto label06;

        goto label03;

     label06:
        $r61 = virtualinvoke r73.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r76);

        staticinvoke <org.apache.mahout.driver.MahoutDriver: void addClass(org.apache.hadoop.util.ProgramDriver,java.lang.String,java.lang.String)>($r3, r76, $r61);

        goto label03;

     label07:
        $i0 = lengthof r0;

        if $i0 < 1 goto label08;

        $r5 = r0[0];

        if $r5 == null goto label08;

        $r7 = "-h";

        $r6 = r0[0];

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label08;

        $r8 = "--help";

        $r9 = r0[0];

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 == 0 goto label09;

     label08:
        virtualinvoke $r3.<org.apache.hadoop.util.ProgramDriver: void driver(java.lang.String[])>(r0);

        return;

     label09:
        r77 = r0[0];

        if z20 != 0 goto label10;

        staticinvoke <org.apache.mahout.driver.MahoutDriver: void addClass(org.apache.hadoop.util.ProgramDriver,java.lang.String,java.lang.String)>($r3, r77, r77);

     label10:
        staticinvoke <org.apache.mahout.driver.MahoutDriver: java.lang.String[] shift(java.lang.String[])>(r0);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".props");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r78 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.util.Properties loadProperties(java.lang.String)>($r15);

        if r78 != null goto label11;

        $r64 = <org.apache.mahout.driver.MahoutDriver: org.slf4j.Logger log>;

        interfaceinvoke $r64.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No {}.props found on classpath, will use command-line arguments only", r77);

        $r65 = new java.util.Properties;

        specialinvoke $r65.<java.util.Properties: void <init>()>();

        r78 = $r65;

     label11:
        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        i12 = 0;

     label12:
        $i13 = lengthof r0;

        if i12 >= $i13 goto label16;

        $r56 = r0[i12];

        if $r56 == null goto label16;

        $r55 = new java.util.ArrayList;

        specialinvoke $r55.<java.util.ArrayList: void <init>()>();

        r81 = r0[i12];

        i12 = i12 + 1;

        $z13 = virtualinvoke r81.<java.lang.String: boolean startsWith(java.lang.String)>("-D");

        if $z13 == 0 goto label13;

        r82 = virtualinvoke r81.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        r81 = r82[0];

        $i9 = lengthof r82;

        if $i9 != 2 goto label15;

        $r63 = r82[1];

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>($r63);

        goto label15;

     label13:
        $i8 = lengthof r0;

        if i12 >= $i8 goto label15;

        $r60 = r0[i12];

        if $r60 == null goto label15;

        $r57 = r0[i12];

        $z14 = virtualinvoke $r57.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z14 == 0 goto label14;

        goto label15;

     label14:
        $r58 = r0[i12];

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>($r58);

        i12 = i12 + 1;

        goto label13;

     label15:
        $i14 = interfaceinvoke $r55.<java.util.List: int size()>();

        $r83 = newarray (java.lang.String)[$i14];

        $r84 = interfaceinvoke $r55.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r83);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r81, $r84);

        goto label12;

     label16:
        $r16 = virtualinvoke r78.<java.util.Properties: java.util.Set stringPropertyNames()>();

        r85 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z23 = interfaceinvoke r85.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label21;

        $r44 = interfaceinvoke r85.<java.util.Iterator: java.lang.Object next()>();

        r86 = (java.lang.String) $r44;

        r87 = virtualinvoke r86.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\|");

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r40 = r87[0];

        $r49 = virtualinvoke $r40.<java.lang.String: java.lang.String trim()>();

        $r50 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        r88 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $i7 = lengthof r87;

        if $i7 >= 2 goto label18;

        $r89 = null;

        goto label19;

     label18:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r45 = r87[1];

        $r46 = virtualinvoke $r45.<java.lang.String: java.lang.String trim()>();

        $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r89 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        r90 = $r89;

        $z11 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r88);

        if $z11 != 0 goto label17;

        if $r89 == null goto label20;

        $z12 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r89);

        if $z12 != 0 goto label17;

     label20:
        $r53 = newarray (java.lang.String)[1];

        $r51 = virtualinvoke r78.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r86);

        $r53[0] = $r51;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r90, $r53);

        goto label17;

     label21:
        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r77);

        $r17 = interfaceinvoke $r13.<java.util.Map: java.util.Set entrySet()>();

        r92 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label22:
        $z3 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label26;

        $r26 = interfaceinvoke r92.<java.util.Iterator: java.lang.Object next()>();

        r93 = (java.util.Map$Entry) $r26;

        $r25 = interfaceinvoke r93.<java.util.Map$Entry: java.lang.Object getKey()>();

        r94 = (java.lang.String) $r25;

        $z6 = virtualinvoke r94.<java.lang.String: boolean startsWith(java.lang.String)>("-D");

        if $z6 == 0 goto label24;

        $r31 = interfaceinvoke r93.<java.util.Map$Entry: java.lang.Object getValue()>();

        r95 = (java.lang.String[]) $r31;

        $i6 = lengthof r95;

        if $i6 <= 0 goto label23;

        $r32 = r95[0];

        $r33 = virtualinvoke $r32.<java.lang.String: java.lang.String trim()>();

        $z10 = virtualinvoke $r33.<java.lang.String: boolean isEmpty()>();

        if $z10 != 0 goto label23;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r94);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r37 = r95[0];

        $r43 = virtualinvoke $r37.<java.lang.String: java.lang.String trim()>();

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        r94 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        interfaceinvoke $r18.<java.util.List: void add(int,java.lang.Object)>(1, r94);

        goto label22;

     label24:
        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r94);

        $r29 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r94);

        $r30 = (java.lang.Object[]) $r29;

        $r28 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r30);

        r96 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>();

     label25:
        $z5 = interfaceinvoke r96.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label22;

        $r34 = interfaceinvoke r96.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r34;

        $z8 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z8 != 0 goto label25;

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r2);

        goto label25;

     label26:
        l15 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = interfaceinvoke $r18.<java.util.List: int size()>();

        $r19 = newarray (java.lang.String)[$i1];

        $r22 = interfaceinvoke $r18.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r19);

        $r21 = (java.lang.String[]) $r22;

        virtualinvoke $r3.<org.apache.hadoop.util.ProgramDriver: void driver(java.lang.String[])>($r21);

        $r20 = <org.apache.mahout.driver.MahoutDriver: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r20.<org.slf4j.Logger: boolean isInfoEnabled()>();

        if $z4 == 0 goto label27;

        $r23 = <org.apache.mahout.driver.MahoutDriver: org.slf4j.Logger log>;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l3 - l15;

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l4 = $l5 - l15;

        $d0 = (double) $l4;

        $d1 = $d0 / 60000.0;

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Program took {} ms (Minutes: {})", $r24, $r27);

     label27:
        return;
    }

    private static boolean isDeprecated(java.util.Properties, java.lang.String)
    {
        java.util.Properties r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @parameter0: java.util.Properties;

        r1 := @parameter1: java.lang.String;

        $r2 = "deprecated";

        $r3 = virtualinvoke r0.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        $r4 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.lang.String shortName(java.lang.String)>($r3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        return $z0;
    }

    private static java.util.Properties loadProperties(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        java.io.InputStream r1;
        java.lang.Thread $r5;
        java.lang.ClassLoader $r6;
        java.util.Properties $r7;
        java.lang.Throwable $r8;

        r0 := @parameter0: java.lang.String;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r1 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r0);

        if r1 == null goto label5;

     label1:
        $r7 = new java.util.Properties;

        specialinvoke $r7.<java.util.Properties: void <init>()>();

        virtualinvoke $r7.<java.util.Properties: void load(java.io.InputStream)>(r1);

     label2:
        staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>(r1, 1);

        return $r7;

     label3:
        $r8 := @caughtexception;

     label4:
        staticinvoke <com.google.common.io.Closeables: void close(java.io.Closeable,boolean)>(r1, 1);

        throw $r8;

     label5:
        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static java.lang.String[] shift(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        $i1 = $i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 1, r0, 0, $i1);

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        r0[$i3] = null;

        return r0;
    }

    private static java.lang.String shortName(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    private static java.lang.String desc(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(":");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        goto label2;

     label1:
        $r2 = r0;

     label2:
        return $r2;
    }

    private static void addClass(org.apache.hadoop.util.ProgramDriver, java.lang.String, java.lang.String)
    {
        org.apache.hadoop.util.ProgramDriver r0;
        java.lang.String r1, r2, $r3, $r4;
        java.lang.Throwable $r5;
        org.slf4j.Logger $r6;
        java.lang.Class r7;

        r0 := @parameter0: org.apache.hadoop.util.ProgramDriver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        $r3 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.lang.String shortName(java.lang.String)>(r2);

        $r4 = staticinvoke <org.apache.mahout.driver.MahoutDriver: java.lang.String desc(java.lang.String)>(r2);

        virtualinvoke r0.<org.apache.hadoop.util.ProgramDriver: void addClass(java.lang.String,java.lang.Class,java.lang.String)>($r3, r7, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = <org.apache.mahout.driver.MahoutDriver: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to add class: {}", r1, $r5);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/mahout/driver/MahoutDriver");

        <org.apache.mahout.driver.MahoutDriver: org.slf4j.Logger log> = $r0;

        return;
    }
}
