public class org.apache.mahout.common.distance.TanimotoDistanceMeasure extends org.apache.mahout.common.distance.WeightedDistanceMeasure
{

    public void <init>()
    {
        org.apache.mahout.common.distance.TanimotoDistanceMeasure r0;

        r0 := @this: org.apache.mahout.common.distance.TanimotoDistanceMeasure;

        specialinvoke r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: void <init>()>();

        return;
    }

    public double distance(org.apache.mahout.math.Vector, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.common.distance.TanimotoDistanceMeasure r0;
        org.apache.mahout.math.Vector r1, r2, $r3, $r4, $r5, $r8, $r11;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9;
        byte $b0, $b1;
        org.apache.mahout.math.function.DoubleDoubleFunction $r6, $r7, $r9, $r10, $r12, $r13;

        r0 := @this: org.apache.mahout.common.distance.TanimotoDistanceMeasure;

        r1 := @parameter0: org.apache.mahout.math.Vector;

        r2 := @parameter1: org.apache.mahout.math.Vector;

        $r3 = virtualinvoke r0.<org.apache.mahout.common.distance.TanimotoDistanceMeasure: org.apache.mahout.math.Vector getWeights()>();

        if $r3 == null goto label1;

        $r5 = interfaceinvoke r1.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector times(org.apache.mahout.math.Vector)>(r2);

        $r4 = virtualinvoke r0.<org.apache.mahout.common.distance.TanimotoDistanceMeasure: org.apache.mahout.math.Vector getWeights()>();

        $r6 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction PLUS>;

        $r7 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction MULT>;

        d8 = interfaceinvoke $r5.<org.apache.mahout.math.Vector: double aggregate(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction,org.apache.mahout.math.function.DoubleDoubleFunction)>($r4, $r6, $r7);

        $r8 = virtualinvoke r0.<org.apache.mahout.common.distance.TanimotoDistanceMeasure: org.apache.mahout.math.Vector getWeights()>();

        $r9 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction PLUS>;

        $r10 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction MULT_SQUARE_LEFT>;

        $d5 = interfaceinvoke r1.<org.apache.mahout.math.Vector: double aggregate(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction,org.apache.mahout.math.function.DoubleDoubleFunction)>($r8, $r9, $r10);

        $r11 = virtualinvoke r0.<org.apache.mahout.common.distance.TanimotoDistanceMeasure: org.apache.mahout.math.Vector getWeights()>();

        $r12 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction PLUS>;

        $r13 = <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction MULT_SQUARE_LEFT>;

        $d7 = interfaceinvoke r2.<org.apache.mahout.math.Vector: double aggregate(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction,org.apache.mahout.math.function.DoubleDoubleFunction)>($r11, $r12, $r13);

        $d6 = $d5 + $d7;

        d9 = $d6 - d8;

        goto label2;

     label1:
        d8 = interfaceinvoke r2.<org.apache.mahout.math.Vector: double dot(org.apache.mahout.math.Vector)>(r1);

        $d0 = interfaceinvoke r1.<org.apache.mahout.math.Vector: double getLengthSquared()>();

        $d1 = interfaceinvoke r2.<org.apache.mahout.math.Vector: double getLengthSquared()>();

        $d2 = $d0 + $d1;

        d9 = $d2 - d8;

     label2:
        $b0 = d9 cmpg d8;

        if $b0 >= 0 goto label3;

        d9 = d8;

     label3:
        $b1 = d9 cmpl 0.0;

        if $b1 <= 0 goto label4;

        $d3 = d8 / d9;

        $d4 = 1.0 - $d3;

        return $d4;

     label4:
        return 0.0;
    }

    public double distance(double, org.apache.mahout.math.Vector, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.common.distance.TanimotoDistanceMeasure r0;
        double d0, $d1;
        org.apache.mahout.math.Vector r1, r2;

        r0 := @this: org.apache.mahout.common.distance.TanimotoDistanceMeasure;

        d0 := @parameter0: double;

        r1 := @parameter1: org.apache.mahout.math.Vector;

        r2 := @parameter2: org.apache.mahout.math.Vector;

        $d1 = virtualinvoke r0.<org.apache.mahout.common.distance.TanimotoDistanceMeasure: double distance(org.apache.mahout.math.Vector,org.apache.mahout.math.Vector)>(r1, r2);

        return $d1;
    }
}
