public abstract class org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity extends java.lang.Object implements org.apache.mahout.cf.taste.similarity.ItemSimilarity
{
    private final org.apache.mahout.cf.taste.model.DataModel dataModel;
    private final org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper;

    protected void <init>(org.apache.mahout.cf.taste.model.DataModel)
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity r0;
        org.apache.mahout.cf.taste.model.DataModel r1, $r3;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2, $r4;
        boolean $z0;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity;

        r1 := @parameter0: org.apache.mahout.cf.taste.model.DataModel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "dataModel is null");

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: org.apache.mahout.cf.taste.model.DataModel dataModel> = r1;

        $r2 = new org.apache.mahout.cf.taste.impl.common.RefreshHelper;

        specialinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void <init>(java.util.concurrent.Callable)>(null);

        r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper> = $r2;

        $r4 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        $r3 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: org.apache.mahout.cf.taste.model.DataModel dataModel>;

        virtualinvoke $r4.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void addDependency(org.apache.mahout.cf.taste.common.Refreshable)>($r3);

        return;
    }

    protected org.apache.mahout.cf.taste.model.DataModel getDataModel()
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity r0;
        org.apache.mahout.cf.taste.model.DataModel $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: org.apache.mahout.cf.taste.model.DataModel dataModel>;

        return $r1;
    }

    public long[] allSimilarItemIDs(long) throws org.apache.mahout.cf.taste.common.TasteException
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity r0;
        long l0, l1;
        org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator r2;
        org.apache.mahout.cf.taste.impl.common.FastIDSet $r3;
        org.apache.mahout.cf.taste.model.DataModel $r4;
        boolean $z0, $z1;
        long[] $r5;
        double $d0;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity;

        l0 := @parameter0: long;

        $r3 = new org.apache.mahout.cf.taste.impl.common.FastIDSet;

        specialinvoke $r3.<org.apache.mahout.cf.taste.impl.common.FastIDSet: void <init>()>();

        $r4 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: org.apache.mahout.cf.taste.model.DataModel dataModel>;

        r2 = interfaceinvoke $r4.<org.apache.mahout.cf.taste.model.DataModel: org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator getItemIDs()>();

     label1:
        $z0 = interfaceinvoke r2.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        l1 = interfaceinvoke r2.<org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator: long nextLong()>();

        $d0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: double itemSimilarity(long,long)>(l0, l1);

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z1 != 0 goto label1;

        virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.FastIDSet: boolean add(long)>(l1);

        goto label1;

     label2:
        $r5 = virtualinvoke $r3.<org.apache.mahout.cf.taste.impl.common.FastIDSet: long[] toArray()>();

        return $r5;
    }

    public void refresh(java.util.Collection)
    {
        org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity r0;
        java.util.Collection r1;
        org.apache.mahout.cf.taste.impl.common.RefreshHelper $r2;

        r0 := @this: org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.apache.mahout.cf.taste.impl.similarity.AbstractItemSimilarity: org.apache.mahout.cf.taste.impl.common.RefreshHelper refreshHelper>;

        virtualinvoke $r2.<org.apache.mahout.cf.taste.impl.common.RefreshHelper: void refresh(java.util.Collection)>(r1);

        return;
    }
}
