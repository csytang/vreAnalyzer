public class org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer extends org.apache.hadoop.mapreduce.Reducer
{
    private static final org.slf4j.Logger log;
    private org.apache.hadoop.conf.Configuration conf;

    public void <init>()
    {
        org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer r0;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>();

        return;
    }

    public void setup(org.apache.hadoop.mapreduce.Reducer$Context)
    {
        org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer r0;
        org.apache.hadoop.mapreduce.Reducer$Context r1;
        org.apache.hadoop.conf.Configuration $r2;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Reducer$Context;

        $r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        r0.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: org.apache.hadoop.conf.Configuration conf> = $r2;

        return;
    }

    public void reduce(org.apache.hadoop.io.IntWritable, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer r0;
        org.apache.hadoop.io.IntWritable r1, r21;
        java.lang.Iterable r2, $r8, $r16, $r17;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        java.util.Iterator r4;
        org.apache.mahout.math.Vector r5;
        org.apache.hadoop.conf.Configuration $r6, $r7, $r15;
        boolean $z0, $z1;
        java.lang.Object $r9, r18;
        org.apache.mahout.math.Centroid $r12;
        int i0;
        org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer$1 r19;
        org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansThread r20;
        org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable r22;
        java.util.List r23;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r6 = r0.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: org.apache.hadoop.conf.Configuration conf>;

        $z0 = virtualinvoke $r6.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("reduceStreamingKMeans", 0);

        if $z0 == 0 goto label1;

        r20 = new org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansThread;

        r19 = new org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer$1;

        specialinvoke r19.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer$1: void <init>(org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer)>(r0);

        $r16 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function)>(r2, r19);

        $r15 = r0.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: org.apache.hadoop.conf.Configuration conf>;

        specialinvoke r20.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansThread: void <init>(java.lang.Iterable,org.apache.hadoop.conf.Configuration)>($r16, $r15);

        $r17 = virtualinvoke r20.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansThread: java.lang.Iterable call()>();

        r18 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r17);

        goto label2;

     label1:
        r18 = staticinvoke <org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: java.util.List centroidWritablesToList(java.lang.Iterable)>(r2);

     label2:
        i0 = 0;

        $r7 = r0.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: org.apache.hadoop.conf.Configuration conf>;

        r23 = (java.util.List) r18;

        $r8 = staticinvoke <org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: java.lang.Iterable getBestCentroids(java.util.List,org.apache.hadoop.conf.Configuration)>(r23, $r7);

        r4 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.mahout.math.Vector) $r9;

        r21 = new org.apache.hadoop.io.IntWritable;

        specialinvoke r21.<org.apache.hadoop.io.IntWritable: void <init>(int)>(i0);

        r22 = new org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable;

        $r12 = (org.apache.mahout.math.Centroid) r5;

        specialinvoke r22.<org.apache.mahout.clustering.streaming.mapreduce.CentroidWritable: void <init>(org.apache.mahout.math.Centroid)>($r12);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r21, r22);

        i0 = i0 + 1;

        goto label3;

     label4:
        return;
    }

    public static java.util.List centroidWritablesToList(java.lang.Iterable)
    {
        java.lang.Iterable r0, $r2;
        org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer$2 $r1;
        java.util.ArrayList $r3;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer$2;

        specialinvoke $r1.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer$2: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function)>(r0, $r1);

        $r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r2);

        return $r3;
    }

    public static java.lang.Iterable getBestCentroids(java.util.List, org.apache.hadoop.conf.Configuration)
    {
        java.util.List r0;
        org.apache.hadoop.conf.Configuration r1;
        int i0, i1, i2, $i3;
        float f0, f1;
        boolean z0, $z2, $z3, $z4, $z5, $z6;
        org.slf4j.Logger $r3, $r7;
        org.apache.mahout.clustering.streaming.cluster.BallKMeans $r4;
        double $d0, $d1;
        org.apache.mahout.math.neighborhood.UpdatableSearcher $r5, $r6;
        java.lang.Integer $r8;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: org.apache.hadoop.conf.Configuration;

        $r3 = <org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: org.slf4j.Logger log>;

        $z2 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isInfoEnabled()>();

        if $z2 == 0 goto label1;

        $r7 = <org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: org.slf4j.Logger log>;

        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Number of Centroids: {}", $r8);

     label1:
        i0 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("numClusters", 1);

        i1 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("maxNumIterations", 10);

        f0 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: float getFloat(java.lang.String,float)>("trimFraction", 0.9F);

        $z3 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("randomInit", 0);

        if $z3 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z0 = $z5;

        $z4 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("ignoreWeights", 0);

        if $z4 != 0 goto label4;

        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        f1 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: float getFloat(java.lang.String,float)>("testProbability", 0.1F);

        i2 = virtualinvoke r1.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("numBallKMeansRuns", 3);

        $r4 = new org.apache.mahout.clustering.streaming.cluster.BallKMeans;

        $r5 = staticinvoke <org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansUtilsMR: org.apache.mahout.math.neighborhood.UpdatableSearcher searcherFromConfiguration(org.apache.hadoop.conf.Configuration)>(r1);

        $d1 = (double) f0;

        $d0 = (double) f1;

        specialinvoke $r4.<org.apache.mahout.clustering.streaming.cluster.BallKMeans: void <init>(org.apache.mahout.math.neighborhood.UpdatableSearcher,int,int,double,boolean,boolean,double,int)>($r5, i0, i1, $d1, z0, $z6, $d0, i2);

        $r6 = virtualinvoke $r4.<org.apache.mahout.clustering.streaming.cluster.BallKMeans: org.apache.mahout.math.neighborhood.UpdatableSearcher cluster(java.util.List)>(r0);

        return $r6;
    }

    public volatile void reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer r0;
        java.lang.Object r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        org.apache.hadoop.io.IntWritable $r4;

        r0 := @this: org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r4 = (org.apache.hadoop.io.IntWritable) r1;

        virtualinvoke r0.<org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: void reduce(org.apache.hadoop.io.IntWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/mahout/clustering/streaming/mapreduce/StreamingKMeansReducer");

        <org.apache.mahout.clustering.streaming.mapreduce.StreamingKMeansReducer: org.slf4j.Logger log> = $r0;

        return;
    }
}
