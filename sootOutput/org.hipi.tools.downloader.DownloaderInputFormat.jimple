public class org.hipi.tools.downloader.DownloaderInputFormat extends org.apache.hadoop.mapreduce.lib.input.FileInputFormat
{

    public void <init>()
    {
        org.hipi.tools.downloader.DownloaderInputFormat r0;

        r0 := @this: org.hipi.tools.downloader.DownloaderInputFormat;

        specialinvoke r0.<org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void <init>()>();

        return;
    }

    public org.apache.hadoop.mapreduce.RecordReader createRecordReader(org.apache.hadoop.mapreduce.InputSplit, org.apache.hadoop.mapreduce.TaskAttemptContext) throws java.io.IOException, java.lang.InterruptedException
    {
        org.hipi.tools.downloader.DownloaderInputFormat r0;
        org.apache.hadoop.mapreduce.InputSplit r1;
        org.apache.hadoop.mapreduce.TaskAttemptContext r2;
        org.hipi.tools.downloader.DownloaderRecordReader $r3;

        r0 := @this: org.hipi.tools.downloader.DownloaderInputFormat;

        r1 := @parameter0: org.apache.hadoop.mapreduce.InputSplit;

        r2 := @parameter1: org.apache.hadoop.mapreduce.TaskAttemptContext;

        $r3 = new org.hipi.tools.downloader.DownloaderRecordReader;

        specialinvoke $r3.<org.hipi.tools.downloader.DownloaderRecordReader: void <init>()>();

        return $r3;
    }

    public java.util.List getSplits(org.apache.hadoop.mapreduce.JobContext) throws java.io.IOException
    {
        org.hipi.tools.downloader.DownloaderInputFormat r0;
        org.apache.hadoop.mapreduce.JobContext r1;
        org.apache.hadoop.conf.Configuration r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i14, $i15, $i17, $i18, $i19, $i20, i21, $i22, i24, i25, i26, i27, i28, $i29;
        org.apache.hadoop.fs.FileSystem r5;
        java.lang.String r6, $r10, $r23, $r25, $r33, $r35, $r42, $r45, $r57, $r62, $r63, $r65, $r66, $r76, $r78, $r84, $r88, $r90, $r94, r98;
        java.util.ArrayList $r8, $r9;
        java.lang.StringBuilder $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r22, $r29, $r30, $r32, $r34, $r36, $r37, $r39, $r40, $r41, $r48, $r49, $r50, $r52, $r53, $r54, $r56, $r58, $r59, $r60, $r64, $r67, $r68, $r69, $r70, $r71, $r72, $r75, $r79, $r80, $r83, $r86, $r91, $r92, $r93, $r96;
        org.apache.hadoop.fs.Path $r14, $r73, r105;
        boolean $z1, $z2, z8, z9, $z10;
        java.io.PrintStream $r15, $r31, $r38, $r51, $r55, $r74, $r85;
        java.util.List $r21;
        java.lang.Object $r24, $r46, $r87;
        org.apache.hadoop.fs.FSDataInputStream $r26;
        java.io.InputStreamReader $r27;
        java.io.BufferedReader $r28;
        float $f0, $f1, $f2;
        double $d0, $d1;
        org.apache.hadoop.mapreduce.lib.input.FileSplit $r43, $r47;
        java.lang.String[] $r44, $r81, $r89, r106;
        long $l10, $l12, $l13, $l16, l23;
        java.io.IOException $r61, $r97;
        org.apache.hadoop.fs.BlockLocation $r77, $r82;
        java.lang.Exception $r95;
        org.apache.hadoop.fs.FSDataOutputStream r100;
        org.apache.hadoop.fs.FileStatus r101, r104;
        org.apache.hadoop.fs.BlockLocation[] r102;
        java.util.Iterator r103;

        r0 := @this: org.hipi.tools.downloader.DownloaderInputFormat;

        r1 := @parameter0: org.apache.hadoop.mapreduce.JobContext;

        r2 = interfaceinvoke r1.<org.apache.hadoop.mapreduce.JobContext: org.apache.hadoop.conf.Configuration getConfiguration()>();

        i0 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("downloader.nodes", 10);

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>(0);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r5 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(org.apache.hadoop.conf.Configuration)>(r2);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>("downloader.outpath");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_tmp");

        r6 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new org.apache.hadoop.fs.Path;

        specialinvoke $r14.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r6);

        $z1 = virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: boolean exists(org.apache.hadoop.fs.Path)>($r14);

        if $z1 == 0 goto label01;

        virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: boolean delete(org.apache.hadoop.fs.Path,boolean)>($r14, 1);

     label01:
        virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: boolean mkdirs(org.apache.hadoop.fs.Path)>($r14);

        i21 = 0;

     label02:
        $i22 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i22 >= i0 goto label07;

        $i18 = 2 * i0;

        if i21 >= $i18 goto label07;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        r98 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r73 = new org.apache.hadoop.fs.Path;

        specialinvoke $r73.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r98);

        r100 = virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FSDataOutputStream create(org.apache.hadoop.fs.Path)>($r73);

        virtualinvoke r100.<org.apache.hadoop.fs.FSDataOutputStream: void write(int)>(i21);

        virtualinvoke r100.<org.apache.hadoop.fs.FSDataOutputStream: void close()>();

        r101 = virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileStatus getFileStatus(org.apache.hadoop.fs.Path)>($r73);

        l23 = virtualinvoke r101.<org.apache.hadoop.fs.FileStatus: long getLen()>();

        r102 = virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.BlockLocation[] getFileBlockLocations(org.apache.hadoop.fs.FileStatus,long,long)>(r101, 0L, l23);

        z8 = 1;

        i24 = 0;

     label03:
        $i19 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i24 >= $i19 goto label05;

        $r77 = r102[0];

        $r89 = virtualinvoke $r77.<org.apache.hadoop.fs.BlockLocation: java.lang.String[] getHosts()>();

        $r90 = $r89[0];

        $r87 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i24);

        $r88 = (java.lang.String) $r87;

        $i20 = virtualinvoke $r90.<java.lang.String: int compareTo(java.lang.String)>($r88);

        if $i20 != 0 goto label04;

        z8 = 0;

        $r85 = <java.lang.System: java.io.PrintStream out>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Repeated host: ");

        $r83 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r84);

        goto label05;

     label04:
        i24 = i24 + 1;

        goto label03;

     label05:
        if z8 == 0 goto label06;

        $r82 = r102[0];

        $r81 = virtualinvoke $r82.<org.apache.hadoop.fs.BlockLocation: java.lang.String[] getHosts()>();

        $r76 = $r81[0];

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r76);

        $r74 = <java.lang.System: java.io.PrintStream out>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unique host: ");

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i21);

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>($r78);

     label06:
        i21 = i21 + 1;

        goto label02;

     label07:
        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to get ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unique nodes, found ");

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unique nodes.");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r23);

        z9 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>("downloader.yfcc100m", 0);

        $r21 = virtualinvoke r0.<org.hipi.tools.downloader.DownloaderInputFormat: java.util.List listStatus(org.apache.hadoop.mapreduce.JobContext)>(r1);

        r103 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z10 = interfaceinvoke r103.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label23;

        $r24 = interfaceinvoke r103.<java.util.Iterator: java.lang.Object next()>();

        r104 = (org.apache.hadoop.fs.FileStatus) $r24;

        r105 = virtualinvoke r104.<org.apache.hadoop.fs.FileStatus: org.apache.hadoop.fs.Path getPath()>();

        i25 = 0;

        if z9 == 0 goto label13;

        $r62 = virtualinvoke r105.<org.apache.hadoop.fs.Path: java.lang.String getName()>();

        r106 = virtualinvoke $r62.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        if r106 == null goto label09;

        $i17 = lengthof r106;

        if $i17 >= 2 goto label10;

     label09:
        $r61 = new java.io.IOException;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to determine image count. Check that file name follows YFCC100M convention: ");

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r105);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<java.io.IOException: void <init>(java.lang.String)>($r66);

        throw $r61;

     label10:
        $r65 = r106[1];

        i25 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r65);

     label11:
        goto label16;

     label12:
        $r95 := @caughtexception;

        $r97 = new java.io.IOException;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to determine image count. Check that file name follows YFCC100M convention: ");

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r105);

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r97.<java.io.IOException: void <init>(java.lang.String)>($r94);

        throw $r97;

     label13:
        $r28 = new java.io.BufferedReader;

        $r27 = new java.io.InputStreamReader;

        $r26 = virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path)>(r105);

        specialinvoke $r27.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r26);

        specialinvoke $r28.<java.io.BufferedReader: void <init>(java.io.Reader)>($r27);

     label14:
        $r25 = virtualinvoke $r28.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r25 == null goto label15;

        i25 = i25 + 1;

        goto label14;

     label15:
        virtualinvoke $r28.<java.io.BufferedReader: void close()>();

     label16:
        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Determined ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i25);

        $r36 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" images listed in: ");

        $r35 = virtualinvoke r105.<org.apache.hadoop.fs.Path: java.lang.String getName()>();

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $f2 = (float) i25;

        $i2 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $f1 = (float) $i2;

        $f0 = $f2 / $f1;

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i26 = (int) $d1;

        $i5 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i6 = $i5 - 1;

        $i3 = i26 * $i6;

        i27 = i25 - $i3;

        $i4 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i4 <= 1 goto label17;

        $r51 = <java.lang.System: java.io.PrintStream out>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("First ");

        $i15 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i14 = $i15 - 1;

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r58 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nodes will each download ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i26);

        $r56 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" images");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.String)>($r57);

        $r55 = <java.lang.System: java.io.PrintStream out>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Last node will download ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r64 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" images");

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r63);

        goto label18;

     label17:
        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Single node will download ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i27);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" images");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r42);

     label18:
        i28 = 0;

     label19:
        $i29 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if i28 >= $i29 goto label22;

        $r44 = newarray (java.lang.String)[1];

        $r46 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i28);

        $r45 = (java.lang.String) $r46;

        $r44[0] = $r45;

        $i8 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        $i7 = $i8 - 1;

        if i28 >= $i7 goto label20;

        $r47 = new org.apache.hadoop.mapreduce.lib.input.FileSplit;

        $i11 = i28 * i26;

        $l16 = (long) $i11;

        $l10 = (long) i26;

        specialinvoke $r47.<org.apache.hadoop.mapreduce.lib.input.FileSplit: void <init>(org.apache.hadoop.fs.Path,long,long,java.lang.String[])>(r105, $l16, $l10, $r44);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r47);

        goto label21;

     label20:
        $r43 = new org.apache.hadoop.mapreduce.lib.input.FileSplit;

        $i9 = i28 * i26;

        $l12 = (long) $i9;

        $l13 = (long) i27;

        specialinvoke $r43.<org.apache.hadoop.mapreduce.lib.input.FileSplit: void <init>(org.apache.hadoop.fs.Path,long,long,java.lang.String[])>(r105, $l12, $l13, $r44);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r43);

     label21:
        i28 = i28 + 1;

        goto label19;

     label22:
        $z2 = virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: boolean exists(org.apache.hadoop.fs.Path)>($r14);

        if $z2 == 0 goto label08;

        virtualinvoke r5.<org.apache.hadoop.fs.FileSystem: boolean delete(org.apache.hadoop.fs.Path,boolean)>($r14, 1);

        goto label08;

     label23:
        return $r9;

        catch java.lang.Exception from label10 to label11 with label12;
    }
}
