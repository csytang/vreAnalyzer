public class org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer extends org.apache.hadoop.mapreduce.Reducer
{
    private static final org.slf4j.Logger log;

    public void <init>()
    {
        org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer r0;

        r0 := @this: org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Reducer: void <init>()>();

        return;
    }

    protected void reduce(org.apache.hadoop.io.IntWritable, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer r0;
        org.apache.hadoop.io.IntWritable r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        int i0, $i1, $i2, $i3;
        org.apache.mahout.math.hadoop.DistributedRowMatrix$MatrixEntryWritable r5;
        org.apache.hadoop.conf.Configuration $r6;
        org.apache.mahout.math.RandomAccessSparseVector $r7;
        boolean $z0, $z1;
        org.apache.mahout.math.SequentialAccessSparseVector $r8;
        org.apache.mahout.math.VectorWritable $r9;
        java.lang.Object $r10;
        double $d0, $d1;
        org.slf4j.Logger $r11, $r13;
        java.lang.Object[] $r12;
        java.lang.Integer $r14, $r15;
        java.lang.Double $r16;
        java.util.Iterator r17;

        r0 := @this: org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r6 = virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        i0 = virtualinvoke $r6.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>("org.apache.mahout.clustering.spectral.common.affinitydimensions", 2147483647);

        $r7 = new org.apache.mahout.math.RandomAccessSparseVector;

        specialinvoke $r7.<org.apache.mahout.math.RandomAccessSparseVector: void <init>(int,int)>(i0, 100);

        r17 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.mahout.math.hadoop.DistributedRowMatrix$MatrixEntryWritable) $r10;

        $i1 = virtualinvoke r5.<org.apache.mahout.math.hadoop.DistributedRowMatrix$MatrixEntryWritable: int getCol()>();

        $d0 = virtualinvoke r5.<org.apache.mahout.math.hadoop.DistributedRowMatrix$MatrixEntryWritable: double getVal()>();

        virtualinvoke $r7.<org.apache.mahout.math.RandomAccessSparseVector: void setQuick(int,double)>($i1, $d0);

        $r11 = <org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer: org.slf4j.Logger log>;

        $z1 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r13 = <org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer: org.slf4j.Logger log>;

        $r12 = newarray (java.lang.Object)[3];

        $i2 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r12[0] = $r14;

        $i3 = virtualinvoke r5.<org.apache.mahout.math.hadoop.DistributedRowMatrix$MatrixEntryWritable: int getCol()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r12[1] = $r15;

        $d1 = virtualinvoke r5.<org.apache.mahout.math.hadoop.DistributedRowMatrix$MatrixEntryWritable: double getVal()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r12[2] = $r16;

        interfaceinvoke $r13.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("(DEBUG - REDUCE) Row[{}], Column[{}], Value[{}]", $r12);

        goto label1;

     label2:
        $r8 = new org.apache.mahout.math.SequentialAccessSparseVector;

        specialinvoke $r8.<org.apache.mahout.math.SequentialAccessSparseVector: void <init>(org.apache.mahout.math.Vector)>($r7);

        $r9 = new org.apache.mahout.math.VectorWritable;

        specialinvoke $r9.<org.apache.mahout.math.VectorWritable: void <init>(org.apache.mahout.math.Vector)>($r8);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Reducer$Context: void write(java.lang.Object,java.lang.Object)>(r1, $r9);

        return;
    }

    protected volatile void reduce(java.lang.Object, java.lang.Iterable, org.apache.hadoop.mapreduce.Reducer$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer r0;
        java.lang.Object r1;
        java.lang.Iterable r2;
        org.apache.hadoop.mapreduce.Reducer$Context r3;
        org.apache.hadoop.io.IntWritable $r4;

        r0 := @this: org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Reducer$Context;

        $r4 = (org.apache.hadoop.io.IntWritable) r1;

        virtualinvoke r0.<org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer: void reduce(org.apache.hadoop.io.IntWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer$Context)>($r4, r2, r3);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/mahout/clustering/spectral/AffinityMatrixInputReducer");

        <org.apache.mahout.clustering.spectral.AffinityMatrixInputReducer: org.slf4j.Logger log> = $r0;

        return;
    }
}
