public class org.hipi.image.RawImage extends org.hipi.image.HipiImage
{
    protected byte[] imageBytes;

    public void <init>()
    {
        org.hipi.image.RawImage r0;

        r0 := @this: org.hipi.image.RawImage;

        specialinvoke r0.<org.hipi.image.HipiImage: void <init>()>();

        r0.<org.hipi.image.RawImage: byte[] imageBytes> = null;

        return;
    }

    public void setRawBytes(byte[])
    {
        org.hipi.image.RawImage r0;
        byte[] r1;

        r0 := @this: org.hipi.image.RawImage;

        r1 := @parameter0: byte[];

        r0.<org.hipi.image.RawImage: byte[] imageBytes> = r1;

        return;
    }

    public byte[] getRawBytes()
    {
        org.hipi.image.RawImage r0;
        byte[] $r1;

        r0 := @this: org.hipi.image.RawImage;

        $r1 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        return $r1;
    }

    public org.hipi.image.HipiImage$HipiImageType getType()
    {
        org.hipi.image.RawImage r0;
        org.hipi.image.HipiImage$HipiImageType $r1;

        r0 := @this: org.hipi.image.RawImage;

        $r1 = <org.hipi.image.HipiImage$HipiImageType: org.hipi.image.HipiImage$HipiImageType RAW>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.hipi.image.RawImage r0;
        int i0, i1, i2, i3, $i4, $i6, i7;
        java.lang.StringBuilder $r3;
        java.lang.Object[] $r4, $r15;
        java.lang.Integer $r5, $r6, $r7;
        java.lang.String $r9, $r12, $r16;
        byte[] $r10, $r11, $r14;
        byte $b5;
        java.lang.Byte $r18;

        r0 := @this: org.hipi.image.RawImage;

        i0 = virtualinvoke r0.<org.hipi.image.RawImage: int getWidth()>();

        i1 = virtualinvoke r0.<org.hipi.image.RawImage: int getHeight()>();

        i2 = virtualinvoke r0.<org.hipi.image.RawImage: int getNumBands()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = newarray (java.lang.Object)[4];

        $r4[0] = "RawImage";

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4[2] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r4[3] = $r7;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %d x %d x %d [", $r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        if $r11 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $r10 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        $i4 = lengthof $r10;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(10, $i4);

     label2:
        i3 = $i6;

        i7 = 0;

     label3:
        if i7 >= i3 goto label4;

        $r15 = newarray (java.lang.Object)[1];

        $r14 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        $b5 = $r14[i7];

        $r18 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b5);

        $r15[0] = $r18;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%0x", $r15);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        i7 = i7 + 1;

        goto label3;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public void set(org.hipi.image.RawImage)
    {
        org.hipi.image.RawImage r0, r1;
        org.hipi.image.HipiImageHeader $r2;
        byte[] $r3;

        r0 := @this: org.hipi.image.RawImage;

        r1 := @parameter0: org.hipi.image.RawImage;

        $r2 = r1.<org.hipi.image.RawImage: org.hipi.image.HipiImageHeader header>;

        r0.<org.hipi.image.RawImage: org.hipi.image.HipiImageHeader header> = $r2;

        $r3 = r1.<org.hipi.image.RawImage: byte[] imageBytes>;

        r0.<org.hipi.image.RawImage: byte[] imageBytes> = $r3;

        return;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.hipi.image.RawImage r0;
        java.io.DataOutput r1;
        org.hipi.image.HipiImageHeader $r2, $r3;
        byte[] $r4, $r5, $r6, $r7;
        int $i0, $i1;
        java.io.IOException $r8;

        r0 := @this: org.hipi.image.RawImage;

        r1 := @parameter0: java.io.DataOutput;

        $r2 = r0.<org.hipi.image.RawImage: org.hipi.image.HipiImageHeader header>;

        if $r2 != null goto label1;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("Cannot serialize image object with null image header.");

        throw $r8;

     label1:
        $r3 = r0.<org.hipi.image.RawImage: org.hipi.image.HipiImageHeader header>;

        virtualinvoke $r3.<org.hipi.image.HipiImageHeader: void write(java.io.DataOutput)>(r1);

        $r4 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        if $r4 != null goto label2;

        interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>(0);

        goto label3;

     label2:
        $r5 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        $i0 = lengthof $r5;

        interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i0);

        $r7 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        $r6 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        $i1 = lengthof $r6;

        interfaceinvoke r1.<java.io.DataOutput: void write(byte[],int,int)>($r7, 0, $i1);

     label3:
        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        org.hipi.image.RawImage r0;
        java.io.DataInput r1;
        int i0;
        org.hipi.image.HipiImageHeader $r2;
        byte[] $r3, $r4;

        r0 := @this: org.hipi.image.RawImage;

        r1 := @parameter0: java.io.DataInput;

        $r2 = new org.hipi.image.HipiImageHeader;

        specialinvoke $r2.<org.hipi.image.HipiImageHeader: void <init>(java.io.DataInput)>(r1);

        r0.<org.hipi.image.RawImage: org.hipi.image.HipiImageHeader header> = $r2;

        i0 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();

        if i0 != 0 goto label1;

        r0.<org.hipi.image.RawImage: byte[] imageBytes> = null;

        goto label2;

     label1:
        $r3 = newarray (byte)[i0];

        r0.<org.hipi.image.RawImage: byte[] imageBytes> = $r3;

        $r4 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        interfaceinvoke r1.<java.io.DataInput: void readFully(byte[])>($r4);

     label2:
        return;
    }

    public java.lang.String hex()
    {
        org.hipi.image.RawImage r0;
        byte[] $r1;
        java.lang.String $r2;

        r0 := @this: org.hipi.image.RawImage;

        $r1 = r0.<org.hipi.image.RawImage: byte[] imageBytes>;

        $r2 = staticinvoke <org.hipi.util.ByteUtils: java.lang.String asHex(byte[])>($r1);

        return $r2;
    }
}
