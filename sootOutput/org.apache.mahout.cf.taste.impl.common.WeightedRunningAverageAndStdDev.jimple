public final class org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev extends org.apache.mahout.cf.taste.impl.common.WeightedRunningAverage implements org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev
{
    private double totalSquaredWeight;
    private double totalWeightedData;
    private double totalWeightedSquaredData;

    public void <init>()
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverage: void <init>()>();

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight> = 0.0;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData> = 0.0;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData> = 0.0;

        return;
    }

    public synchronized void addDatum(double, double)
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverage: void addDatum(double,double)>(d0, d1);

        $d4 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight>;

        $d3 = d1 * d1;

        $d5 = $d4 + $d3;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight> = $d5;

        d2 = d0 * d1;

        $d6 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData>;

        $d7 = $d6 + d2;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData> = $d7;

        $d9 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData>;

        $d8 = d2 * d0;

        $d10 = $d9 + $d8;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData> = $d10;

        return;
    }

    public synchronized void removeDatum(double, double)
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        byte $b0, $b1, $b2;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverage: void removeDatum(double,double)>(d0, d1);

        $d4 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight>;

        $d3 = d1 * d1;

        $d5 = $d4 - $d3;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight> = $d5;

        $d6 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight>;

        $b0 = $d6 cmpg 0.0;

        if $b0 > 0 goto label1;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight> = 0.0;

     label1:
        d2 = d0 * d1;

        $d7 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData>;

        $d8 = $d7 - d2;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData> = $d8;

        $d9 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData>;

        $b1 = $d9 cmpg 0.0;

        if $b1 > 0 goto label2;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData> = 0.0;

     label2:
        $d10 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData>;

        $d11 = d2 * d0;

        $d13 = $d10 - $d11;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData> = $d13;

        $d12 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData>;

        $b2 = $d12 cmpg 0.0;

        if $b2 > 0 goto label3;

        r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData> = 0.0;

     label3:
        return;
    }

    public synchronized void changeDatum(double, double)
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;
        double d0, d1;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public synchronized double getStandardDeviation()
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        d0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double getTotalWeight()>();

        $d1 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedSquaredData>;

        $d5 = $d1 * d0;

        $d3 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData>;

        $d2 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalWeightedData>;

        $d4 = $d3 * $d2;

        $d9 = $d5 - $d4;

        $d7 = d0 * d0;

        $d6 = r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double totalSquaredWeight>;

        $d8 = $d7 - $d6;

        $d10 = $d9 / $d8;

        $d11 = staticinvoke <java.lang.Math: double sqrt(double)>($d10);

        return $d11;
    }

    public org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev inverse()
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        $r1 = new org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        specialinvoke $r1.<org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev: void <init>(org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev)>(r0);

        return $r1;
    }

    public synchronized java.lang.String toString()
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        double $d0, $d1;
        java.lang.String $r2, $r6, $r7;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $d0 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double getAverage()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $d1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: double getStandardDeviation()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        return $r7;
    }

    public volatile org.apache.mahout.cf.taste.impl.common.RunningAverage inverse()
    {
        org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.WeightedRunningAverageAndStdDev: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev inverse()>();

        return $r1;
    }
}
