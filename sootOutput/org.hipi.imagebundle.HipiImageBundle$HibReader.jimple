public class org.hipi.imagebundle.HipiImageBundle$HibReader extends java.lang.Object
{
    private org.hipi.image.HipiImageFactory imageFactory;
    private org.hipi.mapreduce.Culler culler;
    private java.io.DataInputStream dataInputStream;
    private long currentOffset;
    private long startOffset;
    private long endOffset;
    private byte[] sig;
    private org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat;
    private byte[] imageBytes;
    private org.hipi.image.HipiImageHeader imageHeader;
    private org.hipi.image.HipiImage image;

    public void <init>(org.hipi.image.HipiImageFactory, java.lang.Class, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path, long, long) throws java.io.IOException
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        org.hipi.image.HipiImageFactory r1;
        java.lang.Class r2;
        org.apache.hadoop.fs.FileSystem r3;
        org.apache.hadoop.fs.Path r4;
        long l0, $l1, l3, l5;
        byte[] $r5;
        org.hipi.image.HipiImageHeader$HipiImageFormat $r6;
        java.io.DataInputStream $r7, $r20;
        byte $b2, $b4;
        org.hipi.mapreduce.Culler $r8;
        java.lang.Object $r9;
        java.lang.StringBuilder $r10, $r13, $r15;
        java.io.PrintStream $r11, $r17;
        java.lang.Exception $r12;
        java.lang.String $r14, $r16, $r18;
        org.apache.hadoop.fs.FSDataInputStream $r21;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        r1 := @parameter0: org.hipi.image.HipiImageFactory;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.hadoop.fs.FileSystem;

        r4 := @parameter3: org.apache.hadoop.fs.Path;

        l3 := @parameter4: long;

        l0 := @parameter5: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.mapreduce.Culler culler> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset> = 0L;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long startOffset> = 0L;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long endOffset> = 0L;

        $r5 = newarray (byte)[12];

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig> = $r5;

        $r6 = <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat UNDEFINED>;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat> = $r6;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageFactory imageFactory> = r1;

        if r2 == null goto label4;

     label1:
        $r9 = virtualinvoke r2.<java.lang.Class: java.lang.Object newInstance()>();

        $r8 = (org.hipi.mapreduce.Culler) $r9;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.mapreduce.Culler culler> = $r8;

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fatal error while attempting to instantiate image culler: ");

        $r16 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r18 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getLocalizedMessage()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r18);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label4:
        $r20 = new java.io.DataInputStream;

        $r21 = virtualinvoke r3.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path)>(r4);

        specialinvoke $r20.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r21);

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream> = $r20;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long startOffset> = l3;

     label5:
        $b4 = l3 cmp 0L;

        if $b4 <= 0 goto label7;

        $r7 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream>;

        l5 = virtualinvoke $r7.<java.io.DataInputStream: long skip(long)>(l3);

        $b2 = l5 cmp 0L;

        if $b2 > 0 goto label6;

        goto label7;

     label6:
        l3 = l3 - l5;

        goto label5;

     label7:
        $l1 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long startOffset>;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset> = $l1;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long endOffset> = l0;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>(org.hipi.image.HipiImageFactory, java.lang.Class, org.apache.hadoop.fs.FileSystem, org.apache.hadoop.fs.Path) throws java.io.IOException
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        org.hipi.image.HipiImageFactory r1;
        java.lang.Class r2;
        org.apache.hadoop.fs.FileSystem r3;
        org.apache.hadoop.fs.Path r4;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        r1 := @parameter0: org.hipi.image.HipiImageFactory;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.hadoop.fs.FileSystem;

        r4 := @parameter3: org.apache.hadoop.fs.Path;

        specialinvoke r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: void <init>(org.hipi.image.HipiImageFactory,java.lang.Class,org.apache.hadoop.fs.FileSystem,org.apache.hadoop.fs.Path,long,long)>(r1, r2, r3, r4, 0L, 0L);

        return;
    }

    public float getProgress()
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        long $l0, $l1, $l2, $l3, $l7, $l8, $l9, $l10, $l11, $l12, $l13;
        byte $b4, $b5, $b6;
        float $f1, $f2, $f3;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        $l1 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long endOffset>;

        $l0 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long startOffset>;

        $l2 = $l1 - $l0;

        $l3 = $l2 + 1L;

        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label1;

        $l8 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $l7 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long startOffset>;

        $l9 = $l8 - $l7;

        $f1 = (float) $l9;

        $l11 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long endOffset>;

        $l10 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long startOffset>;

        $l12 = $l11 - $l10;

        $l13 = $l12 + 1L;

        $f2 = (float) $l13;

        $f3 = $f1 / $f2;

        goto label2;

     label1:
        $f3 = 0.0F;

     label2:
        $b5 = $f3 cmpl 1.0F;

        if $b5 <= 0 goto label3;

        return 1.0F;

     label3:
        $b6 = $f3 cmpg 0.0F;

        if $b6 >= 0 goto label4;

        return 0.0F;

     label4:
        return $f3;
    }

    public void close() throws java.io.IOException
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        java.io.DataInputStream $r1, $r2;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        $r1 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream>;

        if $r1 == null goto label1;

        $r2 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream>;

        virtualinvoke $r2.<java.io.DataInputStream: void close()>();

     label1:
        return;
    }

    public boolean nextKeyValue()
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        int i0, i1, i2, $i5, $i10, $i11, $i13, $i15, $i16, $i22, $i24, $i25, $i26, $i29, $i34, $i35, $i38, $i43, $i44, $i46, $i47, $i50, $i51, $i55, $i56, $i58, i68, i69, $i70, $i71;
        org.hipi.image.io.ImageDecoder r3;
        org.hipi.image.HipiImageHeader$HipiImageFormat $r4, $r24, $r25, $r26, $r36, $r99, $r107, $r118, $r123;
        long $l3, $l45, $l48, $l49, $l52, $l53, $l54, $l57, $l60, $l61, $l62, $l63, $l64, $l65, $l66, $l67;
        byte $b4, $b6, $b9, $b12, $b17, $b19, $b20, $b28, $b31, $b33, $b37, $b39, $b41, $b59;
        byte[] $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r34, $r38, $r66, $r72, $r78, $r124, r126;
        java.io.DataInputStream $r6, $r21, $r23, $r27, $r77;
        short $s7, $s8, $s14, $s18, $s21, $s23, $s27, $s30, $s32, $s36, $s40, $s42;
        org.hipi.image.HipiImageHeader $r28, $r37, $r43, $r49, r127, $r128;
        java.io.ByteArrayInputStream $r29, $r35;
        org.hipi.image.HipiImageFactory $r30, $r129;
        org.hipi.mapreduce.Culler $r31, $r42, $r44;
        org.hipi.image.HipiImage$HipiImageType $r32;
        int[] $r33;
        org.hipi.image.RawImage $r39;
        java.io.IOException $r40, $r47, $r51, $r56, $r60, $r70, $r101, $r109;
        java.lang.RuntimeException $r41, $r117;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r45, $r46, $r50, $r52, $r54, $r55, $r58, $r59, $r61, $r63, $r67, $r68, $r73, $r75, $r81, $r87, $r89, $r91, $r104, $r105, $r110;
        java.util.HashMap $r48;
        java.lang.String $r53, $r57, $r62, $r65, $r69, $r79, $r80, $r85, $r86, $r92, $r96, $r100, $r106, $r112, $r114, $r119, $r121, $r122;
        java.lang.Integer $r64;
        java.lang.Object[] $r71, $r84, $r95, $r102, $r116;
        java.io.PrintStream $r74, $r82, $r88, $r94, $r103, $r115;
        java.lang.Exception $r76, $r83, $r90;
        java.lang.Long $r93, $r97, $r111, $r113, $r120;
        java.io.EOFException $r98;
        java.lang.IllegalArgumentException $r108;
        org.hipi.image.HipiImage $r130;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

     label01:
        $r4 = <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat UNDEFINED>;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat> = $r4;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = null;

        $l3 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long endOffset>;

        $b4 = $l3 cmp 0L;

        if $b4 <= 0 goto label03;

        $l60 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $l61 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long endOffset>;

        $b59 = $l60 cmp $l61;

        if $b59 <= 0 goto label03;

     label02:
        return 0;

     label03:
        i68 = 0;

        $r6 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream>;

        $r5 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        i69 = virtualinvoke $r6.<java.io.DataInputStream: int read(byte[])>($r5);

     label04:
        $r124 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $i70 = lengthof $r124;

        $i71 = $i70 - i68;

        if i69 >= $i71 goto label05;

        if i69 <= 0 goto label05;

        i68 = i68 + i69;

        $r77 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream>;

        $r78 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $r66 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $i55 = lengthof $r66;

        $i56 = $i55 - i68;

        i69 = virtualinvoke $r77.<java.io.DataInputStream: int read(byte[],int,int)>($r78, i68, $i56);

        goto label04;

     label05:
        if i69 > 0 goto label07;

     label06:
        return 0;

     label07:
        $r7 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $i5 = lengthof $r7;

        if i69 >= $i5 goto label08;

        $r70 = new java.io.IOException;

        $r71 = newarray (java.lang.Object)[1];

        $r72 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $i58 = lengthof $r72;

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i58);

        $r71[0] = $r64;

        $r65 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to read %d-byte HIB image signature that delineates image record boundaries.", $r71);

        specialinvoke $r70.<java.io.IOException: void <init>(java.lang.String)>($r65);

        throw $r70;

     label08:
        $r8 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b6 = $r8[0];

        $s7 = $b6 & 255;

        $i10 = $s7 << 24;

        $r9 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b9 = $r9[1];

        $s8 = $b9 & 255;

        $i11 = $s8 << 16;

        $i13 = $i10 | $i11;

        $r10 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b12 = $r10[2];

        $s14 = $b12 & 255;

        $i15 = $s14 << 8;

        $i16 = $i13 | $i15;

        $r11 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b17 = $r11[3];

        $s18 = $b17 & 255;

        i0 = $i16 | $s18;

        if i0 > 0 goto label09;

        $r56 = new java.io.IOException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found image header length <= 0 in HIB at offset: ");

        $l57 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l57);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r56.<java.io.IOException: void <init>(java.lang.String)>($r69);

        throw $r56;

     label09:
        $r12 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b20 = $r12[4];

        $s21 = $b20 & 255;

        $i22 = $s21 << 24;

        $r13 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b19 = $r13[5];

        $s23 = $b19 & 255;

        $i24 = $s23 << 16;

        $i25 = $i22 | $i24;

        $r14 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b28 = $r14[6];

        $s27 = $b28 & 255;

        $i26 = $s27 << 8;

        $i29 = $i25 | $i26;

        $r15 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b31 = $r15[7];

        $s30 = $b31 & 255;

        i1 = $i29 | $s30;

        if i1 > 0 goto label10;

        $r51 = new java.io.IOException;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found image data segment length <= 0 in HIB at offset: ");

        $l53 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l53);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.io.IOException: void <init>(java.lang.String)>($r53);

        throw $r51;

     label10:
        $r17 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b33 = $r17[8];

        $s32 = $b33 & 255;

        $i34 = $s32 << 24;

        $r16 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b37 = $r16[9];

        $s36 = $b37 & 255;

        $i35 = $s36 << 16;

        $i38 = $i34 | $i35;

        $r19 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b41 = $r19[10];

        $s42 = $b41 & 255;

        $i43 = $s42 << 8;

        $i44 = $i38 | $i43;

        $r18 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] sig>;

        $b39 = $r18[11];

        $s40 = $b39 & 255;

        i2 = $i44 | $s40;

     label11:
        $r24 = staticinvoke <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat fromInteger(int)>(i2);

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat> = $r24;

     label12:
        goto label14;

     label13:
        $r108 := @caughtexception;

        $r109 = new java.io.IOException;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found invalid image storage format in HIB at offset: ");

        $l64 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l64);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r109.<java.io.IOException: void <init>(java.lang.String)>($r106);

        throw $r109;

     label14:
        $r26 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat>;

        $r25 = <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat UNDEFINED>;

        if $r26 != $r25 goto label15;

        $r60 = new java.io.IOException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found UNDEFINED image storage format in HIB at offset: ");

        $l54 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l54);

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r60.<java.io.IOException: void <init>(java.lang.String)>($r62);

        throw $r60;

     label15:
        r126 = newarray (byte)[i0];

        $r20 = newarray (byte)[i1];

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes> = $r20;

        $r21 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream>;

        virtualinvoke $r21.<java.io.DataInputStream: void readFully(byte[])>(r126);

        $r23 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: java.io.DataInputStream dataInputStream>;

        $r22 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes>;

        virtualinvoke $r23.<java.io.DataInputStream: void readFully(byte[])>($r22);

        $l48 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $i47 = 12 + i0;

        $i46 = $i47 + i1;

        $l49 = (long) $i46;

        $l45 = $l48 + $l49;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset> = $l45;

        $r27 = new java.io.DataInputStream;

        $r29 = new java.io.ByteArrayInputStream;

        specialinvoke $r29.<java.io.ByteArrayInputStream: void <init>(byte[])>(r126);

        specialinvoke $r27.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r29);

        $r28 = new org.hipi.image.HipiImageHeader;

        specialinvoke $r28.<org.hipi.image.HipiImageHeader: void <init>(java.io.DataInput)>($r27);

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader> = $r28;

        $r35 = new java.io.ByteArrayInputStream;

        $r34 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes>;

        specialinvoke $r35.<java.io.ByteArrayInputStream: void <init>(byte[])>($r34);

        $r36 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat>;

        r3 = staticinvoke <org.hipi.image.io.CodecManager: org.hipi.image.io.ImageDecoder getDecoder(org.hipi.image.HipiImageHeader$HipiImageFormat)>($r36);

        if r3 != null goto label16;

        $r47 = new java.io.IOException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported storage format in image record ending at byte offset: ");

        $l52 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r58 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l52);

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.io.IOException: void <init>(java.lang.String)>($r57);

        throw $r47;

     label16:
        $r31 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.mapreduce.Culler culler>;

        if $r31 == null goto label19;

        $r44 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.mapreduce.Culler culler>;

        $z2 = virtualinvoke $r44.<org.hipi.mapreduce.Culler: boolean includeExifDataInHeader()>();

        if $z2 == 0 goto label17;

        virtualinvoke $r35.<java.io.ByteArrayInputStream: void mark(int)>(2147483647);

        r127 = interfaceinvoke r3.<org.hipi.image.io.ImageDecoder: org.hipi.image.HipiImageHeader decodeHeader(java.io.InputStream,boolean)>($r35, 1);

        virtualinvoke $r35.<java.io.ByteArrayInputStream: void reset()>();

        $r49 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader>;

        $r48 = virtualinvoke r127.<org.hipi.image.HipiImageHeader: java.util.HashMap getAllExifData()>();

        virtualinvoke $r49.<org.hipi.image.HipiImageHeader: void setExifData(java.util.HashMap)>($r48);

     label17:
        $r42 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.mapreduce.Culler culler>;

        $r43 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader>;

        $z1 = virtualinvoke $r42.<org.hipi.mapreduce.Culler: boolean cull(org.hipi.image.HipiImageHeader)>($r43);

        if $z1 == 0 goto label19;

        $z0 = virtualinvoke r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: boolean nextKeyValue()>();

     label18:
        return $z0;

     label19:
        $r33 = <org.hipi.imagebundle.HipiImageBundle$1: int[] $SwitchMap$org$hipi$image$HipiImage$HipiImageType>;

        $r30 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageFactory imageFactory>;

        $r32 = virtualinvoke $r30.<org.hipi.image.HipiImageFactory: org.hipi.image.HipiImage$HipiImageType getType()>();

        $i50 = virtualinvoke $r32.<org.hipi.image.HipiImage$HipiImageType: int ordinal()>();

        $i51 = $r33[$i50];

        tableswitch($i51)
        {
            case 1: goto label20;
            case 2: goto label20;
            case 3: goto label24;
            case 4: goto label29;
            default: goto label29;
        };

     label20:
        $r128 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader>;

        $r129 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageFactory imageFactory>;

        $r130 = interfaceinvoke r3.<org.hipi.image.io.ImageDecoder: org.hipi.image.HipiImage decodeImage(java.io.InputStream,org.hipi.image.HipiImageHeader,org.hipi.image.HipiImageFactory,boolean)>($r35, $r128, $r129, 1);

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = $r130;

     label21:
        goto label30;

     label22:
        $r76 := @caughtexception;

        $r74 = <java.lang.System: java.io.PrintStream err>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Runtime exception while attempting to decode raster image: ");

        $r86 = virtualinvoke $r76.<java.lang.Exception: java.lang.String getMessage()>();

        $r87 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86);

        $r85 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r74.<java.io.PrintStream: void println(java.lang.String)>($r85);

        virtualinvoke $r76.<java.lang.Exception: void printStackTrace()>();

        $z4 = virtualinvoke r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: boolean nextKeyValue()>();

     label23:
        return $z4;

     label24:
        $r39 = new org.hipi.image.RawImage;

        specialinvoke $r39.<org.hipi.image.RawImage: void <init>()>();

        $r37 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader>;

        virtualinvoke $r39.<org.hipi.image.RawImage: void setHeader(org.hipi.image.HipiImageHeader)>($r37);

        $r38 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes>;

        virtualinvoke $r39.<org.hipi.image.RawImage: void setRawBytes(byte[])>($r38);

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = $r39;

     label25:
        goto label28;

     label26:
        $r90 := @caughtexception;

        $r88 = <java.lang.System: java.io.PrintStream err>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Runtime exception while attempting to create RawImage: ");

        $r80 = virtualinvoke $r90.<java.lang.Exception: java.lang.String getMessage()>();

        $r81 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80);

        $r79 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r88.<java.io.PrintStream: void println(java.lang.String)>($r79);

        virtualinvoke $r90.<java.lang.Exception: void printStackTrace()>();

        $z3 = virtualinvoke r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: boolean nextKeyValue()>();

     label27:
        return $z3;

     label28:
        $r41 = new java.lang.RuntimeException;

        specialinvoke $r41.<java.lang.RuntimeException: void <init>(java.lang.String)>("Support for RAW image type not yet implemented.");

        throw $r41;

     label29:
        $r40 = new java.io.IOException;

        specialinvoke $r40.<java.io.IOException: void <init>(java.lang.String)>("Unexpected image type. Cannot proceed.");

        throw $r40;

     label30:
        return 1;

     label31:
        $r98 := @caughtexception;

        $r94 = <java.lang.System: java.io.PrintStream err>;

        $r95 = newarray (java.lang.Object)[3];

        $r92 = virtualinvoke $r98.<java.io.EOFException: java.lang.String getMessage()>();

        $r95[0] = $r92;

        $l62 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r93 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l62);

        $r95[1] = $r93;

        $l65 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long endOffset>;

        $r111 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l65);

        $r95[2] = $r111;

        $r112 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("EOF exception [%s] while decoding HIB image record ending at byte offset [%d]", $r95);

        virtualinvoke $r94.<java.io.PrintStream: void println(java.lang.String)>($r112);

        virtualinvoke $r98.<java.io.EOFException: void printStackTrace()>();

        $r107 = <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat UNDEFINED>;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat> = $r107;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = null;

        return 0;

     label32:
        $r101 := @caughtexception;

        $r103 = <java.lang.System: java.io.PrintStream err>;

        $r102 = newarray (java.lang.Object)[2];

        $r121 = virtualinvoke $r101.<java.io.IOException: java.lang.String getMessage()>();

        $r102[0] = $r121;

        $l67 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r120 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l67);

        $r102[1] = $r120;

        $r119 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("IO exception [%s] while decoding HIB image record ending at byte offset [%d]", $r102);

        virtualinvoke $r103.<java.io.PrintStream: void println(java.lang.String)>($r119);

        virtualinvoke $r101.<java.io.IOException: void printStackTrace()>();

        $r118 = <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat UNDEFINED>;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat> = $r118;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = null;

        return 0;

     label33:
        $r117 := @caughtexception;

        $r115 = <java.lang.System: java.io.PrintStream err>;

        $r116 = newarray (java.lang.Object)[2];

        $r114 = virtualinvoke $r117.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r116[0] = $r114;

        $l66 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r113 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l66);

        $r116[1] = $r113;

        $r122 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Runtime exception [%s] while decoding HIB image record ending at byte offset [%d]", $r116);

        virtualinvoke $r115.<java.io.PrintStream: void println(java.lang.String)>($r122);

        virtualinvoke $r117.<java.lang.RuntimeException: void printStackTrace()>();

        $r123 = <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat UNDEFINED>;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat> = $r123;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = null;

        return 0;

     label34:
        $r83 := @caughtexception;

        $r82 = <java.lang.System: java.io.PrintStream err>;

        $r84 = newarray (java.lang.Object)[2];

        $r100 = virtualinvoke $r83.<java.lang.Exception: java.lang.String getMessage()>();

        $r84[0] = $r100;

        $l63 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: long currentOffset>;

        $r97 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l63);

        $r84[1] = $r97;

        $r96 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unexpected exception [%s] while decoding HIB image record ending at byte offset [%d]", $r84);

        virtualinvoke $r82.<java.io.PrintStream: void println(java.lang.String)>($r96);

        virtualinvoke $r83.<java.lang.Exception: void printStackTrace()>();

        $r99 = <org.hipi.image.HipiImageHeader$HipiImageFormat: org.hipi.image.HipiImageHeader$HipiImageFormat UNDEFINED>;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat> = $r99;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader> = null;

        r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image> = null;

        return 0;

        catch java.lang.IllegalArgumentException from label11 to label12 with label13;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.io.EOFException from label01 to label02 with label31;
        catch java.io.EOFException from label03 to label06 with label31;
        catch java.io.EOFException from label07 to label18 with label31;
        catch java.io.EOFException from label19 to label23 with label31;
        catch java.io.EOFException from label24 to label27 with label31;
        catch java.io.EOFException from label28 to label30 with label31;
        catch java.io.IOException from label01 to label02 with label32;
        catch java.io.IOException from label03 to label06 with label32;
        catch java.io.IOException from label07 to label18 with label32;
        catch java.io.IOException from label19 to label23 with label32;
        catch java.io.IOException from label24 to label27 with label32;
        catch java.io.IOException from label28 to label30 with label32;
        catch java.lang.RuntimeException from label01 to label02 with label33;
        catch java.lang.RuntimeException from label03 to label06 with label33;
        catch java.lang.RuntimeException from label07 to label18 with label33;
        catch java.lang.RuntimeException from label19 to label23 with label33;
        catch java.lang.RuntimeException from label24 to label27 with label33;
        catch java.lang.RuntimeException from label28 to label30 with label33;
        catch java.lang.Exception from label01 to label02 with label34;
        catch java.lang.Exception from label03 to label06 with label34;
        catch java.lang.Exception from label07 to label18 with label34;
        catch java.lang.Exception from label19 to label23 with label34;
        catch java.lang.Exception from label24 to label27 with label34;
        catch java.lang.Exception from label28 to label30 with label34;
    }

    public byte[] getImageBytes()
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        byte[] $r1;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        $r1 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: byte[] imageBytes>;

        return $r1;
    }

    public org.hipi.image.HipiImageHeader$HipiImageFormat getImageStorageFormat()
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        org.hipi.image.HipiImageHeader$HipiImageFormat $r1;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        $r1 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader$HipiImageFormat imageFormat>;

        return $r1;
    }

    public org.hipi.image.HipiImageHeader getCurrentKey()
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        org.hipi.image.HipiImageHeader $r1;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        $r1 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImageHeader imageHeader>;

        return $r1;
    }

    public org.hipi.image.HipiImage getCurrentValue()
    {
        org.hipi.imagebundle.HipiImageBundle$HibReader r0;
        org.hipi.image.HipiImage $r1;

        r0 := @this: org.hipi.imagebundle.HipiImageBundle$HibReader;

        $r1 = r0.<org.hipi.imagebundle.HipiImageBundle$HibReader: org.hipi.image.HipiImage image>;

        return $r1;
    }
}
