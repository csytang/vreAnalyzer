public final class org.apache.mahout.classifier.df.tools.Frequencies extends org.apache.hadoop.conf.Configured implements org.apache.hadoop.util.Tool
{
    private static final org.slf4j.Logger log;

    private void <init>()
    {
        org.apache.mahout.classifier.df.tools.Frequencies r0;

        r0 := @this: org.apache.mahout.classifier.df.tools.Frequencies;

        specialinvoke r0.<org.apache.hadoop.conf.Configured: void <init>()>();

        return;
    }

    public int run(java.lang.String[]) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.df.tools.Frequencies r0;
        java.lang.String[] r1;
        org.apache.commons.cli2.option.DefaultOption r5, r6, r7;
        org.apache.commons.cli2.Group r8;
        org.apache.commons.cli2.CommandLine r9;
        java.lang.String r10, r11, $r43;
        org.apache.commons.cli2.builder.DefaultOptionBuilder $r12, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r27, $r30, $r31, $r32, $r34, $r35;
        org.apache.commons.cli2.builder.ArgumentBuilder $r13, $r17, $r19, $r20, $r26, $r29;
        org.apache.commons.cli2.builder.GroupBuilder $r14, $r33, $r36, $r37, $r38;
        org.apache.commons.cli2.Argument $r22, $r28;
        boolean $z0;
        java.lang.Object $r39, $r42;
        org.apache.commons.cli2.commandline.Parser $r40;
        org.slf4j.Logger $r41, $r44, $r46;
        org.apache.commons.cli2.OptionException $r45;

        r0 := @this: org.apache.mahout.classifier.df.tools.Frequencies;

        r1 := @parameter0: java.lang.String[];

        $r12 = new org.apache.commons.cli2.builder.DefaultOptionBuilder;

        specialinvoke $r12.<org.apache.commons.cli2.builder.DefaultOptionBuilder: void <init>()>();

        $r13 = new org.apache.commons.cli2.builder.ArgumentBuilder;

        specialinvoke $r13.<org.apache.commons.cli2.builder.ArgumentBuilder: void <init>()>();

        $r14 = new org.apache.commons.cli2.builder.GroupBuilder;

        specialinvoke $r14.<org.apache.commons.cli2.builder.GroupBuilder: void <init>()>();

        $r16 = virtualinvoke $r12.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("data");

        $r15 = virtualinvoke $r16.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("d");

        $r18 = virtualinvoke $r15.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withRequired(boolean)>(1);

        $r17 = virtualinvoke $r13.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withName(java.lang.String)>("path");

        $r20 = virtualinvoke $r17.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMinimum(int)>(1);

        $r19 = virtualinvoke $r20.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMaximum(int)>(1);

        $r22 = virtualinvoke $r19.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.Argument create()>();

        $r21 = virtualinvoke $r18.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withArgument(org.apache.commons.cli2.Argument)>($r22);

        $r23 = virtualinvoke $r21.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("Data path");

        r5 = virtualinvoke $r23.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r25 = virtualinvoke $r12.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("dataset");

        $r24 = virtualinvoke $r25.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("ds");

        $r27 = virtualinvoke $r24.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withRequired(boolean)>(1);

        $r26 = virtualinvoke $r13.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withName(java.lang.String)>("path");

        $r29 = virtualinvoke $r26.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMinimum(int)>(1);

        $r28 = virtualinvoke $r29.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.Argument create()>();

        $r31 = virtualinvoke $r27.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withArgument(org.apache.commons.cli2.Argument)>($r28);

        $r32 = virtualinvoke $r31.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("dataset path");

        r6 = virtualinvoke $r32.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r30 = virtualinvoke $r12.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("help");

        $r34 = virtualinvoke $r30.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("Print out help");

        $r35 = virtualinvoke $r34.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("h");

        r7 = virtualinvoke $r35.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r33 = virtualinvoke $r14.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withName(java.lang.String)>("Options");

        $r37 = virtualinvoke $r33.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r5);

        $r38 = virtualinvoke $r37.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r6);

        $r36 = virtualinvoke $r38.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r7);

        r8 = virtualinvoke $r36.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.Group create()>();

     label1:
        $r40 = new org.apache.commons.cli2.commandline.Parser;

        specialinvoke $r40.<org.apache.commons.cli2.commandline.Parser: void <init>()>();

        virtualinvoke $r40.<org.apache.commons.cli2.commandline.Parser: void setGroup(org.apache.commons.cli2.Group)>(r8);

        r9 = virtualinvoke $r40.<org.apache.commons.cli2.commandline.Parser: org.apache.commons.cli2.CommandLine parse(java.lang.String[])>(r1);

        $z0 = interfaceinvoke r9.<org.apache.commons.cli2.CommandLine: boolean hasOption(org.apache.commons.cli2.Option)>(r7);

        if $z0 == 0 goto label3;

        staticinvoke <org.apache.mahout.common.CommandLineUtil: void printHelp(org.apache.commons.cli2.Group)>(r8);

     label2:
        return 0;

     label3:
        $r39 = interfaceinvoke r9.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r5);

        r10 = virtualinvoke $r39.<java.lang.Object: java.lang.String toString()>();

        $r42 = interfaceinvoke r9.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r6);

        r11 = virtualinvoke $r42.<java.lang.Object: java.lang.String toString()>();

        $r41 = <org.apache.mahout.classifier.df.tools.Frequencies: org.slf4j.Logger log>;

        interfaceinvoke $r41.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Data path : {}", r10);

        $r46 = <org.apache.mahout.classifier.df.tools.Frequencies: org.slf4j.Logger log>;

        interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Dataset path : {}", r11);

        specialinvoke r0.<org.apache.mahout.classifier.df.tools.Frequencies: void runTool(java.lang.String,java.lang.String)>(r10, r11);

     label4:
        goto label6;

     label5:
        $r45 := @caughtexception;

        $r44 = <org.apache.mahout.classifier.df.tools.Frequencies: org.slf4j.Logger log>;

        $r43 = virtualinvoke $r45.<org.apache.commons.cli2.OptionException: java.lang.String toString()>();

        interfaceinvoke $r44.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r43, $r45);

        staticinvoke <org.apache.mahout.common.CommandLineUtil: void printHelp(org.apache.commons.cli2.Group)>(r8);

     label6:
        return 0;

        catch org.apache.commons.cli2.OptionException from label1 to label2 with label5;
        catch org.apache.commons.cli2.OptionException from label3 to label4 with label5;
    }

    private void runTool(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.df.tools.Frequencies r0;
        java.lang.String r1, r2, $r19;
        org.apache.hadoop.fs.FileSystem r3;
        org.apache.hadoop.fs.Path r4, $r12, $r13, $r17;
        int[][] r8;
        int i0, i1;
        int[] r10;
        org.apache.hadoop.conf.Configuration $r11, $r16;
        org.apache.mahout.classifier.df.tools.FrequenciesJob $r14;
        org.slf4j.Logger $r15, $r18, $r20;

        r0 := @this: org.apache.mahout.classifier.df.tools.Frequencies;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r11 = virtualinvoke r0.<org.apache.mahout.classifier.df.tools.Frequencies: org.apache.hadoop.conf.Configuration getConf()>();

        r3 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(org.apache.hadoop.conf.Configuration)>($r11);

        r4 = virtualinvoke r3.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.Path getWorkingDirectory()>();

        $r13 = new org.apache.hadoop.fs.Path;

        specialinvoke $r13.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r1);

        $r12 = new org.apache.hadoop.fs.Path;

        specialinvoke $r12.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r2);

        $r15 = <org.apache.mahout.classifier.df.tools.Frequencies: org.slf4j.Logger log>;

        interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>("Computing the frequencies...");

        $r14 = new org.apache.mahout.classifier.df.tools.FrequenciesJob;

        $r17 = new org.apache.hadoop.fs.Path;

        specialinvoke $r17.<org.apache.hadoop.fs.Path: void <init>(org.apache.hadoop.fs.Path,java.lang.String)>(r4, "output");

        specialinvoke $r14.<org.apache.mahout.classifier.df.tools.FrequenciesJob: void <init>(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)>($r17, $r13, $r12);

        $r16 = virtualinvoke r0.<org.apache.mahout.classifier.df.tools.Frequencies: org.apache.hadoop.conf.Configuration getConf()>();

        r8 = virtualinvoke $r14.<org.apache.mahout.classifier.df.tools.FrequenciesJob: int[][] run(org.apache.hadoop.conf.Configuration)>($r16);

        $r18 = <org.apache.mahout.classifier.df.tools.Frequencies: org.slf4j.Logger log>;

        interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("counts[partition][class]");

        i0 = lengthof r8;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r10 = r8[i1];

        $r20 = <org.apache.mahout.classifier.df.tools.Frequencies: org.slf4j.Logger log>;

        $r19 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r10);

        interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>($r19);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        org.apache.hadoop.conf.Configuration $r1;
        org.apache.mahout.classifier.df.tools.Frequencies $r2;

        r0 := @parameter0: java.lang.String[];

        $r1 = new org.apache.hadoop.conf.Configuration;

        specialinvoke $r1.<org.apache.hadoop.conf.Configuration: void <init>()>();

        $r2 = new org.apache.mahout.classifier.df.tools.Frequencies;

        specialinvoke $r2.<org.apache.mahout.classifier.df.tools.Frequencies: void <init>()>();

        staticinvoke <org.apache.hadoop.util.ToolRunner: int run(org.apache.hadoop.conf.Configuration,org.apache.hadoop.util.Tool,java.lang.String[])>($r1, $r2, r0);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "org/apache/mahout/classifier/df/tools/Frequencies");

        <org.apache.mahout.classifier.df.tools.Frequencies: org.slf4j.Logger log> = $r0;

        return;
    }
}
