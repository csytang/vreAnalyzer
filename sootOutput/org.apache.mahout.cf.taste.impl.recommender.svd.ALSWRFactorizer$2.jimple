class org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2 extends java.lang.Object implements java.lang.Runnable
{
    final org.apache.mahout.cf.taste.model.PreferenceArray val$itemPrefs;
    final org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features val$features;
    final org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver val$implicitFeedbackSolver;
    final long val$itemID;
    final org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0;

    void <init>(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer, org.apache.mahout.cf.taste.model.PreferenceArray, org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features, org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver, long)
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2 r0;
        org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer r1;
        org.apache.mahout.cf.taste.model.PreferenceArray r2;
        org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features r3;
        org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver r4;
        long l0;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer;

        r2 := @parameter1: org.apache.mahout.cf.taste.model.PreferenceArray;

        r3 := @parameter2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features;

        r4 := @parameter3: org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver;

        l0 := @parameter4: long;

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0> = r1;

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.model.PreferenceArray val$itemPrefs> = r2;

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features val$features> = r3;

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver val$implicitFeedbackSolver> = r4;

        r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: long val$itemID> = l0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2 r0;
        org.apache.mahout.cf.taste.model.Preference r2;
        long l0, $l2;
        java.util.ArrayList $r3;
        org.apache.mahout.cf.taste.model.PreferenceArray $r4, $r6, $r14;
        boolean $z0, $z1;
        org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer $r5, $r8, $r9, $r11, $r13, $r17;
        org.apache.mahout.math.Vector $r7, $r15, $r19, $r23;
        double $d0;
        int $i1, $i3, $i4;
        org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features $r10, $r20;
        java.lang.Integer $r12, $r21;
        org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver $r16;
        java.lang.Object $r18;
        java.util.Iterator r22;

        r0 := @this: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.model.PreferenceArray val$itemPrefs>;

        r22 = interfaceinvoke $r4.<org.apache.mahout.cf.taste.model.PreferenceArray: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.cf.taste.model.Preference) $r18;

        l0 = interfaceinvoke r2.<org.apache.mahout.cf.taste.model.Preference: long getUserID()>();

        $r20 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features val$features>;

        $r17 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0>;

        $r21 = virtualinvoke $r17.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer: java.lang.Integer userIndex(long)>(l0);

        $i4 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();

        $r19 = virtualinvoke $r20.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features: org.apache.mahout.math.Vector getUserFeatureColumn(int)>($i4);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label1;

     label2:
        $r5 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0>;

        $z1 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer: boolean access$200(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)>($r5);

        if $z1 == 0 goto label3;

        $r16 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver val$implicitFeedbackSolver>;

        $r13 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0>;

        $r14 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.model.PreferenceArray val$itemPrefs>;

        $r15 = virtualinvoke $r13.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer: org.apache.mahout.math.Vector sparseItemRatingVector(org.apache.mahout.cf.taste.model.PreferenceArray)>($r14);

        $r23 = virtualinvoke $r16.<org.apache.mahout.math.als.ImplicitFeedbackAlternatingLeastSquaresSolver: org.apache.mahout.math.Vector solve(org.apache.mahout.math.Vector)>($r15);

        goto label4;

     label3:
        $r6 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.model.PreferenceArray val$itemPrefs>;

        $r7 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer: org.apache.mahout.math.Vector ratingVector(org.apache.mahout.cf.taste.model.PreferenceArray)>($r6);

        $r8 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0>;

        $d0 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer: double access$300(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)>($r8);

        $r9 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0>;

        $i1 = staticinvoke <org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer: int access$100(org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer)>($r9);

        $r23 = staticinvoke <org.apache.mahout.math.als.AlternatingLeastSquaresSolver: org.apache.mahout.math.Vector solve(java.lang.Iterable,org.apache.mahout.math.Vector,double,int)>($r3, $r7, $d0, $i1);

     label4:
        $r10 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features val$features>;

        $r11 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer this$0>;

        $l2 = r0.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$2: long val$itemID>;

        $r12 = virtualinvoke $r11.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer: java.lang.Integer itemIndex(long)>($l2);

        $i3 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        virtualinvoke $r10.<org.apache.mahout.cf.taste.impl.recommender.svd.ALSWRFactorizer$Features: void setFeatureColumnInM(int,org.apache.mahout.math.Vector)>($i3, $r23);

        return;
    }
}
