public final class org.apache.mahout.classifier.sequencelearning.hmm.RandomSequenceGenerator extends java.lang.Object
{

    private void <init>()
    {
        org.apache.mahout.classifier.sequencelearning.hmm.RandomSequenceGenerator r0;

        r0 := @this: org.apache.mahout.classifier.sequencelearning.hmm.RandomSequenceGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        org.apache.commons.cli2.option.DefaultOption r3, r4, r5;
        org.apache.commons.cli2.Group r6;
        org.apache.commons.cli2.CommandLine r7;
        java.lang.String r8, r9, $r52;
        int i0, i1, i3, i4;
        org.apache.mahout.classifier.sequencelearning.hmm.HmmModel r10;
        org.apache.commons.cli2.builder.ArgumentBuilder $r13, $r17, $r19, $r20, $r26, $r27, $r29, $r34, $r39, $r40;
        org.apache.commons.cli2.builder.DefaultOptionBuilder $r14, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r28, $r30, $r32, $r33, $r35, $r36, $r37, $r43;
        org.apache.commons.cli2.Argument $r22, $r31, $r38;
        org.apache.commons.cli2.builder.GroupBuilder $r41, $r42, $r44, $r45, $r46;
        java.lang.Object $r47, $r48, $r51;
        org.apache.commons.cli2.commandline.Parser $r49;
        java.io.FileInputStream $r50;
        java.io.DataInputStream $r53;
        java.lang.Throwable $r54, $r58, $r59, $r60, $r61, $r62, r65, r76;
        org.apache.commons.cli2.OptionException $r57;
        long $l2;
        int[] r70;
        java.io.PrintWriter $r71;
        java.io.OutputStreamWriter $r72;
        java.io.FileOutputStream $r73;
        java.nio.charset.Charset $r74;

        r0 := @parameter0: java.lang.String[];

        $r14 = new org.apache.commons.cli2.builder.DefaultOptionBuilder;

        specialinvoke $r14.<org.apache.commons.cli2.builder.DefaultOptionBuilder: void <init>()>();

        $r13 = new org.apache.commons.cli2.builder.ArgumentBuilder;

        specialinvoke $r13.<org.apache.commons.cli2.builder.ArgumentBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("output");

        $r15 = virtualinvoke $r16.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("Output file with sequence of observed states");

        $r18 = virtualinvoke $r15.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("o");

        $r17 = virtualinvoke $r13.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMaximum(int)>(1);

        $r20 = virtualinvoke $r17.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMinimum(int)>(1);

        $r19 = virtualinvoke $r20.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withName(java.lang.String)>("path");

        $r22 = virtualinvoke $r19.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.Argument create()>();

        $r21 = virtualinvoke $r18.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withArgument(org.apache.commons.cli2.Argument)>($r22);

        $r25 = virtualinvoke $r21.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withRequired(boolean)>(0);

        r3 = virtualinvoke $r25.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r23 = virtualinvoke $r14.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("model");

        $r24 = virtualinvoke $r23.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("Path to serialized HMM model");

        $r28 = virtualinvoke $r24.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("m");

        $r29 = virtualinvoke $r13.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMaximum(int)>(1);

        $r26 = virtualinvoke $r29.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMinimum(int)>(1);

        $r27 = virtualinvoke $r26.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withName(java.lang.String)>("path");

        $r31 = virtualinvoke $r27.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.Argument create()>();

        $r32 = virtualinvoke $r28.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withArgument(org.apache.commons.cli2.Argument)>($r31);

        $r30 = virtualinvoke $r32.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withRequired(boolean)>(1);

        r4 = virtualinvoke $r30.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r35 = virtualinvoke $r14.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withLongName(java.lang.String)>("length");

        $r36 = virtualinvoke $r35.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withDescription(java.lang.String)>("Length of generated sequence");

        $r33 = virtualinvoke $r36.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withShortName(java.lang.String)>("l");

        $r34 = virtualinvoke $r13.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMaximum(int)>(1);

        $r40 = virtualinvoke $r34.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withMinimum(int)>(1);

        $r39 = virtualinvoke $r40.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.builder.ArgumentBuilder withName(java.lang.String)>("number");

        $r38 = virtualinvoke $r39.<org.apache.commons.cli2.builder.ArgumentBuilder: org.apache.commons.cli2.Argument create()>();

        $r37 = virtualinvoke $r33.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withArgument(org.apache.commons.cli2.Argument)>($r38);

        $r43 = virtualinvoke $r37.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.builder.DefaultOptionBuilder withRequired(boolean)>(1);

        r5 = virtualinvoke $r43.<org.apache.commons.cli2.builder.DefaultOptionBuilder: org.apache.commons.cli2.option.DefaultOption create()>();

        $r42 = new org.apache.commons.cli2.builder.GroupBuilder;

        specialinvoke $r42.<org.apache.commons.cli2.builder.GroupBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r3);

        $r46 = virtualinvoke $r41.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r4);

        $r45 = virtualinvoke $r46.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withOption(org.apache.commons.cli2.Option)>(r5);

        $r44 = virtualinvoke $r45.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.builder.GroupBuilder withName(java.lang.String)>("Options");

        r6 = virtualinvoke $r44.<org.apache.commons.cli2.builder.GroupBuilder: org.apache.commons.cli2.Group create()>();

     label01:
        $r49 = new org.apache.commons.cli2.commandline.Parser;

        specialinvoke $r49.<org.apache.commons.cli2.commandline.Parser: void <init>()>();

        virtualinvoke $r49.<org.apache.commons.cli2.commandline.Parser: void setGroup(org.apache.commons.cli2.Group)>(r6);

        r7 = virtualinvoke $r49.<org.apache.commons.cli2.commandline.Parser: org.apache.commons.cli2.CommandLine parse(java.lang.String[])>(r0);

        $r48 = interfaceinvoke r7.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r3);

        r8 = (java.lang.String) $r48;

        $r47 = interfaceinvoke r7.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r4);

        r9 = (java.lang.String) $r47;

        $r51 = interfaceinvoke r7.<org.apache.commons.cli2.CommandLine: java.lang.Object getValue(org.apache.commons.cli2.Option)>(r5);

        $r52 = (java.lang.String) $r51;

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r52);

        $r53 = new java.io.DataInputStream;

        $r50 = new java.io.FileInputStream;

        specialinvoke $r50.<java.io.FileInputStream: void <init>(java.lang.String)>(r9);

        specialinvoke $r53.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r50);

        r65 = null;

     label02:
        r10 = staticinvoke <org.apache.mahout.classifier.sequencelearning.hmm.LossyHmmSerializer: org.apache.mahout.classifier.sequencelearning.hmm.HmmModel deserialize(java.io.DataInput)>($r53);

     label03:
        if $r53 == null goto label12;

        virtualinvoke $r53.<java.io.DataInputStream: void close()>();

        goto label12;

     label04:
        $r61 := @caughtexception;

        r65 = $r61;

        throw $r61;

     label05:
        $r54 := @caughtexception;

     label06:
        if $r53 == null goto label11;

        if r65 == null goto label10;

     label07:
        virtualinvoke $r53.<java.io.DataInputStream: void close()>();

     label08:
        goto label11;

     label09:
        $r59 := @caughtexception;

        virtualinvoke r65.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r59);

        goto label11;

     label10:
        virtualinvoke $r53.<java.io.DataInputStream: void close()>();

     label11:
        throw $r54;

     label12:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r70 = staticinvoke <org.apache.mahout.classifier.sequencelearning.hmm.HmmEvaluator: int[] predict(org.apache.mahout.classifier.sequencelearning.hmm.HmmModel,int,long)>(r10, i0, $l2);

        $r71 = new java.io.PrintWriter;

        $r72 = new java.io.OutputStreamWriter;

        $r73 = new java.io.FileOutputStream;

        specialinvoke $r73.<java.io.FileOutputStream: void <init>(java.lang.String)>(r8);

        $r74 = <org.apache.commons.io.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r72.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r73, $r74);

        specialinvoke $r71.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>($r72, 1);

        r76 = null;

     label13:
        i3 = lengthof r70;

        i4 = 0;

     label14:
        if i4 >= i3 goto label15;

        i1 = r70[i4];

        virtualinvoke $r71.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke $r71.<java.io.PrintWriter: void print(char)>(32);

        i4 = i4 + 1;

        goto label14;

     label15:
        if $r71 == null goto label25;

        virtualinvoke $r71.<java.io.PrintWriter: void close()>();

        goto label25;

     label16:
        $r62 := @caughtexception;

        r76 = $r62;

        throw $r62;

     label17:
        $r60 := @caughtexception;

     label18:
        if $r71 == null goto label23;

        if r76 == null goto label22;

     label19:
        virtualinvoke $r71.<java.io.PrintWriter: void close()>();

     label20:
        goto label23;

     label21:
        $r58 := @caughtexception;

        virtualinvoke r76.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r58);

        goto label23;

     label22:
        virtualinvoke $r71.<java.io.PrintWriter: void close()>();

     label23:
        throw $r60;

     label24:
        $r57 := @caughtexception;

        staticinvoke <org.apache.mahout.common.CommandLineUtil: void printHelp(org.apache.commons.cli2.Group)>(r6);

     label25:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label06 with label05;
        catch java.lang.Throwable from label13 to label15 with label16;
        catch java.lang.Throwable from label13 to label15 with label17;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label16 to label18 with label17;
        catch org.apache.commons.cli2.OptionException from label01 to label24 with label24;
    }
}
