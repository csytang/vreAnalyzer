public class WordCount2 extends java.lang.Object
{

    public void <init>()
    {
        WordCount2 r0;

        r0 := @this: WordCount2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0, r4;
        org.apache.hadoop.mapreduce.Job r5, r6;
        org.apache.hadoop.conf.Configuration $r8, $r9, $r19, $r26;
        org.apache.hadoop.util.GenericOptionsParser $r10;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r11;
        java.lang.String $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r28, $r29, $r31, $r36;
        boolean $z0, $z1, $z3, $z4;
        org.apache.hadoop.fs.Path $r18, $r22, $r23, $r30, $r32, $r33;
        java.net.URI $r20, $r25;
        java.lang.Object $r24, $r27, $r34, $r35;
        java.io.PrintStream $r37;
        byte $b4;

        r0 := @parameter0: java.lang.String[];

        $r8 = new org.apache.hadoop.conf.Configuration;

        specialinvoke $r8.<org.apache.hadoop.conf.Configuration: void <init>()>();

        $r9 = new org.apache.hadoop.conf.Configuration;

        specialinvoke $r9.<org.apache.hadoop.conf.Configuration: void <init>()>();

        $r10 = new org.apache.hadoop.util.GenericOptionsParser;

        specialinvoke $r10.<org.apache.hadoop.util.GenericOptionsParser: void <init>(org.apache.hadoop.conf.Configuration,java.lang.String[])>($r8, r0);

        r4 = virtualinvoke $r10.<org.apache.hadoop.util.GenericOptionsParser: java.lang.String[] getRemainingArgs()>();

        $i0 = lengthof r4;

        if $i0 != 2 goto label1;

        $i2 = lengthof r4;

        if $i2 != 4 goto label1;

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("Usage: wordcount <in> <out> [-skip skipPatternFile]");

        staticinvoke <java.lang.System: void exit(int)>(2);

     label1:
        r5 = staticinvoke <org.apache.hadoop.mapreduce.Job: org.apache.hadoop.mapreduce.Job getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)>($r8, "word count");

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "WordCount2");

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "WordCount2$TokenizerMapper");

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "WordCount2$IntSumReducer");

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "WordCount2$IntSumReducer");

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text");

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable");

        r6 = staticinvoke <org.apache.hadoop.mapreduce.Job: org.apache.hadoop.mapreduce.Job getInstance(org.apache.hadoop.conf.Configuration,java.lang.String)>($r9, "word count");

        virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: void setJarByClass(java.lang.Class)>(class "WordCount2");

        virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: void setMapperClass(java.lang.Class)>(class "WordCount2$TokenizerMapper");

        virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: void setCombinerClass(java.lang.Class)>(class "WordCount2$IntSumReducer");

        virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: void setReducerClass(java.lang.Class)>(class "WordCount2$IntSumReducer");

        virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: void setOutputKeyClass(java.lang.Class)>(class "org/apache/hadoop/io/Text");

        virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: void setOutputValueClass(java.lang.Class)>(class "org/apache/hadoop/io/IntWritable");

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        i3 = 0;

        goto label6;

     label2:
        $r12 = "-skip";

        $r13 = r4[i3];

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label3;

        $r22 = new org.apache.hadoop.fs.Path;

        i3 = i3 + 1;

        $r21 = r4[i3];

        specialinvoke $r22.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r21);

        $r25 = virtualinvoke $r22.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: void addCacheFile(java.net.URI)>($r25);

        $r26 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r26.<org.apache.hadoop.conf.Configuration: void setBoolean(java.lang.String,boolean)>("wordcount.skip.patterns", 1);

        goto label5;

     label3:
        $r15 = "-skip2";

        $r14 = r4[i3];

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label4;

        $r18 = new org.apache.hadoop.fs.Path;

        i3 = i3 + 1;

        $r17 = r4[i3];

        specialinvoke $r18.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r17);

        $r20 = virtualinvoke $r18.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: void addCacheFile(java.net.URI)>($r20);

        $r19 = virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: org.apache.hadoop.conf.Configuration getConfiguration()>();

        virtualinvoke $r19.<org.apache.hadoop.conf.Configuration: void setBoolean(java.lang.String,boolean)>("wordcount.skip.patterns", 1);

        goto label5;

     label4:
        $r16 = r4[i3];

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r16);

     label5:
        i3 = i3 + 1;

     label6:
        $i1 = lengthof r4;

        if i3 < $i1 goto label2;

        $r23 = new org.apache.hadoop.fs.Path;

        $r24 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        $r29 = (java.lang.String) $r24;

        specialinvoke $r23.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r29);

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r23);

        $r30 = new org.apache.hadoop.fs.Path;

        $r27 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(1);

        $r28 = (java.lang.String) $r27;

        specialinvoke $r30.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r28);

        staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r5, $r30);

        $r33 = new org.apache.hadoop.fs.Path;

        $r34 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(0);

        $r31 = (java.lang.String) $r34;

        specialinvoke $r33.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r31);

        staticinvoke <org.apache.hadoop.mapreduce.lib.input.FileInputFormat: void addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r6, $r33);

        $r32 = new org.apache.hadoop.fs.Path;

        $r35 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(2);

        $r36 = (java.lang.String) $r35;

        specialinvoke $r32.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r36);

        staticinvoke <org.apache.hadoop.mapreduce.lib.output.FileOutputFormat: void setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)>(r6, $r32);

        $z3 = virtualinvoke r5.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1);

        if $z3 == 0 goto label7;

        $z4 = virtualinvoke r6.<org.apache.hadoop.mapreduce.Job: boolean waitForCompletion(boolean)>(1);

        if $z4 == 0 goto label7;

        $b4 = 0;

        goto label8;

     label7:
        $b4 = 1;

     label8:
        staticinvoke <java.lang.System: void exit(int)>($b4);

        return;
    }
}
