public final class org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev extends java.lang.Object implements org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev
{
    private final org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev delegate;

    public void <init>(org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev)
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        r1 := @parameter0: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev delegate> = r1;

        return;
    }

    public void addDatum(double)
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        double d0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        d0 := @parameter0: double;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void removeDatum(double)
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        double d0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        d0 := @parameter0: double;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void changeDatum(double)
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        double d0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        d0 := @parameter0: double;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public int getCount()
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev $r1;
        int $i0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev delegate>;

        $i0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev: int getCount()>();

        return $i0;
    }

    public double getAverage()
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev $r1;
        double $d0, $d1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev delegate>;

        $d0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev: double getAverage()>();

        $d1 = neg $d0;

        return $d1;
    }

    public double getStandardDeviation()
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev $r1;
        double $d0;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev delegate>;

        $d0 = interfaceinvoke $r1.<org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev: double getStandardDeviation()>();

        return $d0;
    }

    public org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev inverse()
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        $r1 = r0.<org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev delegate>;

        return $r1;
    }

    public volatile org.apache.mahout.cf.taste.impl.common.RunningAverage inverse()
    {
        org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev r0;
        org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev $r1;

        r0 := @this: org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev;

        $r1 = virtualinvoke r0.<org.apache.mahout.cf.taste.impl.common.InvertedRunningAverageAndStdDev: org.apache.mahout.cf.taste.impl.common.RunningAverageAndStdDev inverse()>();

        return $r1;
    }
}
