public class org.apache.mahout.cf.taste.hadoop.als.PredictionMapper extends org.apache.mahout.cf.taste.hadoop.als.SharingMapper
{
    private int recommendationsPerUser;
    private float maxRating;
    private boolean usesLongIDs;
    private org.apache.mahout.math.map.OpenIntLongHashMap userIDIndex;
    private org.apache.mahout.math.map.OpenIntLongHashMap itemIDIndex;
    private final org.apache.hadoop.io.LongWritable userIDWritable;
    private final org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable recommendations;

    public void <init>()
    {
        org.apache.mahout.cf.taste.hadoop.als.PredictionMapper r0;
        org.apache.hadoop.io.LongWritable $r1;
        org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable $r2;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.PredictionMapper;

        specialinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.SharingMapper: void <init>()>();

        $r1 = new org.apache.hadoop.io.LongWritable;

        specialinvoke $r1.<org.apache.hadoop.io.LongWritable: void <init>()>();

        r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.hadoop.io.LongWritable userIDWritable> = $r1;

        $r2 = new org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable;

        specialinvoke $r2.<org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable: void <init>()>();

        r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable recommendations> = $r2;

        return;
    }

    org.apache.mahout.common.Pair createSharedInstance(org.apache.hadoop.mapreduce.Mapper$Context)
    {
        org.apache.mahout.cf.taste.hadoop.als.PredictionMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration r2;
        org.apache.mahout.math.map.OpenIntObjectHashMap r5, r6;
        org.apache.hadoop.fs.Path $r7, $r10;
        java.lang.String $r8, $r9, $r11, $r12;
        org.apache.mahout.common.Pair $r13;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.PredictionMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r7 = new org.apache.hadoop.fs.Path;

        $r8 = <org.apache.mahout.cf.taste.hadoop.als.RecommenderJob: java.lang.String USER_FEATURES_PATH>;

        $r9 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r8);

        specialinvoke $r7.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r9);

        $r10 = new org.apache.hadoop.fs.Path;

        $r11 = <org.apache.mahout.cf.taste.hadoop.als.RecommenderJob: java.lang.String ITEM_FEATURES_PATH>;

        $r12 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r11);

        specialinvoke $r10.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>($r12);

        r5 = staticinvoke <org.apache.mahout.cf.taste.hadoop.als.ALS: org.apache.mahout.math.map.OpenIntObjectHashMap readMatrixByRows(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r7, r2);

        r6 = staticinvoke <org.apache.mahout.cf.taste.hadoop.als.ALS: org.apache.mahout.math.map.OpenIntObjectHashMap readMatrixByRows(org.apache.hadoop.fs.Path,org.apache.hadoop.conf.Configuration)>($r10, r2);

        $r13 = new org.apache.mahout.common.Pair;

        specialinvoke $r13.<org.apache.mahout.common.Pair: void <init>(java.lang.Object,java.lang.Object)>(r5, r6);

        return $r13;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.cf.taste.hadoop.als.PredictionMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r12;
        int $i0;
        float $f0;
        boolean $z0, $z1;
        org.apache.mahout.math.map.OpenIntLongHashMap $r9, $r11;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.PredictionMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r3 = <org.apache.mahout.cf.taste.hadoop.als.RecommenderJob: java.lang.String NUM_RECOMMENDATIONS>;

        $i0 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: int getInt(java.lang.String,int)>($r3, 10);

        r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: int recommendationsPerUser> = $i0;

        $r4 = <org.apache.mahout.cf.taste.hadoop.als.RecommenderJob: java.lang.String MAX_RATING>;

        $r5 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r4);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: float maxRating> = $f0;

        $r6 = <org.apache.mahout.cf.taste.hadoop.als.ParallelALSFactorizationJob: java.lang.String USES_LONG_IDS>;

        $z0 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: boolean getBoolean(java.lang.String,boolean)>($r6, 0);

        r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: boolean usesLongIDs> = $z0;

        $z1 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: boolean usesLongIDs>;

        if $z1 == 0 goto label1;

        $r7 = <org.apache.mahout.cf.taste.hadoop.als.RecommenderJob: java.lang.String USER_INDEX_PATH>;

        $r8 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r7);

        $r9 = staticinvoke <org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils: org.apache.mahout.math.map.OpenIntLongHashMap readIDIndexMap(java.lang.String,org.apache.hadoop.conf.Configuration)>($r8, r2);

        r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.math.map.OpenIntLongHashMap userIDIndex> = $r9;

        $r10 = <org.apache.mahout.cf.taste.hadoop.als.RecommenderJob: java.lang.String ITEM_INDEX_PATH>;

        $r12 = virtualinvoke r2.<org.apache.hadoop.conf.Configuration: java.lang.String get(java.lang.String)>($r10);

        $r11 = staticinvoke <org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils: org.apache.mahout.math.map.OpenIntLongHashMap readIDIndexMap(java.lang.String,org.apache.hadoop.conf.Configuration)>($r12, r2);

        r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.math.map.OpenIntLongHashMap itemIDIndex> = $r11;

     label1:
        return;
    }

    protected void map(org.apache.hadoop.io.IntWritable, org.apache.mahout.math.VectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.cf.taste.hadoop.als.PredictionMapper r0;
        org.apache.hadoop.io.IntWritable r1;
        org.apache.mahout.math.VectorWritable r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.common.Pair r4;
        org.apache.mahout.math.map.OpenIntObjectHashMap r5, r6;
        org.apache.mahout.math.Vector r7, r36;
        int i0, $i2, $i3, $i5, $i7;
        java.util.List r9;
        org.apache.mahout.cf.taste.recommender.RecommendedItem r10, r12;
        java.util.Iterator r11, r33, r37;
        long l1, $l4, $l6, l8;
        java.lang.Object $r13, $r14, $r15, $r19, $r28, $r31, $r32;
        org.apache.mahout.math.set.OpenIntHashSet $r16;
        java.lang.Iterable $r17;
        org.apache.mahout.cf.taste.hadoop.TopItemsQueue $r18;
        boolean $z0, $z1, $z3, $z4, $z5;
        org.apache.mahout.cf.taste.hadoop.als.PredictionMapper$1 $r20;
        org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable $r21, $r24;
        org.apache.hadoop.io.LongWritable $r22, $r23, $r25;
        org.apache.mahout.math.map.OpenIntLongHashMap $r26, $r27;
        org.apache.mahout.cf.taste.hadoop.MutableRecommendedItem $r29, $r30;
        float $f0;
        org.apache.mahout.math.Vector$Element r34;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.PredictionMapper;

        r1 := @parameter0: org.apache.hadoop.io.IntWritable;

        r2 := @parameter1: org.apache.mahout.math.VectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r13 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: java.lang.Object getSharedInstance()>();

        r4 = (org.apache.mahout.common.Pair) $r13;

        $r15 = virtualinvoke r4.<org.apache.mahout.common.Pair: java.lang.Object getFirst()>();

        r5 = (org.apache.mahout.math.map.OpenIntObjectHashMap) $r15;

        $r14 = virtualinvoke r4.<org.apache.mahout.common.Pair: java.lang.Object getSecond()>();

        r6 = (org.apache.mahout.math.map.OpenIntObjectHashMap) $r14;

        r7 = virtualinvoke r2.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        i0 = virtualinvoke r1.<org.apache.hadoop.io.IntWritable: int get()>();

        $r16 = new org.apache.mahout.math.set.OpenIntHashSet;

        $i2 = interfaceinvoke r7.<org.apache.mahout.math.Vector: int getNumNondefaultElements()>();

        specialinvoke $r16.<org.apache.mahout.math.set.OpenIntHashSet: void <init>(int)>($i2);

        $r17 = interfaceinvoke r7.<org.apache.mahout.math.Vector: java.lang.Iterable nonZeroes()>();

        r33 = interfaceinvoke $r17.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r32 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (org.apache.mahout.math.Vector$Element) $r32;

        $i7 = interfaceinvoke r34.<org.apache.mahout.math.Vector$Element: int index()>();

        virtualinvoke $r16.<org.apache.mahout.math.set.OpenIntHashSet: boolean add(int)>($i7);

        goto label1;

     label2:
        $r18 = new org.apache.mahout.cf.taste.hadoop.TopItemsQueue;

        $i3 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: int recommendationsPerUser>;

        specialinvoke $r18.<org.apache.mahout.cf.taste.hadoop.TopItemsQueue: void <init>(int)>($i3);

        $r19 = virtualinvoke r5.<org.apache.mahout.math.map.OpenIntObjectHashMap: java.lang.Object get(int)>(i0);

        r36 = (org.apache.mahout.math.Vector) $r19;

        $r20 = new org.apache.mahout.cf.taste.hadoop.als.PredictionMapper$1;

        specialinvoke $r20.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper$1: void <init>(org.apache.mahout.cf.taste.hadoop.als.PredictionMapper,org.apache.mahout.math.set.OpenIntHashSet,org.apache.mahout.math.Vector,org.apache.mahout.cf.taste.hadoop.TopItemsQueue)>(r0, $r16, r36, $r18);

        virtualinvoke r6.<org.apache.mahout.math.map.OpenIntObjectHashMap: boolean forEachPair(org.apache.mahout.math.function.IntObjectProcedure)>($r20);

        r9 = virtualinvoke $r18.<org.apache.mahout.cf.taste.hadoop.TopItemsQueue: java.util.List getTopItems()>();

        $z1 = interfaceinvoke r9.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        r37 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r31 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.mahout.cf.taste.recommender.RecommendedItem) $r31;

        $r30 = (org.apache.mahout.cf.taste.hadoop.MutableRecommendedItem) r10;

        $f0 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: float maxRating>;

        virtualinvoke $r30.<org.apache.mahout.cf.taste.hadoop.MutableRecommendedItem: void capToMaxValue(float)>($f0);

        goto label3;

     label4:
        $z3 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: boolean usesLongIDs>;

        if $z3 == 0 goto label6;

        $r26 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.math.map.OpenIntLongHashMap userIDIndex>;

        l8 = virtualinvoke $r26.<org.apache.mahout.math.map.OpenIntLongHashMap: long get(int)>(i0);

        $r25 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.hadoop.io.LongWritable userIDWritable>;

        virtualinvoke $r25.<org.apache.hadoop.io.LongWritable: void set(long)>(l8);

        r11 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z5 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label7;

        $r28 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.mahout.cf.taste.recommender.RecommendedItem) $r28;

        $r27 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.math.map.OpenIntLongHashMap itemIDIndex>;

        $l6 = interfaceinvoke r12.<org.apache.mahout.cf.taste.recommender.RecommendedItem: long getItemID()>();

        $i5 = (int) $l6;

        l1 = virtualinvoke $r27.<org.apache.mahout.math.map.OpenIntLongHashMap: long get(int)>($i5);

        $r29 = (org.apache.mahout.cf.taste.hadoop.MutableRecommendedItem) r12;

        virtualinvoke $r29.<org.apache.mahout.cf.taste.hadoop.MutableRecommendedItem: void setItemID(long)>(l1);

        goto label5;

     label6:
        $r23 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.hadoop.io.LongWritable userIDWritable>;

        $l4 = (long) i0;

        virtualinvoke $r23.<org.apache.hadoop.io.LongWritable: void set(long)>($l4);

     label7:
        $r24 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable recommendations>;

        virtualinvoke $r24.<org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable: void set(java.util.List)>(r9);

        $r22 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.hadoop.io.LongWritable userIDWritable>;

        $r21 = r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.cf.taste.hadoop.RecommendedItemsWritable recommendations>;

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r22, $r21);

     label8:
        return;
    }

    volatile java.lang.Object createSharedInstance(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException
    {
        org.apache.mahout.cf.taste.hadoop.als.PredictionMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.mahout.common.Pair $r2;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.PredictionMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        $r2 = virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: org.apache.mahout.common.Pair createSharedInstance(org.apache.hadoop.mapreduce.Mapper$Context)>(r1);

        return $r2;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.cf.taste.hadoop.als.PredictionMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4;
        org.apache.hadoop.io.IntWritable $r5;

        r0 := @this: org.apache.mahout.cf.taste.hadoop.als.PredictionMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.IntWritable) r1;

        $r4 = (org.apache.mahout.math.VectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.cf.taste.hadoop.als.PredictionMapper: void map(org.apache.hadoop.io.IntWritable,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
