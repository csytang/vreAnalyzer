public class org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private static final java.util.regex.Pattern SLASH;
    private org.apache.mahout.math.map.OpenObjectIntHashMap labelIndex;

    public void <init>()
    {
        org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper r0;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration $r2;
        org.apache.mahout.math.map.OpenObjectIntHashMap $r3;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void setup(org.apache.hadoop.mapreduce.Mapper$Context)>(r1);

        $r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r3 = staticinvoke <org.apache.mahout.classifier.naivebayes.BayesUtils: org.apache.mahout.math.map.OpenObjectIntHashMap readIndexFromCache(org.apache.hadoop.conf.Configuration)>($r2);

        r0.<org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper: org.apache.mahout.math.map.OpenObjectIntHashMap labelIndex> = $r3;

        return;
    }

    protected void map(org.apache.hadoop.io.Text, org.apache.mahout.math.VectorWritable, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper r0;
        org.apache.hadoop.io.Text r1;
        org.apache.mahout.math.VectorWritable r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        java.lang.String r4, $r6;
        java.util.regex.Pattern $r5;
        java.lang.String[] $r7;
        org.apache.mahout.math.map.OpenObjectIntHashMap $r8, $r12;
        boolean $z0;
        org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper$Counter $r9;
        org.apache.hadoop.mapreduce.Counter $r10;
        org.apache.hadoop.io.IntWritable $r11;
        int $i0;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper;

        r1 := @parameter0: org.apache.hadoop.io.Text;

        r2 := @parameter1: org.apache.mahout.math.VectorWritable;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = <org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper: java.util.regex.Pattern SLASH>;

        $r6 = virtualinvoke r1.<org.apache.hadoop.io.Text: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r6);

        r4 = $r7[1];

        $r8 = r0.<org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper: org.apache.mahout.math.map.OpenObjectIntHashMap labelIndex>;

        $z0 = virtualinvoke $r8.<org.apache.mahout.math.map.OpenObjectIntHashMap: boolean containsKey(java.lang.Object)>(r4);

        if $z0 == 0 goto label1;

        $r11 = new org.apache.hadoop.io.IntWritable;

        $r12 = r0.<org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper: org.apache.mahout.math.map.OpenObjectIntHashMap labelIndex>;

        $i0 = virtualinvoke $r12.<org.apache.mahout.math.map.OpenObjectIntHashMap: int get(java.lang.Object)>(r4);

        specialinvoke $r11.<org.apache.hadoop.io.IntWritable: void <init>(int)>($i0);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r11, r2);

        goto label2;

     label1:
        $r9 = <org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper$Counter: org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper$Counter SKIPPED_INSTANCES>;

        $r10 = virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.mapreduce.Counter getCounter(java.lang.Enum)>($r9);

        interfaceinvoke $r10.<org.apache.hadoop.mapreduce.Counter: void increment(long)>(1L);

     label2:
        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.math.VectorWritable $r4;
        org.apache.hadoop.io.Text $r5;

        r0 := @this: org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.Text) r1;

        $r4 = (org.apache.mahout.math.VectorWritable) r2;

        virtualinvoke r0.<org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper: void map(org.apache.hadoop.io.Text,org.apache.mahout.math.VectorWritable,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("/");

        <org.apache.mahout.classifier.naivebayes.training.IndexInstancesMapper: java.util.regex.Pattern SLASH> = $r0;

        return;
    }
}
