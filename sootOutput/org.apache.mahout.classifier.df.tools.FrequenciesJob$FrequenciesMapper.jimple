class org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper extends org.apache.hadoop.mapreduce.Mapper
{
    private org.apache.hadoop.io.LongWritable firstId;
    private org.apache.mahout.classifier.df.data.DataConverter converter;
    private org.apache.mahout.classifier.df.data.Dataset dataset;

    private void <init>()
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper r0;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper;

        specialinvoke r0.<org.apache.hadoop.mapreduce.Mapper: void <init>()>();

        return;
    }

    protected void setup(org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper r0;
        org.apache.hadoop.mapreduce.Mapper$Context r1;
        org.apache.hadoop.conf.Configuration r2;
        org.apache.mahout.classifier.df.data.Dataset $r3, $r4;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper;

        r1 := @parameter0: org.apache.hadoop.mapreduce.Mapper$Context;

        r2 = virtualinvoke r1.<org.apache.hadoop.mapreduce.Mapper$Context: org.apache.hadoop.conf.Configuration getConfiguration()>();

        $r3 = staticinvoke <org.apache.mahout.classifier.df.mapreduce.Builder: org.apache.mahout.classifier.df.data.Dataset loadDataset(org.apache.hadoop.conf.Configuration)>(r2);

        r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.mahout.classifier.df.data.Dataset dataset> = $r3;

        $r4 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.mahout.classifier.df.data.Dataset dataset>;

        virtualinvoke r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: void setup(org.apache.mahout.classifier.df.data.Dataset)>($r4);

        return;
    }

    void setup(org.apache.mahout.classifier.df.data.Dataset)
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper r0;
        org.apache.mahout.classifier.df.data.Dataset r1;
        org.apache.mahout.classifier.df.data.DataConverter $r2;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper;

        r1 := @parameter0: org.apache.mahout.classifier.df.data.Dataset;

        $r2 = new org.apache.mahout.classifier.df.data.DataConverter;

        specialinvoke $r2.<org.apache.mahout.classifier.df.data.DataConverter: void <init>(org.apache.mahout.classifier.df.data.Dataset)>(r1);

        r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.mahout.classifier.df.data.DataConverter converter> = $r2;

        return;
    }

    protected void map(org.apache.hadoop.io.LongWritable, org.apache.hadoop.io.Text, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper r0;
        org.apache.hadoop.io.LongWritable r1, $r5, $r10, $r11;
        org.apache.hadoop.io.Text r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.mahout.classifier.df.data.Instance r4;
        org.apache.mahout.classifier.df.data.DataConverter $r6;
        java.lang.String $r7;
        org.apache.hadoop.io.IntWritable $r8;
        org.apache.mahout.classifier.df.data.Dataset $r9;
        double $d0;
        int $i0;
        long $l1;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper;

        r1 := @parameter0: org.apache.hadoop.io.LongWritable;

        r2 := @parameter1: org.apache.hadoop.io.Text;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.hadoop.io.LongWritable firstId>;

        if $r5 != null goto label1;

        $r11 = new org.apache.hadoop.io.LongWritable;

        $l1 = virtualinvoke r1.<org.apache.hadoop.io.LongWritable: long get()>();

        specialinvoke $r11.<org.apache.hadoop.io.LongWritable: void <init>(long)>($l1);

        r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.hadoop.io.LongWritable firstId> = $r11;

     label1:
        $r6 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.mahout.classifier.df.data.DataConverter converter>;

        $r7 = virtualinvoke r2.<org.apache.hadoop.io.Text: java.lang.String toString()>();

        r4 = virtualinvoke $r6.<org.apache.mahout.classifier.df.data.DataConverter: org.apache.mahout.classifier.df.data.Instance convert(java.lang.CharSequence)>($r7);

        $r10 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.hadoop.io.LongWritable firstId>;

        $r8 = new org.apache.hadoop.io.IntWritable;

        $r9 = r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: org.apache.mahout.classifier.df.data.Dataset dataset>;

        $d0 = virtualinvoke $r9.<org.apache.mahout.classifier.df.data.Dataset: double getLabel(org.apache.mahout.classifier.df.data.Instance)>(r4);

        $i0 = (int) $d0;

        specialinvoke $r8.<org.apache.hadoop.io.IntWritable: void <init>(int)>($i0);

        virtualinvoke r3.<org.apache.hadoop.mapreduce.Mapper$Context: void write(java.lang.Object,java.lang.Object)>($r10, $r8);

        return;
    }

    protected volatile void map(java.lang.Object, java.lang.Object, org.apache.hadoop.mapreduce.Mapper$Context) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper r0;
        java.lang.Object r1, r2;
        org.apache.hadoop.mapreduce.Mapper$Context r3;
        org.apache.hadoop.io.Text $r4;
        org.apache.hadoop.io.LongWritable $r5;

        r0 := @this: org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.hadoop.mapreduce.Mapper$Context;

        $r5 = (org.apache.hadoop.io.LongWritable) r1;

        $r4 = (org.apache.hadoop.io.Text) r2;

        virtualinvoke r0.<org.apache.mahout.classifier.df.tools.FrequenciesJob$FrequenciesMapper: void map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper$Context)>($r5, $r4, r3);

        return;
    }
}
