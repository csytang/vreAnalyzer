public class org.apache.mahout.common.IntPairWritable$Frequency extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private final org.apache.mahout.common.IntPairWritable pair;
    private final double frequency;

    public void <init>(org.apache.mahout.common.IntPairWritable, double)
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0;
        org.apache.mahout.common.IntPairWritable r1, $r2;
        double d0;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        r1 := @parameter0: org.apache.mahout.common.IntPairWritable;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new org.apache.mahout.common.IntPairWritable;

        specialinvoke $r2.<org.apache.mahout.common.IntPairWritable: void <init>(org.apache.mahout.common.IntPairWritable)>(r1);

        r0.<org.apache.mahout.common.IntPairWritable$Frequency: org.apache.mahout.common.IntPairWritable pair> = $r2;

        r0.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency> = d0;

        return;
    }

    public double getFrequency()
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0;
        double $d0;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        $d0 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        return $d0;
    }

    public org.apache.mahout.common.IntPairWritable getPair()
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0;
        org.apache.mahout.common.IntPairWritable $r1;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        $r1 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: org.apache.mahout.common.IntPairWritable pair>;

        return $r1;
    }

    public int hashCode()
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0;
        org.apache.mahout.common.IntPairWritable $r1;
        int $i0, $i1, $i2;
        double $d0;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        $r1 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: org.apache.mahout.common.IntPairWritable pair>;

        $i0 = virtualinvoke $r1.<org.apache.mahout.common.IntPairWritable: int hashCode()>();

        $d0 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $i1 = staticinvoke <org.apache.mahout.common.RandomUtils: int hashDouble(double)>($d0);

        $i2 = $i0 + $i1;

        return $i2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.apache.mahout.common.IntPairWritable $r3, $r4;
        double $d0, $d1;
        byte $b0;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.apache.mahout.common.IntPairWritable$Frequency;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (org.apache.mahout.common.IntPairWritable$Frequency) r1;

        $r4 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: org.apache.mahout.common.IntPairWritable pair>;

        $r3 = r2.<org.apache.mahout.common.IntPairWritable$Frequency: org.apache.mahout.common.IntPairWritable pair>;

        $z1 = virtualinvoke $r4.<org.apache.mahout.common.IntPairWritable: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $d1 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $d0 = r2.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public int compareTo(org.apache.mahout.common.IntPairWritable$Frequency)
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0, r1;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        r1 := @parameter0: org.apache.mahout.common.IntPairWritable$Frequency;

        $d1 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $d0 = r1.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $b0 = $d1 cmpg $d0;

        if $b0 >= 0 goto label1;

        return -1;

     label1:
        $d3 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $d2 = r1.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $b1 = $d3 cmpl $d2;

        if $b1 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r5;
        org.apache.mahout.common.IntPairWritable $r2;
        double $d0;
        java.lang.String $r6;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: org.apache.mahout.common.IntPairWritable pair>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $d0 = r0.<org.apache.mahout.common.IntPairWritable$Frequency: double frequency>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.apache.mahout.common.IntPairWritable$Frequency r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: org.apache.mahout.common.IntPairWritable$Frequency;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.mahout.common.IntPairWritable$Frequency) r1;

        $i0 = virtualinvoke r0.<org.apache.mahout.common.IntPairWritable$Frequency: int compareTo(org.apache.mahout.common.IntPairWritable$Frequency)>($r2);

        return $i0;
    }
}
