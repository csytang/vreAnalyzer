public class org.apache.mahout.classifier.RegressionResultAnalyzer extends java.lang.Object
{
    private java.util.List results;

    public void <init>()
    {
        org.apache.mahout.classifier.RegressionResultAnalyzer r0;

        r0 := @this: org.apache.mahout.classifier.RegressionResultAnalyzer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void addInstance(double, double)
    {
        org.apache.mahout.classifier.RegressionResultAnalyzer r0;
        double d0, d1;
        java.util.List $r1, $r3;
        org.apache.mahout.classifier.RegressionResultAnalyzer$Result $r2;
        java.util.ArrayList $r4;

        r0 := @this: org.apache.mahout.classifier.RegressionResultAnalyzer;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<org.apache.mahout.classifier.RegressionResultAnalyzer: java.util.List results>;

        if $r1 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.mahout.classifier.RegressionResultAnalyzer: java.util.List results> = $r4;

     label1:
        $r3 = r0.<org.apache.mahout.classifier.RegressionResultAnalyzer: java.util.List results>;

        $r2 = new org.apache.mahout.classifier.RegressionResultAnalyzer$Result;

        specialinvoke $r2.<org.apache.mahout.classifier.RegressionResultAnalyzer$Result: void <init>(double,double)>(d0, d1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void setInstances(double[][])
    {
        org.apache.mahout.classifier.RegressionResultAnalyzer r0;
        double[][] r1;
        int i0, i1;
        double[] r3;
        double $d0, $d1;

        r0 := @this: org.apache.mahout.classifier.RegressionResultAnalyzer;

        r1 := @parameter0: double[][];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r1[i1];

        $d1 = r3[0];

        $d0 = r3[1];

        virtualinvoke r0.<org.apache.mahout.classifier.RegressionResultAnalyzer: void addInstance(double,double)>($d1, $d0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.mahout.classifier.RegressionResultAnalyzer r0;
        double d0, d1, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, d28, d29, d30, d31, d32, d33, d34, d35;
        java.util.List $r1, $r53;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r11, $r14, $r18, $r23, $r24, $r25, $r27, $r28, $r30, $r39, $r40, $r43, $r45, $r46, $r49, $r51, $r52, $r56;
        byte $b0;
        java.lang.String $r12, $r13, $r17, $r19, $r20, $r21, $r29, $r32, $r33, $r38, $r41, $r42, $r44, $r47, $r48, $r50, $r54, $r55, $r57;
        java.util.Locale $r15;
        java.text.DecimalFormat $r16;
        java.lang.Object $r34;
        int i1, i2, $i3;
        java.util.Iterator r35;
        org.apache.mahout.classifier.RegressionResultAnalyzer$Result r36;

        r0 := @this: org.apache.mahout.classifier.RegressionResultAnalyzer;

        d27 = 0.0;

        d28 = 0.0;

        d29 = 0.0;

        d30 = 0.0;

        d31 = 0.0;

        d32 = 0.0;

        d33 = 0.0;

        i1 = 0;

        i2 = 0;

        $r1 = r0.<org.apache.mahout.classifier.RegressionResultAnalyzer: java.util.List results>;

        r35 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r34 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.apache.mahout.classifier.RegressionResultAnalyzer$Result) $r34;

        d0 = virtualinvoke r36.<org.apache.mahout.classifier.RegressionResultAnalyzer$Result: double getActual()>();

        d1 = virtualinvoke r36.<org.apache.mahout.classifier.RegressionResultAnalyzer$Result: double getResult()>();

        $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1);

        if $z1 == 0 goto label2;

        i2 = i2 + 1;

        goto label1;

     label2:
        d27 = d27 + d0;

        $d22 = d0 * d0;

        d28 = d28 + $d22;

        d29 = d29 + d1;

        $d23 = d1 * d1;

        d30 = d30 + $d23;

        $d24 = d0 * d1;

        d31 = d31 + $d24;

        $d25 = d0 - d1;

        d3 = staticinvoke <java.lang.Math: double abs(double)>($d25);

        d32 = d32 + d3;

        $d26 = d3 * d3;

        d33 = d33 + $d26;

        i1 = i1 + 1;

        goto label1;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=======================================================\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Summary\n");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-------------------------------------------------------\n");

        if i1 <= 0 goto label6;

        $d9 = d27 * d27;

        $d5 = (double) i1;

        $d8 = $d9 / $d5;

        d34 = d28 - $d8;

        $d6 = d29 * d29;

        $d7 = (double) i1;

        $d13 = $d6 / $d7;

        d2 = d30 - $d13;

        $d15 = d27 * d29;

        $d14 = (double) i1;

        $d16 = $d15 / $d14;

        d4 = d31 - $d16;

        $d10 = d34 * d2;

        $b0 = $d10 cmpg 0.0;

        if $b0 > 0 goto label4;

        d35 = 0.0;

        goto label5;

     label4:
        $d11 = d34 * d2;

        $d12 = staticinvoke <java.lang.Math: double sqrt(double)>($d11);

        d35 = d4 / $d12;

     label5:
        $r15 = <java.util.Locale: java.util.Locale US>;

        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r15);

        $r16 = new java.text.DecimalFormat;

        specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.####");

        $r17 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Correlation coefficient", 40);

        $r18 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r11 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r16.<java.text.NumberFormat: java.lang.String format(double)>(d35);

        $r13 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r12, 10);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r21 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Mean absolute error", 40);

        $r24 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $d18 = (double) i1;

        $d17 = d32 / $d18;

        $r20 = virtualinvoke $r16.<java.text.NumberFormat: java.lang.String format(double)>($d17);

        $r19 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r20, 10);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r29 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Root mean squared error", 40);

        $r28 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $d19 = (double) i1;

        $d21 = d33 / $d19;

        $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d21);

        $r32 = virtualinvoke $r16.<java.text.NumberFormat: java.lang.String format(double)>($d20);

        $r33 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r32, 10);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label6:
        $r38 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Predictable Instances", 40);

        $r39 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r41 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r42 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r41, 10);

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r44 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Unpredictable Instances", 40);

        $r45 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        $r48 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r47, 10);

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r50 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String rightPad(java.lang.String,int)>("Total Regressed Instances", 40);

        $r51 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r53 = r0.<org.apache.mahout.classifier.RegressionResultAnalyzer: java.util.List results>;

        $i3 = interfaceinvoke $r53.<java.util.List: int size()>();

        $r54 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r55 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String leftPad(java.lang.String,int)>($r54, 10);

        $r56 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r57 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r57;
    }
}
