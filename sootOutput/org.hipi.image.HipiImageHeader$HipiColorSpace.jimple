public final enum class org.hipi.image.HipiImageHeader$HipiColorSpace extends java.lang.Enum
{
    public static final enum org.hipi.image.HipiImageHeader$HipiColorSpace UNDEFINED;
    public static final enum org.hipi.image.HipiImageHeader$HipiColorSpace RGB;
    public static final enum org.hipi.image.HipiImageHeader$HipiColorSpace LUM;
    private int cspace;
    private static final org.hipi.image.HipiImageHeader$HipiColorSpace[] $VALUES;

    public static org.hipi.image.HipiImageHeader$HipiColorSpace[] values()
    {
        org.hipi.image.HipiImageHeader$HipiColorSpace[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.hipi.image.HipiImageHeader$HipiColorSpace[]) $r1;

        return $r2;
    }

    public static org.hipi.image.HipiImageHeader$HipiColorSpace valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.hipi.image.HipiImageHeader$HipiColorSpace $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/hipi/image/HipiImageHeader$HipiColorSpace", r0);

        $r2 = (org.hipi.image.HipiImageHeader$HipiColorSpace) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        org.hipi.image.HipiImageHeader$HipiColorSpace r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: org.hipi.image.HipiImageHeader$HipiColorSpace;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.hipi.image.HipiImageHeader$HipiColorSpace: int cspace> = i1;

        return;
    }

    public static org.hipi.image.HipiImageHeader$HipiColorSpace fromInteger(int) throws java.lang.IllegalArgumentException
    {
        int i0, i1, $i2, i3;
        org.hipi.image.HipiImageHeader$HipiColorSpace[] r0;
        org.hipi.image.HipiImageHeader$HipiColorSpace r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        r0 = staticinvoke <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace[] values()>();

        i1 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        r1 = r0[i3];

        $i2 = r1.<org.hipi.image.HipiImageHeader$HipiColorSpace: int cspace>;

        if $i2 != i0 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("There is no HipiColorSpace enum value with an associated integer value of %d", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;
    }

    public int toInteger()
    {
        org.hipi.image.HipiImageHeader$HipiColorSpace r0;
        int $i0;

        r0 := @this: org.hipi.image.HipiImageHeader$HipiColorSpace;

        $i0 = r0.<org.hipi.image.HipiImageHeader$HipiColorSpace: int cspace>;

        return $i0;
    }

    public static org.hipi.image.HipiImageHeader$HipiColorSpace getDefault()
    {
        org.hipi.image.HipiImageHeader$HipiColorSpace $r0;

        $r0 = <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace RGB>;

        return $r0;
    }

    static void <clinit>()
    {
        org.hipi.image.HipiImageHeader$HipiColorSpace $r0, $r1, $r2, $r4, $r5, $r6;
        org.hipi.image.HipiImageHeader$HipiColorSpace[] $r3;

        $r0 = new org.hipi.image.HipiImageHeader$HipiColorSpace;

        specialinvoke $r0.<org.hipi.image.HipiImageHeader$HipiColorSpace: void <init>(java.lang.String,int,int)>("UNDEFINED", 0, 0);

        <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace UNDEFINED> = $r0;

        $r1 = new org.hipi.image.HipiImageHeader$HipiColorSpace;

        specialinvoke $r1.<org.hipi.image.HipiImageHeader$HipiColorSpace: void <init>(java.lang.String,int,int)>("RGB", 1, 1);

        <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace RGB> = $r1;

        $r2 = new org.hipi.image.HipiImageHeader$HipiColorSpace;

        specialinvoke $r2.<org.hipi.image.HipiImageHeader$HipiColorSpace: void <init>(java.lang.String,int,int)>("LUM", 2, 2);

        <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace LUM> = $r2;

        $r3 = newarray (org.hipi.image.HipiImageHeader$HipiColorSpace)[3];

        $r4 = <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace UNDEFINED>;

        $r3[0] = $r4;

        $r5 = <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace RGB>;

        $r3[1] = $r5;

        $r6 = <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace LUM>;

        $r3[2] = $r6;

        <org.hipi.image.HipiImageHeader$HipiColorSpace: org.hipi.image.HipiImageHeader$HipiColorSpace[] $VALUES> = $r3;

        return;
    }
}
