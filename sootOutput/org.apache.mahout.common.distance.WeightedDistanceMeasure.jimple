public abstract class org.apache.mahout.common.distance.WeightedDistanceMeasure extends java.lang.Object implements org.apache.mahout.common.distance.DistanceMeasure
{
    private java.util.List parameters;
    private org.apache.mahout.common.parameters.Parameter weightsFile;
    private org.apache.mahout.common.parameters.ClassParameter vectorClass;
    private org.apache.mahout.math.Vector weights;

    public void <init>()
    {
        org.apache.mahout.common.distance.WeightedDistanceMeasure r0;

        r0 := @this: org.apache.mahout.common.distance.WeightedDistanceMeasure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void createParameters(java.lang.String, org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.common.distance.WeightedDistanceMeasure r0;
        java.lang.String r1;
        org.apache.hadoop.conf.Configuration r2;
        java.util.ArrayList $r3;
        org.apache.mahout.common.parameters.PathParameter $r4;
        org.apache.mahout.common.parameters.Parameter $r5;
        java.util.List $r6, $r9;
        org.apache.mahout.common.parameters.ClassParameter $r7, $r8;

        r0 := @this: org.apache.mahout.common.distance.WeightedDistanceMeasure;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.hadoop.conf.Configuration;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: java.util.List parameters> = $r3;

        $r4 = new org.apache.mahout.common.parameters.PathParameter;

        specialinvoke $r4.<org.apache.mahout.common.parameters.PathParameter: void <init>(java.lang.String,java.lang.String,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.String)>(r1, "weightsFile", r2, null, "Path on DFS to a file containing the weights.");

        r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.Parameter weightsFile> = $r4;

        $r6 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: java.util.List parameters>;

        $r5 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.Parameter weightsFile>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r7 = new org.apache.mahout.common.parameters.ClassParameter;

        specialinvoke $r7.<org.apache.mahout.common.parameters.ClassParameter: void <init>(java.lang.String,java.lang.String,org.apache.hadoop.conf.Configuration,java.lang.Class,java.lang.String)>(r1, "vectorClass", r2, class "org/apache/mahout/math/DenseVector", "Class<Vector> file specified in parameter weightsFile has been serialized with.");

        r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.ClassParameter vectorClass> = $r7;

        $r9 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: java.util.List parameters>;

        $r8 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.ClassParameter vectorClass>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        return;
    }

    public java.util.Collection getParameters()
    {
        org.apache.mahout.common.distance.WeightedDistanceMeasure r0;
        java.util.List $r1;

        r0 := @this: org.apache.mahout.common.distance.WeightedDistanceMeasure;

        $r1 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: java.util.List parameters>;

        return $r1;
    }

    public void configure(org.apache.hadoop.conf.Configuration)
    {
        org.apache.mahout.common.distance.WeightedDistanceMeasure r0;
        org.apache.hadoop.conf.Configuration r1;
        org.apache.mahout.math.VectorWritable r2;
        org.apache.hadoop.fs.FSDataInputStream r3;
        java.util.List $r6;
        org.apache.mahout.common.parameters.Parameter $r7, $r9, $r16, $r20, $r26;
        java.lang.Object $r8, $r10, $r15, $r17, $r19, $r22, $r23;
        org.apache.hadoop.fs.Path $r11, $r18, $r21, $r24;
        java.net.URI $r12;
        org.apache.mahout.common.parameters.ClassParameter $r13;
        java.lang.Class $r14;
        boolean $z0;
        java.io.FileNotFoundException $r25;
        java.lang.Throwable $r28, $r31, $r32, r35;
        java.lang.String $r29;
        java.io.IOException $r30;
        java.lang.IllegalStateException $r33;
        org.apache.hadoop.fs.FileSystem r34;
        org.apache.mahout.math.Vector $r38;

        r0 := @this: org.apache.mahout.common.distance.WeightedDistanceMeasure;

        r1 := @parameter0: org.apache.hadoop.conf.Configuration;

        $r6 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: java.util.List parameters>;

        if $r6 != null goto label01;

        staticinvoke <org.apache.mahout.common.parameters.Parametered$ParameteredGeneralizations: void configureParameters(org.apache.mahout.common.parameters.Parametered,org.apache.hadoop.conf.Configuration)>(r0, r1);

     label01:
        $r7 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.Parameter weightsFile>;

        $r8 = interfaceinvoke $r7.<org.apache.mahout.common.parameters.Parameter: java.lang.Object get()>();

        if $r8 == null goto label16;

        $r9 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.Parameter weightsFile>;

        $r10 = interfaceinvoke $r9.<org.apache.mahout.common.parameters.Parameter: java.lang.Object get()>();

        $r11 = (org.apache.hadoop.fs.Path) $r10;

        $r12 = virtualinvoke $r11.<org.apache.hadoop.fs.Path: java.net.URI toUri()>();

        r34 = staticinvoke <org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FileSystem get(java.net.URI,org.apache.hadoop.conf.Configuration)>($r12, r1);

        $r13 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.ClassParameter vectorClass>;

        $r15 = virtualinvoke $r13.<org.apache.mahout.common.parameters.ClassParameter: java.lang.Object get()>();

        $r14 = (java.lang.Class) $r15;

        $r17 = staticinvoke <org.apache.mahout.common.ClassUtils: java.lang.Object instantiateAs(java.lang.Class,java.lang.Class)>($r14, class "org/apache/mahout/math/VectorWritable");

        r2 = (org.apache.mahout.math.VectorWritable) $r17;

        $r16 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.Parameter weightsFile>;

        $r19 = interfaceinvoke $r16.<org.apache.mahout.common.parameters.Parameter: java.lang.Object get()>();

        $r18 = (org.apache.hadoop.fs.Path) $r19;

        $z0 = virtualinvoke r34.<org.apache.hadoop.fs.FileSystem: boolean exists(org.apache.hadoop.fs.Path)>($r18);

        if $z0 != 0 goto label02;

        $r25 = new java.io.FileNotFoundException;

        $r26 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.Parameter weightsFile>;

        $r23 = interfaceinvoke $r26.<org.apache.mahout.common.parameters.Parameter: java.lang.Object get()>();

        $r24 = (org.apache.hadoop.fs.Path) $r23;

        $r29 = virtualinvoke $r24.<org.apache.hadoop.fs.Path: java.lang.String toString()>();

        specialinvoke $r25.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r29);

        throw $r25;

     label02:
        $r20 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.common.parameters.Parameter weightsFile>;

        $r22 = interfaceinvoke $r20.<org.apache.mahout.common.parameters.Parameter: java.lang.Object get()>();

        $r21 = (org.apache.hadoop.fs.Path) $r22;

        r3 = virtualinvoke r34.<org.apache.hadoop.fs.FileSystem: org.apache.hadoop.fs.FSDataInputStream open(org.apache.hadoop.fs.Path)>($r21);

        r35 = null;

     label03:
        virtualinvoke r2.<org.apache.mahout.math.VectorWritable: void readFields(java.io.DataInput)>(r3);

     label04:
        if r3 == null goto label13;

        virtualinvoke r3.<java.io.DataInputStream: void close()>();

        goto label13;

     label05:
        $r31 := @caughtexception;

        r35 = $r31;

        throw $r31;

     label06:
        $r32 := @caughtexception;

     label07:
        if r3 == null goto label12;

        if r35 == null goto label11;

     label08:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r28 := @caughtexception;

        virtualinvoke r35.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r28);

        goto label12;

     label11:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

     label12:
        throw $r32;

     label13:
        $r38 = virtualinvoke r2.<org.apache.mahout.math.VectorWritable: org.apache.mahout.math.Vector get()>();

        r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.math.Vector weights> = $r38;

     label14:
        goto label16;

     label15:
        $r30 := @caughtexception;

        $r33 = new java.lang.IllegalStateException;

        specialinvoke $r33.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r30);

        throw $r33;

     label16:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label06;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
        catch java.io.IOException from label01 to label14 with label15;
    }

    public org.apache.mahout.math.Vector getWeights()
    {
        org.apache.mahout.common.distance.WeightedDistanceMeasure r0;
        org.apache.mahout.math.Vector $r1;

        r0 := @this: org.apache.mahout.common.distance.WeightedDistanceMeasure;

        $r1 = r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.math.Vector weights>;

        return $r1;
    }

    public void setWeights(org.apache.mahout.math.Vector)
    {
        org.apache.mahout.common.distance.WeightedDistanceMeasure r0;
        org.apache.mahout.math.Vector r1;

        r0 := @this: org.apache.mahout.common.distance.WeightedDistanceMeasure;

        r1 := @parameter0: org.apache.mahout.math.Vector;

        r0.<org.apache.mahout.common.distance.WeightedDistanceMeasure: org.apache.mahout.math.Vector weights> = r1;

        return;
    }
}
