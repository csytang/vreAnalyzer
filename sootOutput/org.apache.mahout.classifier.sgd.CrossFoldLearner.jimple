public class org.apache.mahout.classifier.sgd.CrossFoldLearner extends org.apache.mahout.classifier.AbstractVectorClassifier implements org.apache.mahout.classifier.OnlineLearner, org.apache.hadoop.io.Writable
{
    private int record;
    private static final double MIN_SCORE;
    private org.apache.mahout.math.stats.OnlineAuc auc;
    private double logLikelihood;
    private final java.util.List models;
    private double[] parameters;
    private int numFeatures;
    private org.apache.mahout.classifier.sgd.PriorFunction prior;
    private double percentCorrect;
    private int windowSize;

    public void <init>()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.math.stats.GlobalOnlineAuc $r1;
        java.util.ArrayList $r2;
        double[] $r3;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        specialinvoke r0.<org.apache.mahout.classifier.AbstractVectorClassifier: void <init>()>();

        $r1 = new org.apache.mahout.math.stats.GlobalOnlineAuc;

        specialinvoke $r1.<org.apache.mahout.math.stats.GlobalOnlineAuc: void <init>()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models> = $r2;

        $r3 = newarray (double)[4];

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double[] parameters> = $r3;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int windowSize> = 2147483647;

        return;
    }

    public void <init>(int, int, int, org.apache.mahout.classifier.sgd.PriorFunction)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int i0, i1, i2, i3;
        org.apache.mahout.classifier.sgd.PriorFunction r1;
        org.apache.mahout.math.stats.GlobalOnlineAuc $r3;
        java.util.ArrayList $r4;
        double[] $r5;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression $r6, $r7, $r8;
        java.util.List $r10;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: org.apache.mahout.classifier.sgd.PriorFunction;

        specialinvoke r0.<org.apache.mahout.classifier.AbstractVectorClassifier: void <init>()>();

        $r3 = new org.apache.mahout.math.stats.GlobalOnlineAuc;

        specialinvoke $r3.<org.apache.mahout.math.stats.GlobalOnlineAuc: void <init>()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models> = $r4;

        $r5 = newarray (double)[4];

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double[] parameters> = $r5;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int windowSize> = 2147483647;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numFeatures> = i2;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.classifier.sgd.PriorFunction prior> = r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $r6 = new org.apache.mahout.classifier.sgd.OnlineLogisticRegression;

        specialinvoke $r6.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void <init>(int,int,org.apache.mahout.classifier.sgd.PriorFunction)>(i1, i2, r1);

        $r7 = virtualinvoke $r6.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression alpha(double)>(1.0);

        $r8 = virtualinvoke $r7.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression stepOffset(int)>(0);

        virtualinvoke $r8.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression decayExponent(double)>(0.0);

        $r10 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r6);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public org.apache.mahout.classifier.sgd.CrossFoldLearner lambda(double)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double d0;
        java.util.Iterator r1;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        d0 := @parameter0: double;

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r4;

        virtualinvoke r2.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression lambda(double)>(d0);

        goto label1;

     label2:
        return r0;
    }

    public org.apache.mahout.classifier.sgd.CrossFoldLearner learningRate(double)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double d0;
        java.util.Iterator r1;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        d0 := @parameter0: double;

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r4;

        virtualinvoke r2.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression learningRate(double)>(d0);

        goto label1;

     label2:
        return r0;
    }

    public org.apache.mahout.classifier.sgd.CrossFoldLearner stepOffset(int)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int i0;
        java.util.Iterator r1;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        i0 := @parameter0: int;

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r4;

        virtualinvoke r2.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression stepOffset(int)>(i0);

        goto label1;

     label2:
        return r0;
    }

    public org.apache.mahout.classifier.sgd.CrossFoldLearner decayExponent(double)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double d0;
        java.util.Iterator r1;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        d0 := @parameter0: double;

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r4;

        virtualinvoke r2.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression decayExponent(double)>(d0);

        goto label1;

     label2:
        return r0;
    }

    public org.apache.mahout.classifier.sgd.CrossFoldLearner alpha(double)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double d0;
        java.util.Iterator r1;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        d0 := @parameter0: double;

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r4;

        virtualinvoke r2.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.OnlineLogisticRegression alpha(double)>(d0);

        goto label1;

     label2:
        return r0;
    }

    public void train(int, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int i0, $i1;
        org.apache.mahout.math.Vector r1;
        long $l2;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.mahout.math.Vector;

        $i1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record>;

        $l2 = (long) $i1;

        virtualinvoke r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: void train(long,java.lang.String,int,org.apache.mahout.math.Vector)>($l2, null, i0, r1);

        return;
    }

    public void train(long, int, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        long l0;
        int i1;
        org.apache.mahout.math.Vector r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.mahout.math.Vector;

        virtualinvoke r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: void train(long,java.lang.String,int,org.apache.mahout.math.Vector)>(l0, null, i1, r1);

        return;
    }

    public void train(long, java.lang.String, int, org.apache.mahout.math.Vector)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        long l0, $l5, $l7;
        java.lang.String r1;
        int i1, $i2, $i3, $i4, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        org.apache.mahout.math.Vector r2, r5;
        java.util.Iterator r3;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        java.util.List $r6, $r7;
        boolean $z1, $z2;
        java.lang.Object $r8;
        byte $b6;
        org.apache.mahout.math.stats.OnlineAuc $r9;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.mahout.math.Vector;

        $i2 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record>;

        $i3 = $i2 + 1;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record> = $i3;

        i16 = 0;

        $r6 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r8;

        $l5 = (long) i16;

        $r7 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        $l7 = staticinvoke <org.apache.mahout.classifier.sgd.CrossFoldLearner: long mod(long,int)>(l0, $i4);

        $b6 = $l5 cmp $l7;

        if $b6 != 0 goto label4;

        r5 = virtualinvoke r4.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.math.Vector classifyFull(org.apache.mahout.math.Vector)>(r2);

        $d1 = interfaceinvoke r5.<org.apache.mahout.math.Vector: double get(int)>(i1);

        d0 = staticinvoke <java.lang.Math: double max(double,double)>($d1, 1.0E-50);

        $d3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood>;

        $d2 = staticinvoke <java.lang.Math: double log(double)>(d0);

        $d4 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood>;

        $d6 = $d2 - $d4;

        $i10 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record>;

        $i8 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int windowSize>;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i8);

        $d5 = (double) $i9;

        $d8 = $d6 / $d5;

        $d9 = $d3 + $d8;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood> = $d9;

        $i11 = interfaceinvoke r5.<org.apache.mahout.math.Vector: int maxValueIndex()>();

        if $i11 != i1 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        $d10 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double percentCorrect>;

        $d11 = (double) $z2;

        $d7 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double percentCorrect>;

        $d14 = $d11 - $d7;

        $i12 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record>;

        $i13 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int windowSize>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i13);

        $d12 = (double) $i14;

        $d13 = $d14 / $d12;

        $d16 = $d10 + $d13;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double percentCorrect> = $d16;

        $i15 = virtualinvoke r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numCategories()>();

        if $i15 != 2 goto label5;

        $r9 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc>;

        $d15 = interfaceinvoke r5.<org.apache.mahout.math.Vector: double get(int)>(1);

        interfaceinvoke $r9.<org.apache.mahout.math.stats.OnlineAuc: double addSample(int,java.lang.String,double)>(i1, r1, $d15);

        goto label5;

     label4:
        virtualinvoke r4.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void train(long,java.lang.String,int,org.apache.mahout.math.Vector)>(l0, r1, i1, r2);

     label5:
        i16 = i16 + 1;

        goto label1;

     label6:
        return;
    }

    private static long mod(long, int)
    {
        long l0, l2, $l3, $l5, $l6;
        int i1;
        byte $b4;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l3 = (long) i1;

        l2 = l0 % $l3;

        $b4 = l2 cmp 0L;

        if $b4 >= 0 goto label1;

        $l5 = (long) i1;

        $l6 = l2 + $l5;

        goto label2;

     label1:
        $l6 = l2;

     label2:
        return $l6;
    }

    public void close()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        java.util.Iterator r1;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r4;

        virtualinvoke r2.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void close()>();

        goto label1;

     label2:
        return;
    }

    public void resetLineCounter()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record> = 0;

        return;
    }

    public boolean validModel()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        java.util.Iterator r1;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r2;
        java.util.List $r3;
        boolean $z0, $z1, z2;
        java.lang.Object $r4;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        z2 = 1;

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r4;

        $z1 = virtualinvoke r2.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: boolean validModel()>();

        z2 = z2 & $z1;

        goto label1;

     label2:
        return z2;
    }

    public org.apache.mahout.math.Vector classify(org.apache.mahout.math.Vector)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.math.Vector r1, $r9;
        org.apache.mahout.math.function.DoubleDoubleFunction r3;
        java.util.Iterator r4;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r5;
        org.apache.mahout.math.DenseVector $r6;
        int $i0, $i1, $i2;
        java.util.List $r7, $r8;
        double $d0, $d1;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: org.apache.mahout.math.Vector;

        $r6 = new org.apache.mahout.math.DenseVector;

        $i0 = virtualinvoke r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numCategories()>();

        $i1 = $i0 - 1;

        specialinvoke $r6.<org.apache.mahout.math.DenseVector: void <init>(int)>($i1);

        $r7 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $d0 = (double) $i2;

        $d1 = 1.0 / $d0;

        r3 = staticinvoke <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction plusMult(double)>($d1);

        $r8 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r10;

        $r9 = virtualinvoke r5.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.math.Vector classify(org.apache.mahout.math.Vector)>(r1);

        interfaceinvoke $r6.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)>($r9, r3);

        goto label1;

     label2:
        return $r6;
    }

    public org.apache.mahout.math.Vector classifyNoLink(org.apache.mahout.math.Vector)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.math.Vector r1, $r9;
        org.apache.mahout.math.function.DoubleDoubleFunction r3;
        java.util.Iterator r4;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r5;
        org.apache.mahout.math.DenseVector $r6;
        int $i0, $i1, $i2;
        java.util.List $r7, $r8;
        double $d0, $d1;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: org.apache.mahout.math.Vector;

        $r6 = new org.apache.mahout.math.DenseVector;

        $i0 = virtualinvoke r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numCategories()>();

        $i1 = $i0 - 1;

        specialinvoke $r6.<org.apache.mahout.math.DenseVector: void <init>(int)>($i1);

        $r7 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $d0 = (double) $i2;

        $d1 = 1.0 / $d0;

        r3 = staticinvoke <org.apache.mahout.math.function.Functions: org.apache.mahout.math.function.DoubleDoubleFunction plusMult(double)>($d1);

        $r8 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r4 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r10;

        $r9 = virtualinvoke r5.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.math.Vector classifyNoLink(org.apache.mahout.math.Vector)>(r1);

        interfaceinvoke $r6.<org.apache.mahout.math.Vector: org.apache.mahout.math.Vector assign(org.apache.mahout.math.Vector,org.apache.mahout.math.function.DoubleDoubleFunction)>($r9, r3);

        goto label1;

     label2:
        return $r6;
    }

    public double classifyScalar(org.apache.mahout.math.Vector)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.math.Vector r1;
        java.util.Iterator r2;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r3;
        java.util.List $r4;
        boolean $z0;
        double $d0, $d1, $d2, d3;
        java.lang.Object $r5;
        int i0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: org.apache.mahout.math.Vector;

        d3 = 0.0;

        i0 = 0;

        $r4 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r5;

        i0 = i0 + 1;

        $d2 = virtualinvoke r3.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: double classifyScalar(org.apache.mahout.math.Vector)>(r1);

        d3 = d3 + $d2;

        goto label1;

     label2:
        $d0 = (double) i0;

        $d1 = d3 / $d0;

        return $d1;
    }

    public int numCategories()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        java.util.List $r1;
        java.lang.Object $r2;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression $r3;
        int $i0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r2;

        $i0 = virtualinvoke $r3.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: int numCategories()>();

        return $i0;
    }

    public double auc()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.math.stats.OnlineAuc $r1;
        double $d0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc>;

        $d0 = interfaceinvoke $r1.<org.apache.mahout.math.stats.OnlineAuc: double auc()>();

        return $d0;
    }

    public double logLikelihood()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double $d0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $d0 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood>;

        return $d0;
    }

    public double percentCorrect()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double $d0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $d0 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double percentCorrect>;

        return $d0;
    }

    public org.apache.mahout.classifier.sgd.CrossFoldLearner copy()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0, $r5;
        java.util.Iterator r2;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r3, $r11;
        java.util.List $r6, $r8, $r9, $r13;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.mahout.classifier.sgd.PriorFunction $r7, $r12;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r5 = new org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r6 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i1 = virtualinvoke r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numCategories()>();

        $i2 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numFeatures>;

        $r7 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.classifier.sgd.PriorFunction prior>;

        specialinvoke $r5.<org.apache.mahout.classifier.sgd.CrossFoldLearner: void <init>(int,int,int,org.apache.mahout.classifier.sgd.PriorFunction)>($i0, $i1, $i2, $r7);

        $r8 = $r5.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        interfaceinvoke $r8.<java.util.List: void clear()>();

        $r9 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r2 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r10;

        virtualinvoke r3.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void close()>();

        $r11 = new org.apache.mahout.classifier.sgd.OnlineLogisticRegression;

        $i3 = virtualinvoke r3.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: int numCategories()>();

        $i4 = virtualinvoke r3.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: int numFeatures()>();

        $r12 = r3.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: org.apache.mahout.classifier.sgd.PriorFunction prior>;

        specialinvoke $r11.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void <init>(int,int,org.apache.mahout.classifier.sgd.PriorFunction)>($i3, $i4, $r12);

        virtualinvoke $r11.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void copyFrom(org.apache.mahout.classifier.sgd.OnlineLogisticRegression)>(r3);

        $r13 = $r5.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        return $r5;
    }

    public int getRecord()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int $i0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $i0 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record>;

        return $i0;
    }

    public void setRecord(int)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int i0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        i0 := @parameter0: int;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record> = i0;

        return;
    }

    public org.apache.mahout.math.stats.OnlineAuc getAucEvaluator()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.math.stats.OnlineAuc $r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc>;

        return $r1;
    }

    public void setAucEvaluator(org.apache.mahout.math.stats.OnlineAuc)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.math.stats.OnlineAuc r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: org.apache.mahout.math.stats.OnlineAuc;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc> = r1;

        return;
    }

    public double getLogLikelihood()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double $d0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $d0 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood>;

        return $d0;
    }

    public void setLogLikelihood(double)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double d0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        d0 := @parameter0: double;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood> = d0;

        return;
    }

    public java.util.List getModels()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        java.util.List $r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        return $r1;
    }

    public void addModel(org.apache.mahout.classifier.sgd.OnlineLogisticRegression)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r1;
        java.util.List $r2;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: org.apache.mahout.classifier.sgd.OnlineLogisticRegression;

        $r2 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public double[] getParameters()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double[] $r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double[] parameters>;

        return $r1;
    }

    public void setParameters(double[])
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        double[] r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: double[];

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double[] parameters> = r1;

        return;
    }

    public int getNumFeatures()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int $i0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $i0 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numFeatures>;

        return $i0;
    }

    public void setNumFeatures(int)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int i0;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        i0 := @parameter0: int;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numFeatures> = i0;

        return;
    }

    public void setWindowSize(int)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        int i0;
        org.apache.mahout.math.stats.OnlineAuc $r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        i0 := @parameter0: int;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int windowSize> = i0;

        $r1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc>;

        interfaceinvoke $r1.<org.apache.mahout.math.stats.OnlineAuc: void setWindowSize(int)>(i0);

        return;
    }

    public org.apache.mahout.classifier.sgd.PriorFunction getPrior()
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.classifier.sgd.PriorFunction $r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        $r1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.classifier.sgd.PriorFunction prior>;

        return $r1;
    }

    public void setPrior(org.apache.mahout.classifier.sgd.PriorFunction)
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        org.apache.mahout.classifier.sgd.PriorFunction r1;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: org.apache.mahout.classifier.sgd.PriorFunction;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.classifier.sgd.PriorFunction prior> = r1;

        return;
    }

    public void write(java.io.DataOutput) throws java.io.IOException
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        java.io.DataOutput r1;
        double d0, $d1, $d2;
        int $i0, $i1, $i2, $i3, i4, i5;
        org.apache.mahout.math.stats.OnlineAuc $r2;
        java.util.List $r3, $r4;
        boolean $z0;
        org.apache.mahout.classifier.sgd.PriorFunction $r5;
        java.lang.Object $r6;
        java.util.Iterator r7;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression r8;
        double[] r9;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: java.io.DataOutput;

        $i0 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record>;

        interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i0);

        $r2 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc>;

        staticinvoke <org.apache.mahout.classifier.sgd.PolymorphicWritable: void write(java.io.DataOutput,org.apache.hadoop.io.Writable)>(r1, $r2);

        $d1 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood>;

        interfaceinvoke r1.<java.io.DataOutput: void writeDouble(double)>($d1);

        $r3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i1);

        $r4 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        r7 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.apache.mahout.classifier.sgd.OnlineLogisticRegression) $r6;

        virtualinvoke r8.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void write(java.io.DataOutput)>(r1);

        goto label1;

     label2:
        r9 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double[] parameters>;

        i4 = lengthof r9;

        i5 = 0;

     label3:
        if i5 >= i4 goto label4;

        d0 = r9[i5];

        interfaceinvoke r1.<java.io.DataOutput: void writeDouble(double)>(d0);

        i5 = i5 + 1;

        goto label3;

     label4:
        $i2 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numFeatures>;

        interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i2);

        $r5 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.classifier.sgd.PriorFunction prior>;

        staticinvoke <org.apache.mahout.classifier.sgd.PolymorphicWritable: void write(java.io.DataOutput,org.apache.hadoop.io.Writable)>(r1, $r5);

        $d2 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double percentCorrect>;

        interfaceinvoke r1.<java.io.DataOutput: void writeDouble(double)>($d2);

        $i3 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int windowSize>;

        interfaceinvoke r1.<java.io.DataOutput: void writeInt(int)>($i3);

        return;
    }

    public void readFields(java.io.DataInput) throws java.io.IOException
    {
        org.apache.mahout.classifier.sgd.CrossFoldLearner r0;
        java.io.DataInput r1;
        int i0, $i1, $i2, $i3, i4, i5;
        org.apache.hadoop.io.Writable $r3, $r6;
        org.apache.mahout.math.stats.OnlineAuc $r4;
        double $d0, $d1, $d2;
        double[] $r5, $r8;
        org.apache.mahout.classifier.sgd.PriorFunction $r7;
        java.util.List $r9;
        org.apache.mahout.classifier.sgd.OnlineLogisticRegression $r10;

        r0 := @this: org.apache.mahout.classifier.sgd.CrossFoldLearner;

        r1 := @parameter0: java.io.DataInput;

        $i1 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int record> = $i1;

        $r3 = staticinvoke <org.apache.mahout.classifier.sgd.PolymorphicWritable: org.apache.hadoop.io.Writable read(java.io.DataInput,java.lang.Class)>(r1, class "org/apache/mahout/math/stats/OnlineAuc");

        $r4 = (org.apache.mahout.math.stats.OnlineAuc) $r3;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.math.stats.OnlineAuc auc> = $r4;

        $d0 = interfaceinvoke r1.<java.io.DataInput: double readDouble()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double logLikelihood> = $d0;

        i0 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();

        i4 = 0;

     label1:
        if i4 >= i0 goto label2;

        $r10 = new org.apache.mahout.classifier.sgd.OnlineLogisticRegression;

        specialinvoke $r10.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void <init>()>();

        virtualinvoke $r10.<org.apache.mahout.classifier.sgd.OnlineLogisticRegression: void readFields(java.io.DataInput)>(r1);

        $r9 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: java.util.List models>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r5 = newarray (double)[4];

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double[] parameters> = $r5;

        i5 = 0;

     label3:
        if i5 >= 4 goto label4;

        $r8 = r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double[] parameters>;

        $d2 = interfaceinvoke r1.<java.io.DataInput: double readDouble()>();

        $r8[i5] = $d2;

        i5 = i5 + 1;

        goto label3;

     label4:
        $i2 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int numFeatures> = $i2;

        $r6 = staticinvoke <org.apache.mahout.classifier.sgd.PolymorphicWritable: org.apache.hadoop.io.Writable read(java.io.DataInput,java.lang.Class)>(r1, class "org/apache/mahout/classifier/sgd/PriorFunction");

        $r7 = (org.apache.mahout.classifier.sgd.PriorFunction) $r6;

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: org.apache.mahout.classifier.sgd.PriorFunction prior> = $r7;

        $d1 = interfaceinvoke r1.<java.io.DataInput: double readDouble()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: double percentCorrect> = $d1;

        $i3 = interfaceinvoke r1.<java.io.DataInput: int readInt()>();

        r0.<org.apache.mahout.classifier.sgd.CrossFoldLearner: int windowSize> = $i3;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.mahout.classifier.sgd.CrossFoldLearner: double MIN_SCORE> = 1.0E-50;

        return;
    }
}
