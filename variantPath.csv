VariantPath Id,CallSite,Variants List,Classes,Methods
1,"-","[1]","[org.hipi.image.ByteImage]","[equals->equalsWithTolerance]"
2,"-","[3,2]","[org.hipi.image.ByteImage]","[equalsWithTolerance->]"
3,"-","[4]","[org.hipi.image.FloatImage]","[equals->equalsWithTolerance]"
4,"-","[6,5]","[org.hipi.image.PixelArray,org.hipi.image.FloatImage]","[equalsWithTolerance->getElemFloat]"
5,"-","[8,7,9]","[org.hipi.image.HipiImageHeader,org.hipi.image.FloatImage,org.hipi.image.RasterImage]","[<init>->setHeader,<init>]"
6,"-","[10,13,12,11]","[org.hipi.image.HipiImageHeader,org.hipi.image.PixelArray,org.hipi.image.FloatImage,org.hipi.image.RasterImage]","[<init>->setHeader,<init>,setElemFloat]"
7,"-","[17,15,16,18,14]","[org.hipi.image.HipiImageHeader,org.hipi.image.FloatImage,org.hipi.image.RasterImage]","[<init>->setHeader,<init>]"
8,"-","[19]","[org.hipi.image.FloatImage]","[add->checkCompatibleInputImage]"
9,"-","[20]","[org.hipi.image.FloatImage]","[multiply->checkCompatibleInputImage]"
10,"-","[21]","[org.hipi.image.HipiImage,org.hipi.image.HipiImageHeader]","[getExifData->getExifData]"
11,"-","[22]","[org.hipi.image.HipiImage,org.hipi.image.HipiImageHeader]","[getMetaData->getMetaData]"
12,"-","[23]","[org.hipi.image.HipiImage,org.hipi.image.HipiImageFactory]","[createImage->setHeader]"
13,"-","[24]","[org.hipi.image.HipiImageFactory]","[<init>->findImageClass]"
14,"-","[25]","[org.hipi.image.HipiImageHeader]","[compareTo->compareTo]"
15,"-","[26]","[org.hipi.image.HipiImageHeader]","[<init>->readFields]"
16,"-","[32,31,33,27,28,29,30]","[org.hipi.image.HipiImageHeader]","[<init>->setMetaDataFromBytes]"
17,"-","[34]","[org.hipi.image.HipiImageHeader,org.hipi.image.HipiImageHeader$HipiColorSpace,org.hipi.image.HipiImageHeader$HipiImageFormat]","[readFields->fromInteger,setMetaDataFromBytes,fromInteger]"
18,"-","[35]","[org.hipi.image.PixelArray]","[getElemDouble->]"
19,"-","[36]","[org.hipi.image.PixelArray]","[getElemFloat->]"
20,"-","[38,37]","[org.hipi.image.PixelArray]","[setElemDouble->]"
21,"-","[40,39]","[org.hipi.image.PixelArray]","[setElemFloat->]"
22,"-","[41]","[org.hipi.image.PixelArrayByte]","[getElemNonLinSRGB->getElem]"
23,"-","[42]","[org.hipi.image.PixelArray,org.hipi.image.PixelArrayByte]","[<init>-><init>]"
24,"-","[44,43]","[org.hipi.image.PixelArrayByte]","[setElemNonLinSRGB->setElem]"
25,"-","[45]","[org.hipi.image.PixelArrayFloat,org.hipi.image.PixelArray]","[<init>-><init>]"
26,"-","[47,46]","[org.hipi.image.PixelArrayFloat]","[setElemNonLinSRGB->setElemFloat]"
27,"-","[48]","[org.hipi.image.PixelArrayFloat,org.hipi.util.ByteUtils]","[setFromByteArray->byteArrayToFloatArray]"
28,"-","[49,50]","[org.hipi.image.PixelArray,org.hipi.image.RasterImage]","[convertToColorSpace->setElemFloat]"
29,"-","[52,51,53,54,55]","[org.hipi.image.RasterImage]","[crop->]"
30,"-","[56]","[org.hipi.image.HipiImageHeader,org.hipi.image.PixelArray,org.hipi.image.RasterImage]","[readFields->getDataTypeSize,<init>]"
31,"-","[57]","[org.hipi.image.HipiImage,org.hipi.image.RasterImage]","[setHeader->setHeader]"
32,"-","[58]","[org.hipi.image.HipiImageHeader,org.hipi.image.RasterImage]","[write->write]"
33,"-","[59]","[org.hipi.image.RawImage,org.hipi.image.HipiImageHeader]","[readFields-><init>]"
34,"-","[60]","[org.hipi.image.RawImage,org.hipi.image.HipiImageHeader]","[write->write]"
35,"-","[61,62]","[org.hipi.image.io.ExifDataReader]","[extractAndFlatten-><init>]"
36,"-","[63]","[org.hipi.image.io.ExifDataReader$UnclosableBufferedInputStream,org.hipi.image.io.ExifDataReader]","[<init>-><init>]"
37,"-","[65,64,66]","[org.hipi.image.io.ImageCodec]","[decodeHeaderAndImage->decodeImage]"
38,"-","[72,69,65,64,70,66,71,68,67]","[org.hipi.image.HipiImageHeader,org.hipi.image.io.ExifDataReader,org.hipi.image.io.ImageCodec,org.hipi.image.HipiImageFactory]","[decodeHeaderAndImage->decodeImage][decodeImage->setExifData,createImage,extractAndFlatten]"
39,"-","[73]","[org.hipi.image.io.ImageCodec]","[decodeHeader->]"
40,"-","[75,76,74]","[org.hipi.image.io.ImageCodec]","[encodeRasterImage->]"
41,"-","[78,77]","[org.hipi.image.HipiImageHeader,org.hipi.image.io.ExifDataReader,org.hipi.image.io.JpegCodec]","[decodeHeader-><init>,extractAndFlatten]"
42,"-","[79,80]","[org.hipi.image.io.ImageCodec,org.hipi.image.io.JpegCodec]","[encodeImage->encodeRasterImage]"
43,"-","[81,83,82]","[org.hipi.image.io.PngCodec$PNGChunk,org.hipi.image.HipiImageHeader,org.hipi.image.io.ExifDataReader,org.hipi.image.io.PngCodec]","[decodeHeader->verifyCRC,<init>,readSignature,<init>,extractAndFlatten]"
44,"-","[85,84]","[org.hipi.image.io.PngCodec$PNGChunk,org.hipi.image.io.PngCodec$PNGData,org.hipi.image.io.PngCodec]","[readChunks->verifyCRC,add,<init>]"
45,"-","[86,87]","[org.hipi.image.io.PngCodec]","[encodeImage->write,write]"
46,"-","[88,89]","[org.hipi.image.io.PngCodec]","[write->write]"
47,"-","[90,91]","[org.hipi.image.io.PpmCodec$PpmHeader]","[<init>-><init>]"
48,"-","[93,92]","[org.hipi.image.HipiImageHeader,org.hipi.image.io.PpmCodec]","[decodeHeader->internalDecodeHeader,<init>]"
49,"-","[94]","[org.hipi.image.io.PpmCodec]","[internalDecodeHeader->]"
50,"-","[96,95]","[org.hipi.image.io.PpmCodec]","[encodeImage->]"
51,"-","[100,103,101,97,99,102,98]","[org.hipi.imagebundle.HipiImageBundle$HibReader]","[nextKeyValue->]"
52,"-","[106,104,107,105]","[org.hipi.imagebundle.HipiImageBundle$HibReader]","[<init>-><init>]"
53,"-","[109,108]","[org.hipi.imagebundle.HipiImageBundle]","[<init>-><init>]"
54,"-","[113,110,111,112]","[org.hipi.imagebundle.HipiImageBundle]","[<init>-><init>]"
55,"-","[116,114,117,115]","[org.hipi.imagebundle.HipiImageBundle]","[<init>-><init>]"
56,"-","[121,118,119,122,120]","[org.hipi.imagebundle.HipiImageBundle]","[<init>-><init>]"
57,"-","[123,124]","[org.hipi.imagebundle.HipiImageBundle]","[addImage->addImage]"
58,"-","[125,127,126]","[org.hipi.image.HipiImageHeader,org.hipi.imagebundle.HipiImageBundle]","[addImage->setMetaData,addImage]"
59,"-","[129,128]","[org.hipi.imagebundle.HipiImageBundle,org.hipi.util.ByteUtils]","[addImage->inputStreamToByteArray]"
60,"-","[130,131]","[org.hipi.imagebundle.HipiImageBundle$HibReader,org.hipi.imagebundle.HipiImageBundle]","[openForRead-><init>,readOffsets]"
61,"-","[133,132]","[org.hipi.imagebundle.mapreduce.HibInputFormat,org.hipi.imagebundle.HipiImageBundle]","[computeSplits-><init>,staticGetBlockIndex]"
62,"-","[134]","[org.hipi.imagebundle.mapreduce.HibInputFormat]","[getSplits->computeSplits]"
63,"-","[137,136,135]","[org.hipi.imagebundle.HipiImageBundle$HibReader,org.hipi.imagebundle.mapreduce.HibRecordReader,org.hipi.image.HipiImageFactory]","[initialize-><init>,<init>]"
64,"-","[138,139]","[org.hipi.mapreduce.BinaryOutputFormat$BinaryRecordWriter]","[write->writeObject]"
65,"-","[140]","[org.hipi.mapreduce.BinaryOutputFormat$BinaryRecordWriter]","[writeObject->]"
66,"-","[141]","[org.hipi.mapreduce.BinaryOutputFormat,org.hipi.mapreduce.BinaryOutputFormat$BinaryRecordWriter]","[getRecordWriter-><init>]"
67,"-","[142]","[org.hipi.opencv.OpenCVMatWritable]","[<init>->setMat]"
68,"-","[143]","[org.hipi.opencv.OpenCVMatWritable,org.hipi.util.ByteUtils]","[readFields->byteArrayToIntArray,byteArrayToShortArray,byteArrayToDoubleArray,byteArrayToFloatArray]"
69,"-","[144]","[org.hipi.opencv.OpenCVMatWritable]","[write->]"
70,"-","[145]","[org.hipi.opencv.OpenCVUtils,org.hipi.util.ByteUtils]","[convertRasterImageToMat->generateOpenCVType,byteArrayToShortArray,byteArrayToIntArray,byteArrayToDoubleArray,byteArrayToFloatArray]"
71,"-","[146]","[org.hipi.util.ByteUtils]","[byteArrayToInt->byteArrayToInt]"
